
load @termsurf/snow/base/list
  take form list

load @termsurf/snow/base/native-string
  take form native-string

load @termsurf/snow/jira/openapi.json/base/filter
  take form filter

boot get-favourite-filters, name <getFavouriteFilters>
  deed get
  note <Returns the visible favorite filters of the user. This operation can be accessed anonymously. **[Permissions](#permissions) required:** A favorite filter is only visible to the user where the filter is: * owned by the user. * shared with a group that the user is a member of. * shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for. * shared with a public project. * shared with the public. For example, if the user favorites a public filter that is subsequently made private that filter is not returned by this operation.>

  take expand
    like native-string
    note <Use [expand](#expansion) to include additional information about filter in the response. This parameter accepts a comma-separated list. Expand options include: * `sharedUsers` Returns the users that the filter is shared with. This includes users that can browse projects that the filter is shared with. If you don't specify `sharedUsers`, then the `sharedUsers` object is returned but it doesn't list any users. The list of users returned is limited to 1000, to access additional users append `[start-index:end-index]` to the expand request. For example, to access the next 1000 users, use `?expand=sharedUsers[1001:2000]`. * `subscriptions` Returns the users that are subscribed to the filter. If you don't specify `subscriptions`, the `subscriptions` object is returned but it doesn't list any subscriptions. The list of subscriptions returned is limited to 1000, to access additional subscriptions append `[start-index:end-index]` to the expand request. For example, to access the next 1000 subscriptions, use `?expand=subscriptions[1001:2000]`.>
    void take

  line </rest/api/3/filter/favourite>

  find <expand>, loan expand

  loot 200
    seed json
      like list
        like filter
    note <Returned if the request is successful.>
  loot 401
    note <Returned if the authentication credentials are incorrect or missing.>
