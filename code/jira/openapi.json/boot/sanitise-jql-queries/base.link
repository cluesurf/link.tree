
load @nerdbond/snow/jira/openapi.json/base/error-collection
  take form error-collection

load @nerdbond/snow/jira/openapi.json/base/sanitized-jql-queries
  take form sanitized-jql-queries

boot sanitise-jql-queries, name <sanitiseJqlQueries>
  deed post
  note <Sanitizes one or more JQL queries by converting readable details into IDs where a user doesn't have permission to view the entity. For example, if the query contains the clause *project = 'Secret project'*, and a user does not have browse permission for the project "Secret project", the sanitized query replaces the clause with *project = 12345"* (where 12345 is the ID of the project). If a user has the required permission, the clause is not sanitized. If the account ID is null, sanitizing is performed for an anonymous user. Note that sanitization doesn't make the queries GDPR-compliant, because it doesn't remove user identifiers (username or user key). If you need to make queries GDPR-compliant, use [Convert user identifiers to account IDs in JQL queries](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-jql/#api-rest-api-3-jql-sanitize-post). Before sanitization each JQL query is parsed. The queries are returned in the same order that they were passed. **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).>

  take jql-queries-to-sanitize, like jql-queries-to-sanitize

  line </rest/api/3/jql/sanitize>

  seed json, loan jql-queries-to-sanitize

  loot 200
    seed json, like sanitized-jql-queries
    note <Returned if the request is successful.>
  loot 400
    seed json, like error-collection
    note <Returned if the request is invalid.>
  loot 401
    seed json, like error-collection
    note <Returned if the authentication credentials are incorrect or missing.>
  loot 403
    seed json, like error-collection
    note <Returned if the user does not have the necessary permission.>
