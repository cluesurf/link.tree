
load @termsurf/snow/base/native-string
  take form native-string

load @termsurf/snow/jira/openapi.json/base/remote-issue-link
  take form remote-issue-link

boot get-remote-issue-links, name <getRemoteIssueLinks>
  deed get
  note <Returns the remote issue links for an issue. When a remote issue link global ID is provided the record with that global ID is returned, otherwise all remote issue links are returned. Where a global ID includes reserved URL characters these must be escaped in the request. For example, pass `system=http://www.mycompany.com/support&id=1` as `system%3Dhttp%3A%2F%2Fwww.mycompany.com%2Fsupport%26id%3D1`. This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM). This operation can be accessed anonymously. **[Permissions](#permissions) required:** * *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in. * If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.>

  take issue-id-or-key
    like native-string
    note <The ID or key of the issue.>
  take global-id
    like native-string
    note <The global ID of the remote issue link.>
    void take

  line </rest/api/3/issue/{issue-id-or-key}/remotelink>

  find <globalId>, loan global-id

  loot 200
    seed json, like remote-issue-link
    note <Returned if the request is successful.>
  loot 400
    note <Returned if the request is invalid.>
  loot 401
    note <Returned if the authentication credentials are incorrect or missing.>
  loot 403
    note <Returned if issue linking is disabled.>
  loot 404
    note <Returned if the issue or remote issue link is not found or the user does not have permission to view the issue.>
