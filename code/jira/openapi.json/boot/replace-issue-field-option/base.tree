
load @termsurf/snow/base/native-boolean
  take form native-boolean

load @termsurf/snow/base/native-integer
  take form native-integer

load @termsurf/snow/base/native-string
  take form native-string

load @termsurf/snow/jira/openapi.json/base/task-progress-bean-remove-option-from-issues-result
  take form task-progress-bean-remove-option-from-issues-result

boot replace-issue-field-option, name <replaceIssueFieldOption>
  deed delete
  note <Deselects an issue-field select-list option from all issues where it is selected. A different option can be selected to replace the deselected option. The update can also be limited to a smaller set of issues by using a JQL query. Connect app users with admin permissions (from user permissions and app scopes) and Forge app users with the `manage:jira-configuration` scope can override the screen security configuration using `overrideScreenSecurity` and `overrideEditableFlag`. This is an [asynchronous operation](#async). The response object contains a link to the long-running task. Note that this operation **only works for issue field select list options added by Connect apps**, it cannot be used with issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource. **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg). Jira permissions are not required for the app providing the field.>

  take field-key
    like native-string
    note <The field key is specified in the following format: **$(app-key)\_\_$(field-key)**. For example, *example-add-on\_\_example-issue-field*. To determine the `fieldKey` value, do one of the following: * open the app's plugin descriptor, then **app-key** is the key at the top and **field-key** is the key in the `jiraIssueFields` module. **app-key** can also be found in the app listing in the Atlassian Universal Plugin Manager. * run [Get fields](#api-rest-api-3-field-get) and in the field details the value is returned in `key`. For example, `"key": "teams-add-on__team-issue-field"`>
  take option-id
    like native-integer
      bind lace, lace int64
    note <The ID of the option to be deselected.>
  take replace-with
    like native-integer
      bind lace, lace int64
    note <The ID of the option that will replace the currently selected option.>
    void take
  take jql
    like native-string
    note <A JQL query that specifies the issues to be updated. For example, *project=10000*.>
    void take
  take override-screen-security
    like native-boolean
    note <Whether screen security is overridden to enable hidden fields to be edited. Available to Connect app users with admin permission and Forge app users with the `manage:jira-configuration` scope.>
    void take
  take override-editable-flag
    like native-boolean
    note <Whether screen security is overridden to enable uneditable fields to be edited. Available to Connect app users with admin permission and Forge app users with the `manage:jira-configuration` scope.>
    void take

  line </rest/api/3/field/{field-key}/option/{option-id}/issue>

  find <replaceWith>, loan replace-with
  find <jql>, loan jql
  find <overrideScreenSecurity>, loan override-screen-security
  find <overrideEditableFlag>, loan override-editable-flag

  loot 303
    seed json, like task-progress-bean-remove-option-from-issues-result
    note <Returned if the long-running task to deselect the option is started.>
  loot 400
    note <Returned if the request is not valid.>
  loot 403
    seed json
    note <Returned if the user does not have the necessary permission.>
  loot 404
    note <Returned if the field is not found or does not support options, or the options to be replaced are not found.>
