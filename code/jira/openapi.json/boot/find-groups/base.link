
load @textsurf/snow/base/list
  take form list

load @textsurf/snow/base/native-integer
  take form native-integer

load @textsurf/snow/base/native-string
  take form native-string

load @textsurf/snow/jira/openapi.json/base/found-groups
  take form found-groups

boot find-groups, name <findGroups>
  deed get
  note <Returns a list of groups whose names contain a query string. A list of group names can be provided to exclude groups from the results. The primary use case for this resource is to populate a group picker suggestions list. To this end, the returned object includes the `html` field where the matched query term is highlighted in the group name with the HTML strong tag. Also, the groups list is wrapped in a response object that contains a header for use in the picker, specifically *Showing X of Y matching groups*. The list returns with the groups sorted. If no groups match the list criteria, an empty list is returned. This operation can be accessed anonymously. **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg). Anonymous calls and calls by users without the required permission return an empty list.>

  take account-id
    like native-string
    note <This parameter is deprecated, setting it does not affect the results. To find groups containing a particular user, use [Get user groups](#api-rest-api-3-user-groups-get).>
    void take
  take query
    like native-string
    note <The string to find in group names.>
    void take
  take exclude
    like list
      like native-string
    note <As a group's name can change, use of `excludeGroupIds` is recommended to identify a group. A group to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, `exclude=group1&exclude=group2`. This parameter cannot be used with the `excludeGroupIds` parameter.>
    void take
  take exclude-id
    like list
      like native-string
    note <A group ID to exclude from the result. To exclude multiple groups, provide an ampersand-separated list. For example, `excludeId=group1-id&excludeId=group2-id`. This parameter cannot be used with the `excludeGroups` parameter.>
    void take
  take max-results
    like native-integer
      bind lace, lace int32
    note <The maximum number of groups to return. The maximum number of groups that can be returned is limited by the system property `jira.ajax.autocomplete.limit`.>
    void take
  take user-name
    like native-string
    note <This parameter is no longer available. See the [deprecation notice](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.>
    void take

  line </rest/api/3/groups/picker>

  find <accountId>, loan account-id
  find <query>, loan query
  find <exclude>, loan exclude
  find <excludeId>, loan exclude-id
  find <maxResults>, loan max-results
  find <userName>, loan user-name

  loot 200
    seed json, like found-groups
    note <Returned if the request is successful.>
