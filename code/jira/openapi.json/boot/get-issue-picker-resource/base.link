
load @textsurf/snow/base/native-boolean
  take form native-boolean

load @textsurf/snow/base/native-string
  take form native-string

load @textsurf/snow/jira/openapi.json/base/issue-picker-suggestions
  take form issue-picker-suggestions

boot get-issue-picker-resource, name <getIssuePickerResource>
  deed get
  note <Returns lists of issues matching a query string. Use this resource to provide auto-completion suggestions when the user is looking for an issue using a word or string. This operation returns two lists: * `History Search` which includes issues from the user's history of created, edited, or viewed issues that contain the string in the `query` parameter. * `Current Search` which includes issues that match the JQL expression in `currentJQL` and contain the string in the `query` parameter. This operation can be accessed anonymously. **[Permissions](#permissions) required:** None.>

  take query
    like native-string
    note <A string to match against text fields in the issue such as title, description, or comments.>
    void take
  take current-jql
    like native-string
    note <A JQL query defining a list of issues to search for the query term. Note that `username` and `userkey` cannot be used as search terms for this parameter, due to privacy reasons. Use `accountId` instead.>
    void take
  take current-issue-key
    like native-string
    note <The key of an issue to exclude from search results. For example, the issue the user is viewing when they perform this query.>
    void take
  take current-project-id
    like native-string
    note <The ID of a project that suggested issues must belong to.>
    void take
  take show-sub-tasks
    like native-boolean
    note <Indicate whether to include subtasks in the suggestions list.>
    void take
  take show-sub-task-parent
    like native-boolean
    note <When `currentIssueKey` is a subtask, whether to include the parent issue in the suggestions if it matches the query.>
    void take

  line </rest/api/3/issue/picker>

  find <query>, loan query
  find <currentJQL>, loan current-jql
  find <currentIssueKey>, loan current-issue-key
  find <currentProjectId>, loan current-project-id
  find <showSubTasks>, loan show-sub-tasks
  find <showSubTaskParent>, loan show-sub-task-parent

  loot 200
    seed json, like issue-picker-suggestions
    note <Returned if the request is successful.>
  loot 401
    note <Returned if the authentication credentials are incorrect or missing.>
