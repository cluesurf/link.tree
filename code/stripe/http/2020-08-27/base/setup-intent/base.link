
form setup-intent, name <setup_intent>
  note <A SetupIntent guides you through the process of setting up and saving a customer&#39;s payment credentials for future payments. For example, you could use a SetupIntent to set up and save your customer&#39;s card without immediately collecting a payment. Later, you can use [PaymentIntents](https://stripe.com/docs/api#payment_intents) to drive the payment flow. Create a SetupIntent as soon as you&#39;re ready to collect your customer&#39;s payment credentials. Do not maintain long-lived, unconfirmed SetupIntents as they may no longer be valid. The SetupIntent then transitions through multiple [statuses](https://stripe.com/docs/payments/intents#intent-statuses) as it guides you through the setup process. Successful SetupIntents result in payment credentials that are optimized for future payments. For example, cardholders in [certain regions](/guides/strong-customer-authentication) may need to be run through [Strong Customer Authentication](https://stripe.com/docs/strong-customer-authentication) at the time of payment method collection in order to streamline later [off-session payments](https://stripe.com/docs/payments/setup-intents). If the SetupIntent is used with a [Customer](https://stripe.com/docs/api#setup_intent_object-customer), upon success, it will automatically attach the resulting payment method to that Customer. We recommend using SetupIntents or [setup_future_usage](https://stripe.com/docs/api#payment_intent_object-setup_future_usage) on PaymentIntents to save payment methods in order to prevent saving invalid or unoptimized payment methods. By using SetupIntents, you ensure that your customers experience the minimum set of required friction, even as regulations change over time. Related guide: [Setup Intents API](https://stripe.com/docs/payments/setup-intents).>
  take application, name <application>
    void take
  take cancellation-reason, name <cancellation_reason>
    void take
  take client-secret, name <client_secret>
    void take
  take created, name <created>
  take customer, name <customer>
    void take
  take description, name <description>
    void take
  take id, name <id>
  take last-setup-error, name <last_setup_error>
    void take
  take latest-attempt, name <latest_attempt>
    void take
  take livemode, name <livemode>
  take mandate, name <mandate>
    void take
  take metadata, name <metadata>
    void take
  take next-action, name <next_action>
    void take
  take object, name <object>
  take on-behalf-of, name <on_behalf_of>
    void take
  take payment-method, name <payment_method>
    void take
  take payment-method-options, name <payment_method_options>
    void take
  take payment-method-types, name <payment_method_types>
  take single-use-mandate, name <single_use_mandate>
    void take
  take status, name <status>
  take usage, name <usage>