
load @nerdbond/snow/base/native-string
  take form native-string

load @nerdbond/snow/stripe.com/2020-08-27/base/error
  take form error

load @nerdbond/snow/stripe.com/2020-08-27/base/payment-method
  take form payment-method

load @nerdbond/snow/stripe.com/2020-08-27/base/post-payment-methods-payment-method-attach-body
  take form post-payment-methods-payment-method-attach-body

boot post-payment-methods-payment-method-attach, name <PostPaymentMethodsPaymentMethodAttach>
  deed post
  note <Attaches a PaymentMethod object to a Customer.

To attach a new PaymentMethod to a customer for future payments, we recommend you use a [SetupIntent](/docs/api/setup_intents) or a PaymentIntent with [setup_future_usage](/docs/api/payment_intents/create#create_payment_intent-setup_future_usage). These approaches will perform any necessary steps to ensure that the PaymentMethod can be used in a future payment. Using the `/v1/payment_methods/:id/attach` endpoint does not ensure that future payments can be made with the attached PaymentMethod. See [Optimizing cards for future payments](/docs/payments/payment-intents#future-usage) for more information about setting up future payments.

To use this PaymentMethod as the default for invoice or subscription payments, set [`invoice_settings.default_payment_method`](/docs/api/customers/update#update_customer-invoice_settings-default_payment_method), on the Customer to the PaymentMethodâ€™s ID.>

  take payment-method
    like native-string
  take post-payment-methods-payment-method-attach-body, like post-payment-methods-payment-method-attach-body

  line </v1/payment_methods/{payment-method}/attach>

  seed x-www-form-urlencoded, loan post-payment-methods-payment-method-attach-body

  loot 200
    seed json, like payment-method
    note <Successful response.>
  loot fall
    seed json, like error
    note <Error response.>
