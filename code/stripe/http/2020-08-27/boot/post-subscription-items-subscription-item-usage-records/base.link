
load @wavebond/snow/base/native-string
  take form native-string

load @wavebond/snow/stripe.com/2020-08-27/base/error
  take form error

load @wavebond/snow/stripe.com/2020-08-27/base/post-subscription-items-subscription-item-usage-records-body
  take form post-subscription-items-subscription-item-usage-records-body

load @wavebond/snow/stripe.com/2020-08-27/base/usage-record
  take form usage-record

boot post-subscription-items-subscription-item-usage-records, name <PostSubscriptionItemsSubscriptionItemUsageRecords>
  deed post
  note <Creates a usage record for a specified subscription item and date, and fills it with a quantity.

Usage records provide `quantity` information that Stripe uses to track how much a customer is using your service. With usage information and the pricing model set up by the [metered billing](https://stripe.com/docs/billing/subscriptions/metered-billing) plan, Stripe helps you send accurate invoices to your customers.

The default calculation for usage is to add up all the `quantity` values of the usage records within a billing period. You can change this default behavior with the billing planâ€™s `aggregate_usage` [parameter](/docs/api/plans/create#create_plan-aggregate_usage). When there is more than one usage record with the same timestamp, Stripe adds the `quantity` values together. In most cases, this is the desired resolution, however, you can change this behavior with the `action` parameter.

The default pricing model for metered billing is [per-unit pricing](/docs/api/plans/object#plan_object-billing_scheme). For finer granularity, you can configure metered billing to have a [tiered pricing](https://stripe.com/docs/billing/subscriptions/tiers) model.>

  take subscription-item
    like native-string
  take post-subscription-items-subscription-item-usage-records-body, like post-subscription-items-subscription-item-usage-records-body

  line </v1/subscription_items/{subscription-item}/usage_records>

  seed x-www-form-urlencoded, loan post-subscription-items-subscription-item-usage-records-body

  loot 200
    seed json, like usage-record
    note <Successful response.>
  loot fall
    seed json, like error
    note <Error response.>
