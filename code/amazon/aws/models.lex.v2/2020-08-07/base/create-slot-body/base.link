
load @nerdbond/snow/amazonaws.com/models.lex.v2/2020-08-07/base/obfuscation-setting-type
  take form obfuscation-setting-type

load @nerdbond/snow/amazonaws.com/models.lex.v2/2020-08-07/base/prompt-specification
  take form prompt-specification

load @nerdbond/snow/amazonaws.com/models.lex.v2/2020-08-07/base/sample-utterances-list
  take form sample-utterances-list

load @nerdbond/snow/amazonaws.com/models.lex.v2/2020-08-07/base/slot-constraint
  take form slot-constraint

load @nerdbond/snow/amazonaws.com/models.lex.v2/2020-08-07/base/slot-default-value-specification
  take form slot-default-value-specification

load @nerdbond/snow/amazonaws.com/models.lex.v2/2020-08-07/base/wait-and-continue-specification
  take form wait-and-continue-specification

load @nerdbond/snow/base/boolean
  take form boolean

form create-slot-body
  take slot-name, name <slotName>
  take description, name <description>
    void take
  take slot-type-id, name <slotTypeId>
  take value-elicitation-setting, name <valueElicitationSetting>
    like form
      take default-value-specification, name <defaultValueSpecification>
        like slot-default-value-specification
        void take
        note <A list of default values for a slot. Default values are used when Amazon Lex hasn't determined a value for a slot. You can specify default values from context variables, sesion attributes, and defined values.>
      take slot-constraint, name <slotConstraint>
        like slot-constraint
        void take
        note <Specifies whether the slot is required or optional.>
      take prompt-specification, name <promptSpecification>
        like prompt-specification
        void take
        note <The prompt that Amazon Lex uses to elicit the slot value from the user.>
      take sample-utterances, name <sampleUtterances>
        like sample-utterances-list
        void take
        note <If you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy. This is optional. In most cases, Amazon Lex is capable of understanding user utterances.>
      take wait-and-continue-specification, name <waitAndContinueSpecification>
        like wait-and-continue-specification
        void take
  take obfuscation-setting, name <obfuscationSetting>
    like form
      take obfuscation-setting-type, name <obfuscationSettingType>
        like obfuscation-setting-type
        void take
        note <Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.>
    void take
  take multiple-values-setting, name <multipleValuesSetting>
    like form
      take allow-multiple-values, name <allowMultipleValues>
        like boolean
        void take
        note <Indicates whether a slot can return multiple values. When `true`, the slot may return more than one value in a response. When `false`, the slot returns only a single value.

Multi-value slots are only available in the en-US locale. If you set this value to `true` in any other locale, Amazon Lex throws a `ValidationException`.

If the `allowMutlipleValues` is not set, the default value is `false`.>
    void take