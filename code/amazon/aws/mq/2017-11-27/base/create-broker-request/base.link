
load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/authentication-strategy
  take form authentication-strategy

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/broker-storage-type
  take form broker-storage-type

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/configuration-id
  take form configuration-id

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/deployment-mode
  take form deployment-mode

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/encryption-options
  take form encryption-options

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/engine-type
  take form engine-type

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/ldap-server-metadata-input
  take form ldap-server-metadata-input

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/list-of-string
  take form list-of-string

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/list-of-user
  take form list-of-user

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/logs
  take form logs

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/map-of-string
  take form map-of-string

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/weekly-start-time
  take form weekly-start-time

load @drumwork/snow/base/boolean
  take form boolean

load @drumwork/snow/base/string
  take form string

form create-broker-request, name <CreateBrokerRequest>
  note <Creates a broker using the specified properties.>
  take authentication-strategy, name <AuthenticationStrategy>
    like authentication-strategy
    void take
    note <Optional. The authentication strategy used to secure the broker. The default is SIMPLE.>
    host xml
      host name, text <authenticationStrategy>
  take auto-minor-version-upgrade, name <AutoMinorVersionUpgrade>
    like boolean
    note <Enables automatic upgrades to new minor versions for brokers, as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window of the broker or after a manual broker reboot. Set to true by default, if no value is specified.>
    host xml
      host name, text <autoMinorVersionUpgrade>
  take broker-name, name <BrokerName>
    like string
    note <Required. The broker's name. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain white spaces, brackets, wildcard characters, or special characters.>
    host xml
      host name, text <brokerName>
  take configuration, name <Configuration>
    like configuration-id
    void take
    note <A list of information about the configuration.>
    host xml
      host name, text <configuration>
  take creator-request-id, name <CreatorRequestId>
    like string
    void take
    note <The unique ID that the requester receives for the created broker. Amazon MQ passes your ID with the API action. Note: We recommend using a Universally Unique Identifier (UUID) for the creatorRequestId. You may omit the creatorRequestId if your application doesn't require idempotency.>
    host xml
      host name, text <creatorRequestId>
  take deployment-mode, name <DeploymentMode>
    like deployment-mode
    note <Required. The broker's deployment mode.>
    host xml
      host name, text <deploymentMode>
  take encryption-options, name <EncryptionOptions>
    like encryption-options
    void take
    note <Encryption options for the broker. Does not apply to RabbitMQ brokers.>
    host xml
      host name, text <encryptionOptions>
  take engine-type, name <EngineType>
    like engine-type
    note <Required. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ.>
    host xml
      host name, text <engineType>
  take engine-version, name <EngineVersion>
    like string
    note <Required. The broker engine's version. For a list of supported engine versions, see [Supported engines](https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html).>
    host xml
      host name, text <engineVersion>
  take host-instance-type, name <HostInstanceType>
    like string
    note <Required. The broker's instance type.>
    host xml
      host name, text <hostInstanceType>
  take ldap-server-metadata, name <LdapServerMetadata>
    like ldap-server-metadata-input
    void take
    note <Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker. Does not apply to RabbitMQ brokers.>
    host xml
      host name, text <ldapServerMetadata>
  take logs, name <Logs>
    like logs
    void take
    note <Enables Amazon CloudWatch logging for brokers.>
    host xml
      host name, text <logs>
  take maintenance-window-start-time, name <MaintenanceWindowStartTime>
    like weekly-start-time
    void take
    note <The parameters that determine the WeeklyStartTime.>
    host xml
      host name, text <maintenanceWindowStartTime>
  take publicly-accessible, name <PubliclyAccessible>
    like boolean
    note <Enables connections from applications outside of the VPC that hosts the broker's subnets. Set to false by default, if no value is provided.>
    host xml
      host name, text <publiclyAccessible>
  take security-groups, name <SecurityGroups>
    like list-of-string
    void take
    note <The list of rules (1 minimum, 125 maximum) that authorize connections to brokers.>
    host xml
      host name, text <securityGroups>
  take storage-type, name <StorageType>
    like broker-storage-type
    void take
    note <The broker's storage type.>
    host xml
      host name, text <storageType>
  take subnet-ids, name <SubnetIds>
    like list-of-string
    void take
    note <The list of groups that define which subnets and IP ranges the broker can use from different Availability Zones. If you specify more than one subnet, the subnets must be in different Availability Zones. Amazon MQ will not be able to create VPC endpoints for your broker with multiple subnets in the same Availability Zone. A SINGLE_INSTANCE deployment requires one subnet (for example, the default subnet). An ACTIVE_STANDBY_MULTI_AZ Amazon MQ for ActiveMQ deployment requires two subnets. A CLUSTER_MULTI_AZ Amazon MQ for RabbitMQ deployment has no subnet requirements when deployed with public accessibility. Deployment without public accessibility requires at least one subnet.

If you specify subnets in a [shared VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-sharing.html) for a RabbitMQ broker, the associated VPC to which the specified subnets belong must be owned by your AWS account. Amazon MQ will not be able to create VPC endpoints in VPCs that are not owned by your AWS account.>
    host xml
      host name, text <subnetIds>
  take tags, name <Tags>
    like map-of-string
    void take
    note <Create tags when creating the broker.>
    host xml
      host name, text <tags>
  take users, name <Users>
    like list-of-user
    note <Required. The list of broker users (persons or applications) who can access queues and topics. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long.

Amazon MQ for RabbitMQ

When you create an Amazon MQ for RabbitMQ broker, one and only one administrative user is accepted and created when a broker is first provisioned. All subsequent broker users are created by making RabbitMQ API calls directly to brokers or via the RabbitMQ web console.>
    host xml
      host name, text <users>