
load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/day-of-week
  take form day-of-week

load @drumwork/snow/amazonaws.com/mq/2017-11-27/base/list-of-string
  take form list-of-string

load @drumwork/snow/base/boolean
  take form boolean

load @drumwork/snow/base/integer
  take form integer

load @drumwork/snow/base/string
  take form string

form update-broker-body
  take authentication-strategy, name <authenticationStrategy>
    void take
  take auto-minor-version-upgrade, name <autoMinorVersionUpgrade>
    void take
  take configuration, name <configuration>
    like form
      take id, name <Id>
        like string
        void take
        note <Required. The unique ID that Amazon MQ generates for the configuration.>
        host xml
          host name, text <id>
      take revision, name <Revision>
        like integer
        void take
        note <The revision number of the configuration.>
        host xml
          host name, text <revision>
    void take
  take engine-version, name <engineVersion>
    void take
  take host-instance-type, name <hostInstanceType>
    void take
  take ldap-server-metadata, name <ldapServerMetadata>
    like form
      take hosts, name <Hosts>
        like list-of-string
        void take
        note <Specifies the location of the LDAP server such as AWS Directory Service for Microsoft Active Directory . Optional failover server.>
        host xml
          host name, text <hosts>
      take role-base, name <RoleBase>
        like string
        void take
        note <The distinguished name of the node in the directory information tree (DIT) to search for roles or groups. For example, ou=group, ou=corp, dc=corp, dc=example, dc=com.>
        host xml
          host name, text <roleBase>
      take role-name, name <RoleName>
        like string
        void take
        note <Specifies the LDAP attribute that identifies the group name attribute in the object returned from the group membership query.>
        host xml
          host name, text <roleName>
      take role-search-matching, name <RoleSearchMatching>
        like string
        void take
        note <The LDAP search filter used to find roles within the roleBase. The distinguished name of the user matched by userSearchMatching is substituted into the {0} placeholder in the search filter. The client's username is substituted into the {1} placeholder. For example, if you set this option to (member=uid={1})for the user janedoe, the search filter becomes (member=uid=janedoe) after string substitution. It matches all role entries that have a member attribute equal to uid=janedoe under the subtree selected by the roleBase.>
        host xml
          host name, text <roleSearchMatching>
      take role-search-subtree, name <RoleSearchSubtree>
        like boolean
        void take
        note <The directory search scope for the role. If set to true, scope is to search the entire subtree.>
        host xml
          host name, text <roleSearchSubtree>
      take service-account-password, name <ServiceAccountPassword>
        like string
        void take
        note <Service account password. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example, dc=com.>
        host xml
          host name, text <serviceAccountPassword>
      take service-account-username, name <ServiceAccountUsername>
        like string
        void take
        note <Service account username. A service account is an account in your LDAP server that has access to initiate a connection. For example, cn=admin,dc=corp, dc=example, dc=com.>
        host xml
          host name, text <serviceAccountUsername>
      take user-base, name <UserBase>
        like string
        void take
        note <Select a particular subtree of the directory information tree (DIT) to search for user entries. The subtree is specified by a DN, which specifies the base node of the subtree. For example, by setting this option to ou=Users,ou=corp, dc=corp, dc=example, dc=com, the search for user entries is restricted to the subtree beneath ou=Users, ou=corp, dc=corp, dc=example, dc=com.>
        host xml
          host name, text <userBase>
      take user-role-name, name <UserRoleName>
        like string
        void take
        note <Specifies the name of the LDAP attribute for the user group membership.>
        host xml
          host name, text <userRoleName>
      take user-search-matching, name <UserSearchMatching>
        like string
        void take
        note <The LDAP search filter used to find users within the userBase. The client's username is substituted into the {0} placeholder in the search filter. For example, if this option is set to (uid={0}) and the received username is janedoe, the search filter becomes (uid=janedoe) after string substitution. It will result in matching an entry like uid=janedoe, ou=Users,ou=corp, dc=corp, dc=example, dc=com.>
        host xml
          host name, text <userSearchMatching>
      take user-search-subtree, name <UserSearchSubtree>
        like boolean
        void take
        note <The directory search scope for the user. If set to true, scope is to search the entire subtree.>
        host xml
          host name, text <userSearchSubtree>
    void take
  take logs, name <logs>
    like form
      take audit, name <Audit>
        like boolean
        void take
        note <Enables audit logging. Every user management action made using JMX or the ActiveMQ Web Console is logged. Does not apply to RabbitMQ brokers.>
        host xml
          host name, text <audit>
      take general, name <General>
        like boolean
        void take
        note <Enables general logging.>
        host xml
          host name, text <general>
    void take
  take maintenance-window-start-time, name <maintenanceWindowStartTime>
    like form
      take day-of-week, name <DayOfWeek>
        like day-of-week
        void take
        note <Required. The day of the week.>
        host xml
          host name, text <dayOfWeek>
      take time-of-day, name <TimeOfDay>
        like string
        void take
        note <Required. The time, in 24-hour format.>
        host xml
          host name, text <timeOfDay>
      take time-zone, name <TimeZone>
        like string
        void take
        note <The time zone, UTC by default, in either the Country/City format, or the UTC offset format.>
        host xml
          host name, text <timeZone>
    void take
  take security-groups, name <securityGroups>
    void take