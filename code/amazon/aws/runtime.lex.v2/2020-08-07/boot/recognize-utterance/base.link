
load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/access-denied-exception
  take form access-denied-exception

load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/bad-gateway-exception
  take form bad-gateway-exception

load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/conflict-exception
  take form conflict-exception

load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/dependency-failed-exception
  take form dependency-failed-exception

load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/internal-server-exception
  take form internal-server-exception

load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/recognize-utterance-body
  take form recognize-utterance-body

load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/recognize-utterance-response
  take form recognize-utterance-response

load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/resource-not-found-exception
  take form resource-not-found-exception

load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/throttling-exception
  take form throttling-exception

load @nerdbond/snow/amazonaws.com/runtime.lex.v2/2020-08-07/base/validation-exception
  take form validation-exception

load @nerdbond/snow/base/native-string
  take form native-string

boot recognize-utterance, name <RecognizeUtterance>
  deed post
  note <Sends user input to Amazon Lex V2. You can send text or speech. Clients use this API to send text and audio requests to Amazon Lex V2 at runtime. Amazon Lex V2 interprets the user input using the machine learning model built for the bot.

The following request fields must be compressed with gzip and then base64 encoded before you send them to Amazon Lex V2.

- requestAttributes

- sessionState

The following response fields are compressed using gzip and then base64 encoded by Amazon Lex V2. Before you can use these fields, you must decode and decompress them.

- inputTranscript

- interpretations

- messages

- requestAttributes

- sessionState

The example contains a Java application that compresses and encodes a Java object to send to Amazon Lex V2, and a second that decodes and decompresses a response from Amazon Lex V2.>

  take bot-id
    like native-string
    note <The identifier of the bot that should receive the request.>
  take bot-alias-id
    like native-string
    note <The alias identifier in use for the bot that should receive the request.>
  take locale-id
    like native-string
    note <The locale where the session is in use.>
  take session-id
    like native-string
    note <The identifier of the session in use.>
  take x-amz-lex-session-state
    like native-string
    note <Sets the state of the session with the user. You can use this to set the current intent, attributes, context, and dialog action. Use the dialog action to determine the next step that Amazon Lex V2 should use in the conversation with the user.

The `sessionState` field must be compressed using gzip and then base64 encoded before sending to Amazon Lex V2.>
    void take
  take x-amz-lex-request-attributes
    like native-string
    note <Request-specific information passed between the client application and Amazon Lex V2

The namespace `x-amz-lex:` is reserved for special attributes. Don't create any request attributes for prefix `x-amz-lex:`.

The `requestAttributes` field must be compressed using gzip and then base64 encoded before sending to Amazon Lex V2.>
    void take
  take content-type
    like native-string
    note <Indicates the format for audio input or that the content is text. The header must start with one of the following prefixes:

- PCM format, audio data must be in little-endian byte order.

  - audio/l16; rate=16000; channels=1

  - audio/x-l16; sample-rate=16000; channel-count=1

  - audio/lpcm; sample-rate=8000; sample-size-bits=16; channel-count=1; is-big-endian=false

- Opus format

  - audio/x-cbr-opus-with-preamble;preamble-size=0;bit-rate=256000;frame-size-milliseconds=4

- Text format

  - text/plain; charset=utf-8>
  take response-content-type
    like native-string
    note <The message that Amazon Lex V2 returns in the response can be either text or speech based on the `responseContentType` value.

- If the value is `text/plain;charset=utf-8`, Amazon Lex V2 returns text in the response.

- If the value begins with `audio/`, Amazon Lex V2 returns speech in the response. Amazon Lex V2 uses Amazon Polly to generate the speech using the configuration that you specified in the `requestContentType` parameter. For example, if you specify `audio/mpeg` as the value, Amazon Lex V2 returns speech in the MPEG format.

- If the value is `audio/pcm`, the speech returned is `audio/pcm` at 16 KHz in 16-bit, little-endian format.

- The following are the accepted values:

  - audio/mpeg

  - audio/ogg

  - audio/pcm (16 KHz)

  - audio/* (defaults to mpeg)

  - text/plain; charset=utf-8>
    void take
  take recognize-utterance-body, like recognize-utterance-body

  line </bots/{bot-id}/botAliases/{bot-alias-id}/botLocales/{locale-id}/sessions/{session-id}/utterance#Content-Type>

  hint <x-amz-lex-session-state>, loan x-amz-lex-session-state
  hint <x-amz-lex-request-attributes>, loan x-amz-lex-request-attributes
  hint <Content-Type>, loan content-type
  hint <Response-Content-Type>, loan response-content-type

  seed json, loan recognize-utterance-body

  loot 200
    seed json, like recognize-utterance-response
    note <Success>
  loot 480
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 481
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 482
    seed json, like validation-exception
    note <ValidationException>
  loot 483
    seed json, like throttling-exception
    note <ThrottlingException>
  loot 484
    seed json, like internal-server-exception
    note <InternalServerException>
  loot 485
    seed json, like conflict-exception
    note <ConflictException>
  loot 486
    seed json, like dependency-failed-exception
    note <DependencyFailedException>
  loot 487
    seed json, like bad-gateway-exception
    note <BadGatewayException>