
load @drumwork/snow/amazonaws.com/kms/2014-11-01/base/dependency-timeout-exception
  take form dependency-timeout-exception

load @drumwork/snow/amazonaws.com/kms/2014-11-01/base/invalid-arn-exception
  take form invalid-arn-exception

load @drumwork/snow/amazonaws.com/kms/2014-11-01/base/invalid-grant-id-exception
  take form invalid-grant-id-exception

load @drumwork/snow/amazonaws.com/kms/2014-11-01/base/invalid-marker-exception
  take form invalid-marker-exception

load @drumwork/snow/amazonaws.com/kms/2014-11-01/base/kms-internal-exception
  take form kms-internal-exception

load @drumwork/snow/amazonaws.com/kms/2014-11-01/base/kms-invalid-state-exception
  take form kms-invalid-state-exception

load @drumwork/snow/amazonaws.com/kms/2014-11-01/base/list-grants-response
  take form list-grants-response

load @drumwork/snow/amazonaws.com/kms/2014-11-01/base/not-found-exception
  take form not-found-exception

load @drumwork/snow/base/native-string
  take form native-string

boot list-grants, name <ListGrants>
  note <Gets a list of all grants for the specified KMS key.

You must specify the KMS key in all requests. You can filter the grant list by grant ID or grantee principal.

For detailed information about grants, including grant terminology, see [Using grants](https://docs.aws.amazon.com/kms/latest/developerguide/grants.html) in the __Key Management Service Developer Guide__ . For examples of working with grants in several programming languages, see [Programming grants](https://docs.aws.amazon.com/kms/latest/developerguide/programming-grants.html).

The `GranteePrincipal` field in the `ListGrants` response usually contains the user or role designated as the grantee principal in the grant. However, when the grantee principal in the grant is an Amazon Web Services service, the `GranteePrincipal` field contains the [service principal](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_elements_principal.html#principal-services), which might represent several different grantee principals.

**Cross-account use**: Yes. To perform this operation on a KMS key in a different Amazon Web Services account, specify the key ARN in the value of the `KeyId` parameter.

**Required permissions**: [kms:ListGrants](https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html) (key policy)

**Related operations:** - CreateGrant

- ListRetirableGrants

- RetireGrant

- RevokeGrant>

  take x-amz-target
    like native-string
  take limit
    like native-string
    note <Pagination limit>
    void take
  take marker
    like native-string
    note <Pagination token>
    void take
  take list-grants-request, like list-grants-request

  line </#X-Amz-Target=TrentService.ListGrants>

  hint <X-Amz-Target>, loan x-amz-target

  find <Limit>, loan limit
  find <Marker>, loan marker

  seed json, loan list-grants-request

  loot 200
    seed json, like list-grants-response
    note <Success>
  loot 480
    seed json, like not-found-exception
    note <NotFoundException>
  loot 481
    seed json, like dependency-timeout-exception
    note <DependencyTimeoutException>
  loot 482
    seed json, like invalid-marker-exception
    note <InvalidMarkerException>
  loot 483
    seed json, like invalid-grant-id-exception
    note <InvalidGrantIdException>
  loot 484
    seed json, like invalid-arn-exception
    note <InvalidArnException>
  loot 485
    seed json, like kms-internal-exception
    note <KMSInternalException>
  loot 486
    seed json, like kms-invalid-state-exception
    note <KMSInvalidStateException>