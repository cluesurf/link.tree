
load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/dependency-timeout-exception
  take form dependency-timeout-exception

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/expired-import-token-exception
  take form expired-import-token-exception

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/import-key-material-response
  take form import-key-material-response

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/incorrect-key-material-exception
  take form incorrect-key-material-exception

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/invalid-arn-exception
  take form invalid-arn-exception

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/invalid-ciphertext-exception
  take form invalid-ciphertext-exception

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/invalid-import-token-exception
  take form invalid-import-token-exception

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/kms-internal-exception
  take form kms-internal-exception

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/kms-invalid-state-exception
  take form kms-invalid-state-exception

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/not-found-exception
  take form not-found-exception

load @textsurf/snow/amazonaws.com/kms/2014-11-01/base/unsupported-operation-exception
  take form unsupported-operation-exception

load @textsurf/snow/base/native-string
  take form native-string

boot import-key-material, name <ImportKeyMaterial>
  deed post
  note <Imports key material into an existing symmetric KMS KMS key that was created without key material. After you successfully import key material into a KMS key, you can [reimport the same key material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html#reimport-key-material) into that KMS key, but you cannot import different key material.

You cannot perform this operation on an asymmetric KMS key or on any KMS key in a different Amazon Web Services account. For more information about creating KMS keys with no key material and then importing key material, see [Importing Key Material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html) in the _Key Management Service Developer Guide_.

Before using this operation, call GetParametersForImport. Its response includes a public key and an import token. Use the public key to encrypt the key material. Then, submit the import token from the same `GetParametersForImport` response.

When calling this operation, you must specify the following values:

- The key ID or key ARN of a KMS key with no key material. Its `Origin` must be `EXTERNAL`.

  To create a KMS key with no key material, call CreateKey and set the value of its `Origin` parameter to `EXTERNAL`. To get the `Origin` of a KMS key, call DescribeKey.)

- The encrypted key material. To get the public key to encrypt the key material, call GetParametersForImport.

- The import token that GetParametersForImport returned. You must use a public key and token from the same `GetParametersForImport` response.

- Whether the key material expires and if so, when. If you set an expiration date, KMS deletes the key material from the KMS key on the specified date, and the KMS key becomes unusable. To use the KMS key again, you must reimport the same key material. The only way to change an expiration date is by reimporting the same key material and specifying a new expiration date.

When this operation is successful, the key state of the KMS key changes from `PendingImport` to `Enabled`, and you can use the KMS key.

If this operation fails, use the exception to help determine the problem. If the error is related to the key material, the import token, or wrapping key, use GetParametersForImport to get a new public key and import token for the KMS key and repeat the import procedure. For help, see [How To Import Key Material](https://docs.aws.amazon.com/kms/latest/developerguide/importing-keys.html#importing-keys-overview) in the _Key Management Service Developer Guide_.

The KMS key that you use for this operation must be in a compatible key state. For details, see [Key state: Effect on your KMS key](https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html) in the _Key Management Service Developer Guide_.

**Cross-account use**: No. You cannot perform this operation on a KMS key in a different Amazon Web Services account.

**Required permissions**: [kms:ImportKeyMaterial](https://docs.aws.amazon.com/kms/latest/developerguide/kms-api-permissions-reference.html) (key policy)

**Related operations:** - DeleteImportedKeyMaterial

- GetParametersForImport>

  take x-amz-target
    like native-string
  take import-key-material-request, like import-key-material-request

  line </#X-Amz-Target=TrentService.ImportKeyMaterial>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan import-key-material-request

  loot 200
    seed json, like import-key-material-response
    note <Success>
  loot 480
    seed json, like invalid-arn-exception
    note <InvalidArnException>
  loot 481
    seed json, like unsupported-operation-exception
    note <UnsupportedOperationException>
  loot 482
    seed json, like dependency-timeout-exception
    note <DependencyTimeoutException>
  loot 483
    seed json, like not-found-exception
    note <NotFoundException>
  loot 484
    seed json, like kms-internal-exception
    note <KMSInternalException>
  loot 485
    seed json, like kms-invalid-state-exception
    note <KMSInvalidStateException>
  loot 486
    seed json, like invalid-ciphertext-exception
    note <InvalidCiphertextException>
  loot 487
    seed json, like incorrect-key-material-exception
    note <IncorrectKeyMaterialException>
  loot 488
    seed json, like expired-import-token-exception
    note <ExpiredImportTokenException>
  loot 489
    seed json, like invalid-import-token-exception
    note <InvalidImportTokenException>