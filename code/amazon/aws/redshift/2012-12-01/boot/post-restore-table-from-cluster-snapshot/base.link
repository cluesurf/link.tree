
load @wavebond/snow/amazonaws.com/redshift/2012-12-01/base/cluster-not-found-fault
  take form cluster-not-found-fault

load @wavebond/snow/amazonaws.com/redshift/2012-12-01/base/cluster-snapshot-not-found-fault
  take form cluster-snapshot-not-found-fault

load @wavebond/snow/amazonaws.com/redshift/2012-12-01/base/in-progress-table-restore-quota-exceeded-fault
  take form in-progress-table-restore-quota-exceeded-fault

load @wavebond/snow/amazonaws.com/redshift/2012-12-01/base/invalid-cluster-snapshot-state-fault
  take form invalid-cluster-snapshot-state-fault

load @wavebond/snow/amazonaws.com/redshift/2012-12-01/base/invalid-cluster-state-fault
  take form invalid-cluster-state-fault

load @wavebond/snow/amazonaws.com/redshift/2012-12-01/base/invalid-table-restore-argument-fault
  take form invalid-table-restore-argument-fault

load @wavebond/snow/amazonaws.com/redshift/2012-12-01/base/restore-table-from-cluster-snapshot-result
  take form restore-table-from-cluster-snapshot-result

load @wavebond/snow/amazonaws.com/redshift/2012-12-01/base/unsupported-operation-fault
  take form unsupported-operation-fault

load @wavebond/snow/base/native-string
  take form native-string

boot post-restore-table-from-cluster-snapshot, name <POST_RestoreTableFromClusterSnapshot>
  deed post
  note <Creates a new table from a table in an Amazon Redshift cluster snapshot. You must create the new table within the Amazon Redshift cluster that the snapshot was taken from.

You cannot use `RestoreTableFromClusterSnapshot` to restore a table with the same name as an existing table in an Amazon Redshift cluster. That is, you cannot overwrite an existing table in a cluster with a restored table. If you want to replace your original table with a new, restored table, then rename or drop your original table before you call `RestoreTableFromClusterSnapshot`. When you have renamed your original table, then you can pass the original name of the table as the `NewTableName` parameter value in the call to `RestoreTableFromClusterSnapshot`. This way, you can replace the original table with the table created from the snapshot.>

  take action
    like native-string
  take version
    like native-string
  take restore-table-from-cluster-snapshot-message, like restore-table-from-cluster-snapshot-message
    void take

  line </#Action=RestoreTableFromClusterSnapshot>

  find <Action>, loan action
  find <Version>, loan version

  seed xml, loan restore-table-from-cluster-snapshot-message

  loot 200
    seed xml, like restore-table-from-cluster-snapshot-result
    note <Success>
  loot 480
    seed xml, like cluster-snapshot-not-found-fault
    note <ClusterSnapshotNotFoundFault>
  loot 481
    seed xml, like in-progress-table-restore-quota-exceeded-fault
    note <InProgressTableRestoreQuotaExceededFault>
  loot 482
    seed xml, like invalid-cluster-snapshot-state-fault
    note <InvalidClusterSnapshotStateFault>
  loot 483
    seed xml, like invalid-table-restore-argument-fault
    note <InvalidTableRestoreArgumentFault>
  loot 484
    seed xml, like cluster-not-found-fault
    note <ClusterNotFoundFault>
  loot 485
    seed xml, like invalid-cluster-state-fault
    note <InvalidClusterStateFault>
  loot 486
    seed xml, like unsupported-operation-fault
    note <UnsupportedOperationFault>