
load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/create-login-profile-response
  take form create-login-profile-response

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/entity-already-exists-exception
  take form entity-already-exists-exception

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/no-such-entity-exception
  take form no-such-entity-exception

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/password-policy-violation-exception
  take form password-policy-violation-exception

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/service-failure-exception
  take form service-failure-exception

load @nerdbond/snow/base/native-boolean
  take form native-boolean

load @nerdbond/snow/base/native-string
  take form native-string

boot get-create-login-profile, name <GET_CreateLoginProfile>
  deed get
  note <Creates a password for the specified IAM user. A password allows an IAM user to access Amazon Web Services services through the Management Console.

You can use the CLI, the Amazon Web Services API, or the **Users** page in the IAM console to create a password for any IAM user. Use ChangePassword to update your own existing password in the **My Security Credentials** page in the Management Console.

For more information about managing passwords, see [Managing passwords](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_ManagingLogins.html) in the _IAM User Guide_.>

  take user-name
    like native-string
    note <The name of the IAM user to create a password for. The user must already exist.

This parameter allows (through its [regex pattern](http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@->
  take password
    like native-string
    note <The new password for the user.

The [regex pattern](http://wikipedia.org/wiki/regex) that is used to validate this parameter is a string of characters. That string can include almost any printable ASCII character from the space (`\u0020`) through the end of the ASCII character range (`\u00FF`). You can also include the tab (`\u0009`), line feed (`\u000A`), and carriage return (`\u000D`) characters. Any of these characters are valid in a password. However, many tools, such as the Management Console, might restrict the ability to type certain characters because they have special meaning within that tool.>
  take password-reset-required
    like native-boolean
    note <Specifies whether the user is required to set a new password on next sign-in.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreateLoginProfile>

  find <UserName>, loan user-name
  find <Password>, loan password
  find <PasswordResetRequired>, loan password-reset-required
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-login-profile-response
    note <Success>
  loot 480
    seed xml, like entity-already-exists-exception
    note <EntityAlreadyExistsException>
  loot 481
    seed xml, like no-such-entity-exception
    note <NoSuchEntityException>
  loot 482
    seed xml, like password-policy-violation-exception
    note <PasswordPolicyViolationException>
  loot 483
    seed xml, like limit-exceeded-exception
    note <LimitExceededException>
  loot 484
    seed xml, like service-failure-exception
    note <ServiceFailureException>