
load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/concurrent-modification-exception
  take form concurrent-modification-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/create-saml-provider-response
  take form create-saml-provider-response

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/entity-already-exists-exception
  take form entity-already-exists-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/invalid-input-exception
  take form invalid-input-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/service-failure-exception
  take form service-failure-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/tag
  take form tag

load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-string
  take form native-string

boot get-create-saml-provider, name <GET_CreateSAMLProvider>
  note <Creates an IAM resource that describes an identity provider (IdP) that supports SAML 2.0.

The SAML provider resource that you create with this operation can be used as a principal in an IAM role's trust policy. Such a policy can enable federated users who sign in using the SAML IdP to assume the role. You can create an IAM role that supports Web-based single sign-on (SSO) to the Management Console or one that supports API access to Amazon Web Services.

When you create the SAML provider resource, you upload a SAML metadata document that you get from your IdP. That document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that the IdP sends. You must generate the metadata document using the identity management software that is used as your organization's IdP.

This operation requires [Signature Version 4](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).

For more information, see [Enabling SAML 2.0 federated users to access the Management Console](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_enable-console-saml.html) and [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html) in the _IAM User Guide_.>

  take saml-metadata-document
    like native-string
    note <An XML document generated by an identity provider (IdP) that supports SAML 2.0. The document includes the issuer's name, expiration information, and keys that can be used to validate the SAML authentication response (assertions) that are received from the IdP. You must generate the metadata document using the identity management software that is used as your organization's IdP.

For more information, see [About SAML 2.0-based federation](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html) in the _IAM User Guide_>
  take name
    like native-string
    note <The name of the provider to create.

This parameter allows (through its [regex pattern](http://wikipedia.org/wiki/regex)) a string of characters consisting of upper and lowercase alphanumeric characters with no spaces. You can also include any of the following characters: _+=,.@->
  take tags
    like list
      like tag
    note <A list of tags that you want to attach to the new IAM SAML provider. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the _IAM User Guide_.

If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreateSAMLProvider>

  find <SAMLMetadataDocument>, loan saml-metadata-document
  find <Name>, loan name
  find <Tags>, loan tags
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-saml-provider-response
    note <Success>
  loot 480
    seed xml, like invalid-input-exception
    note <InvalidInputException>
  loot 481
    seed xml, like entity-already-exists-exception
    note <EntityAlreadyExistsException>
  loot 482
    seed xml, like limit-exceeded-exception
    note <LimitExceededException>
  loot 483
    seed xml, like concurrent-modification-exception
    note <ConcurrentModificationException>
  loot 484
    seed xml, like service-failure-exception
    note <ServiceFailureException>