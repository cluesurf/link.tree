
load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/create-policy-version-response
  take form create-policy-version-response

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/invalid-input-exception
  take form invalid-input-exception

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/malformed-policy-document-exception
  take form malformed-policy-document-exception

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/no-such-entity-exception
  take form no-such-entity-exception

load @nerdbond/snow/amazonaws.com/iam/2010-05-08/base/service-failure-exception
  take form service-failure-exception

load @nerdbond/snow/base/native-boolean
  take form native-boolean

load @nerdbond/snow/base/native-string
  take form native-string

boot get-create-policy-version, name <GET_CreatePolicyVersion>
  deed get
  note <Creates a new version of the specified managed policy. To update a managed policy, you create a new policy version. A managed policy can have up to five versions. If the policy has five versions, you must delete an existing version using DeletePolicyVersion before you create a new version.

Optionally, you can set the new version as the policy's default version. The default version is the version that is in effect for the IAM users, groups, and roles to which the policy is attached.

For more information about managed policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the _IAM User Guide_.>

  take policy-arn
    like native-string
    note <The Amazon Resource Name (ARN) of the IAM policy to which you want to add a new version.

For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the _Amazon Web Services General Reference_.>
  take policy-document
    like native-string
    note <The JSON policy document that you want to use as the content for this new version of the policy.

You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.

The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see [IAM and STS character quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).

The [regex pattern](http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:

- Any printable ASCII character ranging from the space character (`\u0020`) through the end of the ASCII character range

- The printable characters in the Basic Latin and Latin-1 Supplement character set (through `\u00FF`)

- The special characters tab (`\u0009`), line feed (`\u000A`), and carriage return (`\u000D`)>
  take set-as-default
    like native-boolean
    note <Specifies whether to set this version as the policy's default version.

When this parameter is `true`, the new policy version becomes the operative version. That is, it becomes the version that is in effect for the IAM users, groups, and roles that the policy is attached to.

For more information about managed policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the _IAM User Guide_.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreatePolicyVersion>

  find <PolicyArn>, loan policy-arn
  find <PolicyDocument>, loan policy-document
  find <SetAsDefault>, loan set-as-default
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-policy-version-response
    note <Success>
  loot 480
    seed xml, like no-such-entity-exception
    note <NoSuchEntityException>
  loot 481
    seed xml, like malformed-policy-document-exception
    note <MalformedPolicyDocumentException>
  loot 482
    seed xml, like invalid-input-exception
    note <InvalidInputException>
  loot 483
    seed xml, like limit-exceeded-exception
    note <LimitExceededException>
  loot 484
    seed xml, like service-failure-exception
    note <ServiceFailureException>