
load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/concurrent-modification-exception
  take form concurrent-modification-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/create-policy-response
  take form create-policy-response

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/entity-already-exists-exception
  take form entity-already-exists-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/invalid-input-exception
  take form invalid-input-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/malformed-policy-document-exception
  take form malformed-policy-document-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/service-failure-exception
  take form service-failure-exception

load @drumwork/snow/amazonaws.com/iam/2010-05-08/base/tag
  take form tag

load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-string
  take form native-string

boot get-create-policy, name <GET_CreatePolicy>
  note <Creates a new managed policy for your account.

This operation creates a policy version with a version identifier of `v1` and sets v1 as the policy's default version. For more information about policy versions, see [Versioning for managed policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-versions.html) in the _IAM User Guide_.

As a best practice, you can validate your IAM policies. To learn more, see [Validating IAM policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_policy-validator.html) in the _IAM User Guide_.

For more information about managed policies in general, see [Managed policies and inline policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/policies-managed-vs-inline.html) in the _IAM User Guide_.>

  take policy-name
    like native-string
    note <The friendly name of the policy.

IAM user, group, role, and policy names must be unique within the account. Names are not distinguished by case. For example, you cannot create resources named both "MyResource" and "myresource".>
  take path
    like native-string
    note <The path for the policy.

For more information about paths, see [IAM identifiers](https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html) in the _IAM User Guide_.

This parameter is optional. If it is not included, it defaults to a slash (/).

This parameter allows (through its [regex pattern](http://wikipedia.org/wiki/regex)) a string of characters consisting of either a forward slash (/) by itself or a string that must begin and end with forward slashes. In addition, it can contain any ASCII character from the ! (`\u0021`) through the DEL character (`\u007F`), including most punctuation characters, digits, and upper and lowercased letters.>
    void take
  take policy-document
    like native-string
    note <The JSON policy document that you want to use as the content for the new policy.

You must provide policies in JSON format in IAM. However, for CloudFormation templates formatted in YAML, you can provide the policy in JSON or YAML format. CloudFormation always converts a YAML policy to JSON format before submitting it to IAM.

The maximum length of the policy document that you can pass in this operation, including whitespace, is listed below. To view the maximum character counts of a managed policy with no whitespaces, see [IAM and STS character quotas](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-quotas.html#reference_iam-quotas-entity-length).

To learn more about JSON policy grammar, see [Grammar of the IAM JSON policy language](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_grammar.html) in the _IAM User Guide_.

The [regex pattern](http://wikipedia.org/wiki/regex) used to validate this parameter is a string of characters consisting of the following:

- Any printable ASCII character ranging from the space character (`\u0020`) through the end of the ASCII character range

- The printable characters in the Basic Latin and Latin-1 Supplement character set (through `\u00FF`)

- The special characters tab (`\u0009`), line feed (`\u000A`), and carriage return (`\u000D`)>
  take description
    like native-string
    note <A friendly description of the policy.

Typically used to store information about the permissions defined in the policy. For example, "Grants access to production DynamoDB tables."

The policy description is immutable. After a value is assigned, it cannot be changed.>
    void take
  take tags
    like list
      like tag
    note <A list of tags that you want to attach to the new IAM customer managed policy. Each tag consists of a key name and an associated value. For more information about tagging, see [Tagging IAM resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_tags.html) in the _IAM User Guide_.

If any one of the tags is invalid or if you exceed the allowed maximum number of tags, then the entire request fails and the resource is not created.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreatePolicy>

  find <PolicyName>, loan policy-name
  find <Path>, loan path
  find <PolicyDocument>, loan policy-document
  find <Description>, loan description
  find <Tags>, loan tags
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-policy-response
    note <Success>
  loot 480
    seed xml, like invalid-input-exception
    note <InvalidInputException>
  loot 481
    seed xml, like limit-exceeded-exception
    note <LimitExceededException>
  loot 482
    seed xml, like entity-already-exists-exception
    note <EntityAlreadyExistsException>
  loot 483
    seed xml, like malformed-policy-document-exception
    note <MalformedPolicyDocumentException>
  loot 484
    seed xml, like concurrent-modification-exception
    note <ConcurrentModificationException>
  loot 485
    seed xml, like service-failure-exception
    note <ServiceFailureException>