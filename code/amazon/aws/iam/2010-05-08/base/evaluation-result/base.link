
load @wavebond/snow/amazonaws.com/iam/2010-05-08/base/action-name-type
  take form action-name-type

load @wavebond/snow/amazonaws.com/iam/2010-05-08/base/context-key-names-result-list-type
  take form context-key-names-result-list-type

load @wavebond/snow/amazonaws.com/iam/2010-05-08/base/eval-decision-details-type
  take form eval-decision-details-type

load @wavebond/snow/amazonaws.com/iam/2010-05-08/base/organizations-decision-detail
  take form organizations-decision-detail

load @wavebond/snow/amazonaws.com/iam/2010-05-08/base/permissions-boundary-decision-detail
  take form permissions-boundary-decision-detail

load @wavebond/snow/amazonaws.com/iam/2010-05-08/base/policy-evaluation-decision-type
  take form policy-evaluation-decision-type

load @wavebond/snow/amazonaws.com/iam/2010-05-08/base/resource-name-type
  take form resource-name-type

load @wavebond/snow/amazonaws.com/iam/2010-05-08/base/resource-specific-result-list-type
  take form resource-specific-result-list-type

load @wavebond/snow/amazonaws.com/iam/2010-05-08/base/statement-list-type
  take form statement-list-type

form evaluation-result, name <EvaluationResult>
  note <Contains the results of a simulation.

This data type is used by the return parameter of `SimulateCustomPolicy` and `SimulatePrincipalPolicy` .>
  take eval-action-name, name <EvalActionName>
    like action-name-type
    note <The name of the API operation tested on the indicated resource.>
  take eval-resource-name, name <EvalResourceName>
    like resource-name-type
    void take
    note <The ARN of the resource that the indicated API operation was tested on.>
  take eval-decision, name <EvalDecision>
    like policy-evaluation-decision-type
    note <The result of the simulation.>
  take matched-statements, name <MatchedStatements>
    like statement-list-type
    void take
    note <A list of the statements in the input policies that determine the result for this scenario. Remember that even if multiple statements allow the operation on the resource, if only one statement denies that operation, then the explicit deny overrides any allow. In addition, the deny statement is the only entry included in the result.>
  take missing-context-values, name <MissingContextValues>
    like context-key-names-result-list-type
    void take
    note <A list of context keys that are required by the included input policies but that were not provided by one of the input parameters. This list is used when the resource in a simulation is "*", either explicitly, or when the `ResourceArns` parameter blank. If you include a list of resources, then any missing context values are instead included under the `ResourceSpecificResults` section. To discover the context keys used by a set of policies, you can call GetContextKeysForCustomPolicy or GetContextKeysForPrincipalPolicy.>
  take organizations-decision-detail, name <OrganizationsDecisionDetail>
    like organizations-decision-detail
    void take
    note <A structure that details how Organizations and its service control policies affect the results of the simulation. Only applies if the simulated user's account is part of an organization.>
  take permissions-boundary-decision-detail, name <PermissionsBoundaryDecisionDetail>
    like permissions-boundary-decision-detail
    void take
    note <Contains information about the effect that a permissions boundary has on a policy simulation when the boundary is applied to an IAM entity.>
  take eval-decision-details, name <EvalDecisionDetails>
    like eval-decision-details-type
    void take
    note <Additional details about the results of the cross-account evaluation decision. This parameter is populated for only cross-account simulations. It contains a brief summary of how each policy type contributes to the final evaluation decision.

If the simulation evaluates policies within the same account and includes a resource ARN, then the parameter is present but the response is empty. If the simulation evaluates policies within the same account and specifies all resources (`*`), then the parameter is not returned.

When you make a cross-account request, Amazon Web Services evaluates the request in the trusting account and the trusted account. The request is allowed only if both evaluations return `true`. For more information about how policies are evaluated, see [Evaluating policies within a single account](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-basics).

If an Organizations SCP included in the evaluation denies access, the simulation ends. In this case, policy evaluation does not proceed any further and this parameter is not returned.>
  take resource-specific-results, name <ResourceSpecificResults>
    like resource-specific-result-list-type
    void take
    note <The individual results of the simulation of the API operation specified in EvalActionName on each resource.>