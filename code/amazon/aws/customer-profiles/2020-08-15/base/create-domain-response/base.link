
load @nerdbond/snow/amazonaws.com/customer-profiles/2020-08-15/base/encryption-key
  take form encryption-key

load @nerdbond/snow/amazonaws.com/customer-profiles/2020-08-15/base/expiration-days-integer
  take form expiration-days-integer

load @nerdbond/snow/amazonaws.com/customer-profiles/2020-08-15/base/matching-response
  take form matching-response

load @nerdbond/snow/amazonaws.com/customer-profiles/2020-08-15/base/name
  take form name

load @nerdbond/snow/amazonaws.com/customer-profiles/2020-08-15/base/sqs-queue-url
  take form sqs-queue-url

load @nerdbond/snow/amazonaws.com/customer-profiles/2020-08-15/base/tag-map
  take form tag-map

load @nerdbond/snow/amazonaws.com/customer-profiles/2020-08-15/base/timestamp
  take form timestamp

form create-domain-response, name <CreateDomainResponse>
  take domain-name, name <DomainName>
    like name
    note <The unique name of the domain.>
  take default-expiration-days, name <DefaultExpirationDays>
    like expiration-days-integer
    note <The default number of days until the data within the domain expires.>
  take default-encryption-key, name <DefaultEncryptionKey>
    like encryption-key
    void take
    note <The default encryption key, which is an AWS managed key, is used when no specific type of encryption key is specified. It is used to encrypt all data before it is placed in permanent or semi-permanent storage.>
  take dead-letter-queue-url, name <DeadLetterQueueUrl>
    like sqs-queue-url
    void take
    note <The URL of the SQS dead letter queue, which is used for reporting errors associated with ingesting data from third party applications.>
  take matching, name <Matching>
    like matching-response
    void take
    note <The process of matching duplicate profiles. If Matching = true, Amazon Connect Customer Profiles starts a weekly batch process every Saturday at 12AM UTC to detect duplicate profiles in your domains. After that batch process completes, use the [GetMatches](https://docs.aws.amazon.com/customerprofiles/latest/APIReference/API_GetMatches.html) API to return and review the results.>
  take created-at, name <CreatedAt>
    like timestamp
    note <The timestamp of when the domain was created.>
  take last-updated-at, name <LastUpdatedAt>
    like timestamp
    note <The timestamp of when the domain was most recently edited.>
  take tags, name <Tags>
    like tag-map
    void take
    note <The tags used to organize, track, or control access for this resource.>