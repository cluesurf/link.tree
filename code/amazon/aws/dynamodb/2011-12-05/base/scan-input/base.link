
load @termsurf/snow/amazonaws.com/dynamodb/2011-12-05/base/attribute-name-list
  take form attribute-name-list

load @termsurf/snow/amazonaws.com/dynamodb/2011-12-05/base/boolean-object
  take form boolean-object

load @termsurf/snow/amazonaws.com/dynamodb/2011-12-05/base/filter-condition-map
  take form filter-condition-map

load @termsurf/snow/amazonaws.com/dynamodb/2011-12-05/base/key
  take form key

load @termsurf/snow/amazonaws.com/dynamodb/2011-12-05/base/positive-integer-object
  take form positive-integer-object

load @termsurf/snow/amazonaws.com/dynamodb/2011-12-05/base/table-name
  take form table-name

form scan-input, name <ScanInput>
  take table-name, name <TableName>
    like table-name
    note <The name of the table in which you want to scan. Allowed characters are `a-z`, `A-Z`, `0-9`, `_` (underscore), `-` (hyphen) and `.` (period).>
  take attributes-to-get, name <AttributesToGet>
    like attribute-name-list
    void take
  take limit, name <Limit>
    like positive-integer-object
    void take
    note <The maximum number of items to return. If Amazon DynamoDB hits this limit while scanning the table, it stops the scan and returns the matching values up to the limit, and a `LastEvaluatedKey` to apply in a subsequent operation to continue the scan. Also, if the scanned data set size exceeds 1 MB before Amazon DynamoDB hits this limit, it stops the scan and returns the matching values up to the limit, and a `LastEvaluatedKey` to apply in a subsequent operation to continue the scan.>
  take count, name <Count>
    like boolean-object
    void take
    note <If set to `true`, Amazon DynamoDB returns a total number of items for the `Scan` operation, even if the operation has no matching items for the assigned filter. Do not set `Count` to `true` while providing a list of `AttributesToGet`, otherwise Amazon DynamoDB returns a validation error.>
  take scan-filter, name <ScanFilter>
    like filter-condition-map
    void take
    note <Evaluates the scan results and returns only the desired values.>
  take exclusive-start-key, name <ExclusiveStartKey>
    like key
    void take
    note <Primary key of the item from which to continue an earlier scan. An earlier scan might provide this value if that scan operation was interrupted before scanning the entire table; either because of the result set size or the `Limit` parameter. The `LastEvaluatedKey` can be passed back in a new scan request to continue the operation from that point.>