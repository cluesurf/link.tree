
load @treesurf/snow/amazonaws.com/dynamodb/2012-08-10/base/attribute-name-list
  take form attribute-name-list

load @treesurf/snow/amazonaws.com/dynamodb/2012-08-10/base/consistent-read
  take form consistent-read

load @treesurf/snow/amazonaws.com/dynamodb/2012-08-10/base/expression-attribute-name-map
  take form expression-attribute-name-map

load @treesurf/snow/amazonaws.com/dynamodb/2012-08-10/base/key
  take form key

load @treesurf/snow/amazonaws.com/dynamodb/2012-08-10/base/projection-expression
  take form projection-expression

load @treesurf/snow/amazonaws.com/dynamodb/2012-08-10/base/return-consumed-capacity
  take form return-consumed-capacity

load @treesurf/snow/amazonaws.com/dynamodb/2012-08-10/base/table-name
  take form table-name

form get-item-input, name <GetItemInput>
  note <Represents the input of a `GetItem` operation.>
  take table-name, name <TableName>
    like table-name
    note <The name of the table containing the requested item.>
  take key, name <Key>
    like key
    note <A map of attribute names to `AttributeValue` objects, representing the primary key of the item to retrieve.

For the primary key, you must provide all of the attributes. For example, with a simple primary key, you only need to provide a value for the partition key. For a composite primary key, you must provide values for both the partition key and the sort key.>
  take attributes-to-get, name <AttributesToGet>
    like attribute-name-list
    void take
    note <This is a legacy parameter. Use `ProjectionExpression` instead. For more information, see [AttributesToGet](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LegacyConditionalParameters.AttributesToGet.html) in the _Amazon DynamoDB Developer Guide_.>
  take consistent-read, name <ConsistentRead>
    like consistent-read
    void take
    note <Determines the read consistency model: If set to `true`, then the operation uses strongly consistent reads; otherwise, the operation uses eventually consistent reads.>
  take return-consumed-capacity, name <ReturnConsumedCapacity>
    like return-consumed-capacity
    void take
  take projection-expression, name <ProjectionExpression>
    like projection-expression
    void take
    note <A string that identifies one or more attributes to retrieve from the table. These attributes can include scalars, sets, or elements of a JSON document. The attributes in the expression must be separated by commas.

If no attribute names are specified, then all attributes are returned. If any of the requested attributes are not found, they do not appear in the result.

For more information, see [Specifying Item Attributes](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html) in the _Amazon DynamoDB Developer Guide_.>
  take expression-attribute-names, name <ExpressionAttributeNames>
    like expression-attribute-name-map
    void take
    note <One or more substitution tokens for attribute names in an expression. The following are some use cases for using `ExpressionAttributeNames`:

- To access an attribute whose name conflicts with a DynamoDB reserved word.

- To create a placeholder for repeating occurrences of an attribute name in an expression.

- To prevent special characters in an attribute name from being misinterpreted in an expression.

Use the **#** character in an expression to dereference an attribute name. For example, consider the following attribute name:

- `Percentile`

The name of this attribute conflicts with a reserved word, so it cannot be used directly in an expression. (For the complete list of reserved words, see [Reserved Words](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ReservedWords.html) in the _Amazon DynamoDB Developer Guide_). To work around this, you could specify the following for `ExpressionAttributeNames`:

- `{"#P":"Percentile"}`

You could then use this substitution in an expression, as in this example:

- `#P = :val`

Tokens that begin with the **:** character are _expression attribute values_, which are placeholders for the actual value at runtime.

For more information on expression attribute names, see [Specifying Item Attributes](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Expressions.AccessingItemAttributes.html) in the _Amazon DynamoDB Developer Guide_.>