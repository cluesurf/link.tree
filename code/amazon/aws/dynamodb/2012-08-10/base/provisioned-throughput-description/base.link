
load @tunebond/snow/amazonaws.com/dynamodb/2012-08-10/base/date
  take form date

load @tunebond/snow/amazonaws.com/dynamodb/2012-08-10/base/non-negative-long-object
  take form non-negative-long-object

load @tunebond/snow/amazonaws.com/dynamodb/2012-08-10/base/positive-long-object
  take form positive-long-object

form provisioned-throughput-description, name <ProvisionedThroughputDescription>
  note <Represents the provisioned throughput settings for the table, consisting of read and write capacity units, along with data about increases and decreases.>
  take last-increase-date-time, name <LastIncreaseDateTime>
    like date
    void take
    note <The date and time of the last provisioned throughput increase for this table.>
  take last-decrease-date-time, name <LastDecreaseDateTime>
    like date
    void take
    note <The date and time of the last provisioned throughput decrease for this table.>
  take number-of-decreases-today, name <NumberOfDecreasesToday>
    like positive-long-object
    void take
    note <The number of provisioned throughput decreases for this table during this UTC calendar day. For current maximums on provisioned throughput decreases, see [Service, Account, and Table Quotas](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the _Amazon DynamoDB Developer Guide_.>
  take read-capacity-units, name <ReadCapacityUnits>
    like non-negative-long-object
    void take
    note <The maximum number of strongly consistent reads consumed per second before DynamoDB returns a `ThrottlingException`. Eventually consistent reads require less effort than strongly consistent reads, so a setting of 50 `ReadCapacityUnits` per second provides 100 eventually consistent `ReadCapacityUnits` per second.>
  take write-capacity-units, name <WriteCapacityUnits>
    like non-negative-long-object
    void take
    note <The maximum number of writes consumed per second before DynamoDB returns a `ThrottlingException`.>