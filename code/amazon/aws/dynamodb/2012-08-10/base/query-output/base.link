
load @drumwork/snow/amazonaws.com/dynamodb/2012-08-10/base/consumed-capacity
  take form consumed-capacity

load @drumwork/snow/amazonaws.com/dynamodb/2012-08-10/base/item-list
  take form item-list

load @drumwork/snow/amazonaws.com/dynamodb/2012-08-10/base/key
  take form key

load @drumwork/snow/base/integer
  take form integer

form query-output, name <QueryOutput>
  note <Represents the output of a `Query` operation.>
  take items, name <Items>
    like item-list
    void take
    note <An array of item attributes that match the query criteria. Each element in this array consists of an attribute name and the value for that attribute.>
  take count, name <Count>
    like integer
    void take
    note <The number of items in the response.

If you used a `QueryFilter` in the request, then `Count` is the number of items returned after the filter was applied, and `ScannedCount` is the number of matching items before the filter was applied.

If you did not use a filter in the request, then `Count` and `ScannedCount` are the same.>
  take scanned-count, name <ScannedCount>
    like integer
    void take
    note <The number of items evaluated, before any `QueryFilter` is applied. A high `ScannedCount` value with few, or no, `Count` results indicates an inefficient `Query` operation. For more information, see [Count and ScannedCount](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count) in the _Amazon DynamoDB Developer Guide_.

If you did not use a filter in the request, then `ScannedCount` is the same as `Count`.>
  take last-evaluated-key, name <LastEvaluatedKey>
    like key
    void take
    note <The primary key of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.

If `LastEvaluatedKey` is empty, then the "last page" of results has been processed and there is no more data to be retrieved.

If `LastEvaluatedKey` is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when `LastEvaluatedKey` is empty.>
  take consumed-capacity, name <ConsumedCapacity>
    like consumed-capacity
    void take
    note <The capacity units consumed by the `Query` operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. `ConsumedCapacity` is only returned if the `ReturnConsumedCapacity` parameter was specified. For more information, see [Provisioned Throughput](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html) in the _Amazon DynamoDB Developer Guide_.>