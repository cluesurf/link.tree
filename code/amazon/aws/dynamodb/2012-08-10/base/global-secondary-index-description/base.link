
load @nerdbond/snow/amazonaws.com/dynamodb/2012-08-10/base/backfilling
  take form backfilling

load @nerdbond/snow/amazonaws.com/dynamodb/2012-08-10/base/index-name
  take form index-name

load @nerdbond/snow/amazonaws.com/dynamodb/2012-08-10/base/index-status
  take form index-status

load @nerdbond/snow/amazonaws.com/dynamodb/2012-08-10/base/key-schema
  take form key-schema

load @nerdbond/snow/amazonaws.com/dynamodb/2012-08-10/base/long
  take form long

load @nerdbond/snow/amazonaws.com/dynamodb/2012-08-10/base/projection
  take form projection

load @nerdbond/snow/amazonaws.com/dynamodb/2012-08-10/base/provisioned-throughput-description
  take form provisioned-throughput-description

load @nerdbond/snow/base/string
  take form string

form global-secondary-index-description, name <GlobalSecondaryIndexDescription>
  note <Represents the properties of a global secondary index.>
  take index-name, name <IndexName>
    like index-name
    void take
    note <The name of the global secondary index.>
  take key-schema, name <KeySchema>
    like key-schema
    void take
    note <The complete key schema for a global secondary index, which consists of one or more pairs of attribute names and key types:

- `HASH` - partition key

- `RANGE` - sort key

The partition key of an item is also known as its _hash attribute_. The term "hash attribute" derives from DynamoDB's usage of an internal hash function to evenly distribute data items across partitions, based on their partition key values.

The sort key of an item is also known as its _range attribute_. The term "range attribute" derives from the way DynamoDB stores items with the same partition key physically close together, in sorted order by the sort key value.>
  take projection, name <Projection>
    like projection
    void take
    note <Represents attributes that are copied (projected) from the table into the global secondary index. These are in addition to the primary key attributes and index key attributes, which are automatically projected.>
  take index-status, name <IndexStatus>
    like index-status
    void take
    note <The current state of the global secondary index:

- `CREATING` - The index is being created.

- `UPDATING` - The index is being updated.

- `DELETING` - The index is being deleted.

- `ACTIVE` - The index is ready for use.>
  take backfilling, name <Backfilling>
    like backfilling
    void take
    note <Indicates whether the index is currently backfilling. _Backfilling_ is the process of reading items from the table and determining whether they can be added to the index. (Not all items will qualify: For example, a partition key cannot have any duplicate values.) If an item can be added to the index, DynamoDB will do so. After all items have been processed, the backfilling operation is complete and `Backfilling` is false.

You can delete an index that is being created during the `Backfilling` phase when `IndexStatus` is set to CREATING and `Backfilling` is true. You can't delete the index that is being created when `IndexStatus` is set to CREATING and `Backfilling` is false.

For indexes that were created during a `CreateTable` operation, the `Backfilling` attribute does not appear in the `DescribeTable` output.>
  take provisioned-throughput, name <ProvisionedThroughput>
    like provisioned-throughput-description
    void take
    note <Represents the provisioned throughput settings for the specified global secondary index.

For current minimum and maximum provisioned throughput values, see [Service, Account, and Table Quotas](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Limits.html) in the _Amazon DynamoDB Developer Guide_.>
  take index-size-bytes, name <IndexSizeBytes>
    like long
    void take
    note <The total size of the specified index, in bytes. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.>
  take item-count, name <ItemCount>
    like long
    void take
    note <The number of items in the specified index. DynamoDB updates this value approximately every six hours. Recent changes might not be reflected in this value.>
  take index-arn, name <IndexArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) that uniquely identifies the index.>