
load @termsurf/snow/amazonaws.com/dynamodb/2012-08-10/base/backup-in-use-exception
  take form backup-in-use-exception

load @termsurf/snow/amazonaws.com/dynamodb/2012-08-10/base/continuous-backups-unavailable-exception
  take form continuous-backups-unavailable-exception

load @termsurf/snow/amazonaws.com/dynamodb/2012-08-10/base/create-backup-output
  take form create-backup-output

load @termsurf/snow/amazonaws.com/dynamodb/2012-08-10/base/internal-server-error
  take form internal-server-error

load @termsurf/snow/amazonaws.com/dynamodb/2012-08-10/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @termsurf/snow/amazonaws.com/dynamodb/2012-08-10/base/table-in-use-exception
  take form table-in-use-exception

load @termsurf/snow/amazonaws.com/dynamodb/2012-08-10/base/table-not-found-exception
  take form table-not-found-exception

load @termsurf/snow/base/native-string
  take form native-string

boot create-backup, name <CreateBackup>
  deed post
  note <Creates a backup for an existing table.

Each time you create an on-demand backup, the entire table data is backed up. There is no limit to the number of on-demand backups that can be taken.

When you create an on-demand backup, a time marker of the request is cataloged, and the backup is created asynchronously, by applying all changes until the time of the request to the last full table snapshot. Backup requests are processed instantaneously and become available for restore within minutes.

You can call `CreateBackup` at a maximum rate of 50 times per second.

All backups in DynamoDB work without consuming any provisioned throughput on the table.

If you submit a backup request on 2018-12-14 at 14:25:00, the backup is guaranteed to contain all data committed to the table up to 14:24:00, and data committed after 14:26:00 will not be. The backup might contain data modifications made between 14:24:00 and 14:26:00. On-demand backup does not support causal consistency.

Along with data, the following are also included on the backups:

- Global secondary indexes (GSIs)

- Local secondary indexes (LSIs)

- Streams

- Provisioned read and write capacity>

  take x-amz-target
    like native-string
  take create-backup-input, like create-backup-input

  line </#X-Amz-Target=DynamoDB_20120810.CreateBackup>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-backup-input

  loot 200
    seed json, like create-backup-output
    note <Success>
  loot 480
    seed json, like table-not-found-exception
    note <TableNotFoundException>
  loot 481
    seed json, like table-in-use-exception
    note <TableInUseException>
  loot 482
    seed json, like continuous-backups-unavailable-exception
    note <ContinuousBackupsUnavailableException>
  loot 483
    seed json, like backup-in-use-exception
    note <BackupInUseException>
  loot 484
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 485
    seed json, like internal-server-error
    note <InternalServerError>