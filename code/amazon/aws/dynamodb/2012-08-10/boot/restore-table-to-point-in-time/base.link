
load @wavebond/snow/amazonaws.com/dynamodb/2012-08-10/base/internal-server-error
  take form internal-server-error

load @wavebond/snow/amazonaws.com/dynamodb/2012-08-10/base/invalid-restore-time-exception
  take form invalid-restore-time-exception

load @wavebond/snow/amazonaws.com/dynamodb/2012-08-10/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @wavebond/snow/amazonaws.com/dynamodb/2012-08-10/base/point-in-time-recovery-unavailable-exception
  take form point-in-time-recovery-unavailable-exception

load @wavebond/snow/amazonaws.com/dynamodb/2012-08-10/base/restore-table-to-point-in-time-output
  take form restore-table-to-point-in-time-output

load @wavebond/snow/amazonaws.com/dynamodb/2012-08-10/base/table-already-exists-exception
  take form table-already-exists-exception

load @wavebond/snow/amazonaws.com/dynamodb/2012-08-10/base/table-in-use-exception
  take form table-in-use-exception

load @wavebond/snow/amazonaws.com/dynamodb/2012-08-10/base/table-not-found-exception
  take form table-not-found-exception

load @wavebond/snow/base/native-string
  take form native-string

boot restore-table-to-point-in-time, name <RestoreTableToPointInTime>
  deed post
  note <Restores the specified table to the specified point in time within `EarliestRestorableDateTime` and `LatestRestorableDateTime`. You can restore your table to any point in time during the last 35 days. Any number of users can execute up to 4 concurrent restores (any type of restore) in a given account.

When you restore using point in time recovery, DynamoDB restores your table data to the state based on the selected date and time (day:hour:minute:second) to a new table.

Along with data, the following are also included on the new restored table using point in time recovery:

- Global secondary indexes (GSIs)

- Local secondary indexes (LSIs)

- Provisioned read and write capacity

- Encryption settings

  All these settings come from the current settings of the source table at the time of restore.

You must manually set up the following on the restored table:

- Auto scaling policies

- IAM policies

- Amazon CloudWatch metrics and alarms

- Tags

- Stream settings

- Time to Live (TTL) settings

- Point in time recovery settings>

  take x-amz-target
    like native-string
  take restore-table-to-point-in-time-input, like restore-table-to-point-in-time-input

  line </#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan restore-table-to-point-in-time-input

  loot 200
    seed json, like restore-table-to-point-in-time-output
    note <Success>
  loot 480
    seed json, like table-already-exists-exception
    note <TableAlreadyExistsException>
  loot 481
    seed json, like table-not-found-exception
    note <TableNotFoundException>
  loot 482
    seed json, like table-in-use-exception
    note <TableInUseException>
  loot 483
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 484
    seed json, like invalid-restore-time-exception
    note <InvalidRestoreTimeException>
  loot 485
    seed json, like point-in-time-recovery-unavailable-exception
    note <PointInTimeRecoveryUnavailableException>
  loot 486
    seed json, like internal-server-error
    note <InternalServerError>