
load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/alarm-configuration
  take form alarm-configuration

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/application-name
  take form application-name

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/auto-rollback-configuration
  take form auto-rollback-configuration

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/auto-scaling-group-list
  take form auto-scaling-group-list

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/blue-green-deployment-configuration
  take form blue-green-deployment-configuration

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/compute-platform
  take form compute-platform

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-config-name
  take form deployment-config-name

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-group-id
  take form deployment-group-id

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-group-name
  take form deployment-group-name

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-style
  take form deployment-style

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/ec2-tag-filter-list
  take form ec2-tag-filter-list

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/ec2-tag-set
  take form ec2-tag-set

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/ecs-service-list
  take form ecs-service-list

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/last-deployment-info
  take form last-deployment-info

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/load-balancer-info
  take form load-balancer-info

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/on-premises-tag-set
  take form on-premises-tag-set

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/outdated-instances-strategy
  take form outdated-instances-strategy

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/revision-location
  take form revision-location

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/role
  take form role

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/tag-filter-list
  take form tag-filter-list

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/trigger-config-list
  take form trigger-config-list

form deployment-group-info, name <DeploymentGroupInfo>
  note <Information about a deployment group.>
  take application-name, name <applicationName>
    like application-name
    void take
    note <The application name.>
  take deployment-group-id, name <deploymentGroupId>
    like deployment-group-id
    void take
    note <The deployment group ID.>
  take deployment-group-name, name <deploymentGroupName>
    like deployment-group-name
    void take
    note <The deployment group name.>
  take deployment-config-name, name <deploymentConfigName>
    like deployment-config-name
    void take
    note <The deployment configuration name.>
  take ec2-tag-filters, name <ec2TagFilters>
    like ec2-tag-filter-list
    void take
    note <The Amazon EC2 tags on which to filter. The deployment group includes EC2 instances with any of the specified tags.>
  take on-premises-instance-tag-filters, name <onPremisesInstanceTagFilters>
    like tag-filter-list
    void take
    note <The on-premises instance tags on which to filter. The deployment group includes on-premises instances with any of the specified tags.>
  take auto-scaling-groups, name <autoScalingGroups>
    like auto-scaling-group-list
    void take
    note <A list of associated Auto Scaling groups.>
  take service-role-arn, name <serviceRoleArn>
    like role
    void take
    note <A service role Amazon Resource Name (ARN) that grants CodeDeploy permission to make calls to AWS services on your behalf. For more information, see [Create a Service Role for AWS CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/getting-started-create-service-role.html) in the _AWS CodeDeploy User Guide_.>
  take target-revision, name <targetRevision>
    like revision-location
    void take
    note <Information about the deployment group's target revision, including type and location.>
  take trigger-configurations, name <triggerConfigurations>
    like trigger-config-list
    void take
    note <Information about triggers associated with the deployment group.>
  take alarm-configuration, name <alarmConfiguration>
    like alarm-configuration
    void take
    note <A list of alarms associated with the deployment group.>
  take auto-rollback-configuration, name <autoRollbackConfiguration>
    like auto-rollback-configuration
    void take
    note <Information about the automatic rollback configuration associated with the deployment group.>
  take deployment-style, name <deploymentStyle>
    like deployment-style
    void take
    note <Information about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.>
  take outdated-instances-strategy, name <outdatedInstancesStrategy>
    like outdated-instances-strategy
    void take
    note <Indicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision.

If this option is set to `UPDATE` or is unspecified, CodeDeploy initiates one or more 'auto-update outdated instances' deployments to apply the deployed application revision to the new EC2 instances.

If this option is set to `IGNORE`, CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.>
  take blue-green-deployment-configuration, name <blueGreenDeploymentConfiguration>
    like blue-green-deployment-configuration
    void take
    note <Information about blue/green deployment options for a deployment group.>
  take load-balancer-info, name <loadBalancerInfo>
    like load-balancer-info
    void take
    note <Information about the load balancer to use in a deployment.>
  take last-successful-deployment, name <lastSuccessfulDeployment>
    like last-deployment-info
    void take
    note <Information about the most recent successful deployment to the deployment group.>
  take last-attempted-deployment, name <lastAttemptedDeployment>
    like last-deployment-info
    void take
    note <Information about the most recent attempted deployment to the deployment group.>
  take ec2-tag-set, name <ec2TagSet>
    like ec2-tag-set
    void take
    note <Information about groups of tags applied to an EC2 instance. The deployment group includes only EC2 instances identified by all of the tag groups. Cannot be used in the same call as ec2TagFilters.>
  take on-premises-tag-set, name <onPremisesTagSet>
    like on-premises-tag-set
    void take
    note <Information about groups of tags applied to an on-premises instance. The deployment group includes only on-premises instances identified by all the tag groups. Cannot be used in the same call as onPremisesInstanceTagFilters.>
  take compute-platform, name <computePlatform>
    like compute-platform
    void take
    note <The destination platform type for the deployment (`Lambda`, `Server`, or `ECS`).>
  take ecs-services, name <ecsServices>
    like ecs-service-list
    void take
    note <The target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format `&lt;clustername&gt;:&lt;servicename&gt;`.>