
load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/additional-deployment-status-info
  take form additional-deployment-status-info

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/application-name
  take form application-name

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/auto-rollback-configuration
  take form auto-rollback-configuration

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/blue-green-deployment-configuration
  take form blue-green-deployment-configuration

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/compute-platform
  take form compute-platform

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-config-name
  take form deployment-config-name

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-creator
  take form deployment-creator

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-group-name
  take form deployment-group-name

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-id
  take form deployment-id

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-overview
  take form deployment-overview

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-status
  take form deployment-status

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-status-message-list
  take form deployment-status-message-list

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-style
  take form deployment-style

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/description
  take form description

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/error-information
  take form error-information

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/external-id
  take form external-id

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/file-exists-behavior
  take form file-exists-behavior

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/load-balancer-info
  take form load-balancer-info

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/related-deployments
  take form related-deployments

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/revision-location
  take form revision-location

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/rollback-info
  take form rollback-info

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/target-instances
  take form target-instances

load @wavebond/snow/amazonaws.com/codedeploy/2014-10-06/base/timestamp
  take form timestamp

load @wavebond/snow/base/boolean
  take form boolean

form deployment-info, name <DeploymentInfo>
  note <Information about a deployment.>
  take application-name, name <applicationName>
    like application-name
    void take
    note <The application name.>
  take deployment-group-name, name <deploymentGroupName>
    like deployment-group-name
    void take
    note <The deployment group name.>
  take deployment-config-name, name <deploymentConfigName>
    like deployment-config-name
    void take
    note <The deployment configuration name.>
  take deployment-id, name <deploymentId>
    like deployment-id
    void take
    note <The unique ID of a deployment.>
  take previous-revision, name <previousRevision>
    like revision-location
    void take
    note <Information about the application revision that was deployed to the deployment group before the most recent successful deployment.>
  take revision, name <revision>
    like revision-location
    void take
    note <Information about the location of stored application artifacts and the service from which to retrieve them.>
  take status, name <status>
    like deployment-status
    void take
    note <The current state of the deployment as a whole.>
  take error-information, name <errorInformation>
    like error-information
    void take
    note <Information about any error associated with this deployment.>
  take create-time, name <createTime>
    like timestamp
    void take
    note <A timestamp that indicates when the deployment was created.>
  take start-time, name <startTime>
    like timestamp
    void take
    note <A timestamp that indicates when the deployment was deployed to the deployment group.

In some cases, the reported value of the start time might be later than the complete time. This is due to differences in the clock settings of backend servers that participate in the deployment process.>
  take complete-time, name <completeTime>
    like timestamp
    void take
    note <A timestamp that indicates when the deployment was complete.>
  take deployment-overview, name <deploymentOverview>
    like deployment-overview
    void take
    note <A summary of the deployment status of the instances in the deployment.>
  take description, name <description>
    like description
    void take
    note <A comment about the deployment.>
  take creator, name <creator>
    like deployment-creator
    void take
    note <The means by which the deployment was created:

- `user`: A user created the deployment.

- `autoscaling`: Amazon EC2 Auto Scaling created the deployment.

- `codeDeployRollback`: A rollback process created the deployment.

- `CodeDeployAutoUpdate`: An auto-update process created the deployment when it detected outdated EC2 instances.>
  take ignore-application-stop-failures, name <ignoreApplicationStopFailures>
    like boolean
    void take
    note <If true, then if an `ApplicationStop`, `BeforeBlockTraffic`, or `AfterBlockTraffic` deployment lifecycle event to an instance fails, then the deployment continues to the next deployment lifecycle event. For example, if `ApplicationStop` fails, the deployment continues with DownloadBundle. If `BeforeBlockTraffic` fails, the deployment continues with `BlockTraffic`. If `AfterBlockTraffic` fails, the deployment continues with `ApplicationStop`.

If false or not specified, then if a lifecycle event fails during a deployment to an instance, that deployment fails. If deployment to that instance is part of an overall deployment and the number of healthy hosts is not less than the minimum number of healthy hosts, then a deployment to the next instance is attempted.

During a deployment, the AWS CodeDeploy agent runs the scripts specified for `ApplicationStop`, `BeforeBlockTraffic`, and `AfterBlockTraffic` in the AppSpec file from the previous successful deployment. (All other scripts are run from the AppSpec file in the current deployment.) If one of these scripts contains an error and does not run successfully, the deployment can fail.

If the cause of the failure is a script from the last successful deployment that will never run successfully, create a new deployment and use `ignoreApplicationStopFailures` to specify that the `ApplicationStop`, `BeforeBlockTraffic`, and `AfterBlockTraffic` failures should be ignored.>
  take auto-rollback-configuration, name <autoRollbackConfiguration>
    like auto-rollback-configuration
    void take
    note <Information about the automatic rollback configuration associated with the deployment.>
  take update-outdated-instances-only, name <updateOutdatedInstancesOnly>
    like boolean
    void take
    note <Indicates whether only instances that are not running the latest application revision are to be deployed to.>
  take rollback-info, name <rollbackInfo>
    like rollback-info
    void take
    note <Information about a deployment rollback.>
  take deployment-style, name <deploymentStyle>
    like deployment-style
    void take
    note <Information about the type of deployment, either in-place or blue/green, you want to run and whether to route deployment traffic behind a load balancer.>
  take target-instances, name <targetInstances>
    like target-instances
    void take
    note <Information about the instances that belong to the replacement environment in a blue/green deployment.>
  take instance-termination-wait-time-started, name <instanceTerminationWaitTimeStarted>
    like boolean
    void take
    note <Indicates whether the wait period set for the termination of instances in the original environment has started. Status is 'false' if the KEEP_ALIVE option is specified. Otherwise, 'true' as soon as the termination wait period starts.>
  take blue-green-deployment-configuration, name <blueGreenDeploymentConfiguration>
    like blue-green-deployment-configuration
    void take
    note <Information about blue/green deployment options for this deployment.>
  take load-balancer-info, name <loadBalancerInfo>
    like load-balancer-info
    void take
    note <Information about the load balancer used in the deployment.>
  take additional-deployment-status-info, name <additionalDeploymentStatusInfo>
    like additional-deployment-status-info
    void take
    note <Provides information about the results of a deployment, such as whether instances in the original environment in a blue/green deployment were not terminated.>
  take file-exists-behavior, name <fileExistsBehavior>
    like file-exists-behavior
    void take
    note <Information about how AWS CodeDeploy handles files that already exist in a deployment target location but weren't part of the previous successful deployment.

- `DISALLOW`: The deployment fails. This is also the default behavior if no option is specified.

- `OVERWRITE`: The version of the file from the application revision currently being deployed replaces the version already on the instance.

- `RETAIN`: The version of the file already on the instance is kept and used as part of the new deployment.>
  take deployment-status-messages, name <deploymentStatusMessages>
    like deployment-status-message-list
    void take
    note <Messages that contain information about the status of a deployment.>
  take compute-platform, name <computePlatform>
    like compute-platform
    void take
    note <The destination platform type for the deployment (`Lambda`, `Server`, or `ECS`).>
  take external-id, name <externalId>
    like external-id
    void take
    note <The unique ID for an external resource (for example, a CloudFormation stack ID) that is linked to this deployment.>
  take related-deployments, name <relatedDeployments>
    like related-deployments
    void take