
load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/alarm-configuration
  take form alarm-configuration

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/application-name
  take form application-name

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/auto-rollback-configuration
  take form auto-rollback-configuration

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/auto-scaling-group-name-list
  take form auto-scaling-group-name-list

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/blue-green-deployment-configuration
  take form blue-green-deployment-configuration

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-config-name
  take form deployment-config-name

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-group-name
  take form deployment-group-name

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-style
  take form deployment-style

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/ec2-tag-filter-list
  take form ec2-tag-filter-list

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/ec2-tag-set
  take form ec2-tag-set

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/ecs-service-list
  take form ecs-service-list

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/load-balancer-info
  take form load-balancer-info

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/on-premises-tag-set
  take form on-premises-tag-set

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/outdated-instances-strategy
  take form outdated-instances-strategy

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/role
  take form role

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/tag-filter-list
  take form tag-filter-list

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/tag-list
  take form tag-list

load @termsurf/snow/amazonaws.com/codedeploy/2014-10-06/base/trigger-config-list
  take form trigger-config-list

form create-deployment-group-input, name <CreateDeploymentGroupInput>
  note <Represents the input of a `CreateDeploymentGroup` operation.>
  take application-name, name <applicationName>
    like application-name
    note <The name of an AWS CodeDeploy application associated with the IAM user or AWS account.>
  take deployment-group-name, name <deploymentGroupName>
    like deployment-group-name
    note <The name of a new deployment group for the specified application.>
  take deployment-config-name, name <deploymentConfigName>
    like deployment-config-name
    void take
    note <If specified, the deployment configuration name can be either one of the predefined configurations provided with AWS CodeDeploy or a custom deployment configuration that you create by calling the create deployment configuration operation.

`CodeDeployDefault.OneAtATime` is the default deployment configuration. It is used if a configuration isn't specified for the deployment or deployment group.

For more information about the predefined deployment configurations in AWS CodeDeploy, see [Working with Deployment Configurations in CodeDeploy](https://docs.aws.amazon.com/codedeploy/latest/userguide/deployment-configurations.html) in the _AWS CodeDeploy User Guide_.>
  take ec2-tag-filters, name <ec2TagFilters>
    like ec2-tag-filter-list
    void take
    note <The Amazon EC2 tags on which to filter. The deployment group includes EC2 instances with any of the specified tags. Cannot be used in the same call as ec2TagSet.>
  take on-premises-instance-tag-filters, name <onPremisesInstanceTagFilters>
    like tag-filter-list
    void take
    note <The on-premises instance tags on which to filter. The deployment group includes on-premises instances with any of the specified tags. Cannot be used in the same call as `OnPremisesTagSet`.>
  take auto-scaling-groups, name <autoScalingGroups>
    like auto-scaling-group-name-list
    void take
    note <A list of associated Amazon EC2 Auto Scaling groups.>
  take service-role-arn, name <serviceRoleArn>
    like role
    note <A service role Amazon Resource Name (ARN) that allows AWS CodeDeploy to act on the user's behalf when interacting with AWS services.>
  take trigger-configurations, name <triggerConfigurations>
    like trigger-config-list
    void take
    note <Information about triggers to create when the deployment group is created. For examples, see [Create a Trigger for an AWS CodeDeploy Event](https://docs.aws.amazon.com/codedeploy/latest/userguide/how-to-notify-sns.html) in the _AWS CodeDeploy User Guide_.>
  take alarm-configuration, name <alarmConfiguration>
    like alarm-configuration
    void take
    note <Information to add about Amazon CloudWatch alarms when the deployment group is created.>
  take auto-rollback-configuration, name <autoRollbackConfiguration>
    like auto-rollback-configuration
    void take
    note <Configuration information for an automatic rollback that is added when a deployment group is created.>
  take outdated-instances-strategy, name <outdatedInstancesStrategy>
    like outdated-instances-strategy
    void take
    note <Indicates what happens when new EC2 instances are launched mid-deployment and do not receive the deployed application revision.

If this option is set to `UPDATE` or is unspecified, CodeDeploy initiates one or more 'auto-update outdated instances' deployments to apply the deployed application revision to the new EC2 instances.

If this option is set to `IGNORE`, CodeDeploy does not initiate a deployment to update the new EC2 instances. This may result in instances having different revisions.>
  take deployment-style, name <deploymentStyle>
    like deployment-style
    void take
    note <Information about the type of deployment, in-place or blue/green, that you want to run and whether to route deployment traffic behind a load balancer.>
  take blue-green-deployment-configuration, name <blueGreenDeploymentConfiguration>
    like blue-green-deployment-configuration
    void take
    note <Information about blue/green deployment options for a deployment group.>
  take load-balancer-info, name <loadBalancerInfo>
    like load-balancer-info
    void take
    note <Information about the load balancer used in a deployment.>
  take ec2-tag-set, name <ec2TagSet>
    like ec2-tag-set
    void take
    note <Information about groups of tags applied to EC2 instances. The deployment group includes only EC2 instances identified by all the tag groups. Cannot be used in the same call as `ec2TagFilters`.>
  take ecs-services, name <ecsServices>
    like ecs-service-list
    void take
    note <The target Amazon ECS services in the deployment group. This applies only to deployment groups that use the Amazon ECS compute platform. A target Amazon ECS service is specified as an Amazon ECS cluster and service name pair using the format `&lt;clustername&gt;:&lt;servicename&gt;`.>
  take on-premises-tag-set, name <onPremisesTagSet>
    like on-premises-tag-set
    void take
    note <Information about groups of tags applied to on-premises instances. The deployment group includes only on-premises instances identified by all of the tag groups. Cannot be used in the same call as `onPremisesInstanceTagFilters`.>
  take tags, name <tags>
    like tag-list
    void take
    note <The metadata that you apply to CodeDeploy deployment groups to help you organize and categorize them. Each tag consists of a key and an optional value, both of which you define.>