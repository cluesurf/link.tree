
load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-does-not-exist-exception
  take form deployment-does-not-exist-exception

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/deployment-id-required-exception
  take form deployment-id-required-exception

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/invalid-deployment-id-exception
  take form invalid-deployment-id-exception

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/invalid-lifecycle-event-hook-execution-id-exception
  take form invalid-lifecycle-event-hook-execution-id-exception

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/invalid-lifecycle-event-hook-execution-status-exception
  take form invalid-lifecycle-event-hook-execution-status-exception

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/lifecycle-event-already-completed-exception
  take form lifecycle-event-already-completed-exception

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/put-lifecycle-event-hook-execution-status-output
  take form put-lifecycle-event-hook-execution-status-output

load @tunebond/snow/amazonaws.com/codedeploy/2014-10-06/base/unsupported-action-for-deployment-type-exception
  take form unsupported-action-for-deployment-type-exception

load @tunebond/snow/base/native-string
  take form native-string

boot put-lifecycle-event-hook-execution-status, name <PutLifecycleEventHookExecutionStatus>
  deed post
  note <Sets the result of a Lambda validation function. The function validates lifecycle hooks during a deployment that uses the AWS Lambda or Amazon ECS compute platform. For AWS Lambda deployments, the available lifecycle hooks are `BeforeAllowTraffic` and `AfterAllowTraffic`. For Amazon ECS deployments, the available lifecycle hooks are `BeforeInstall`, `AfterInstall`, `AfterAllowTestTraffic`, `BeforeAllowTraffic`, and `AfterAllowTraffic`. Lambda validation functions return `Succeeded` or `Failed`. For more information, see [AppSpec 'hooks' Section for an AWS Lambda Deployment](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-lambda) and [AppSpec 'hooks' Section for an Amazon ECS Deployment](https://docs.aws.amazon.com/codedeploy/latest/userguide/reference-appspec-file-structure-hooks.html#appspec-hooks-ecs).>

  take x-amz-target
    like native-string
  take put-lifecycle-event-hook-execution-status-input, like put-lifecycle-event-hook-execution-status-input

  line </#X-Amz-Target=CodeDeploy_20141006.PutLifecycleEventHookExecutionStatus>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan put-lifecycle-event-hook-execution-status-input

  loot 200
    seed json, like put-lifecycle-event-hook-execution-status-output
    note <Success>
  loot 480
    seed json, like invalid-lifecycle-event-hook-execution-status-exception
    note <InvalidLifecycleEventHookExecutionStatusException>
  loot 481
    seed json, like invalid-lifecycle-event-hook-execution-id-exception
    note <InvalidLifecycleEventHookExecutionIdException>
  loot 482
    seed json, like lifecycle-event-already-completed-exception
    note <LifecycleEventAlreadyCompletedException>
  loot 483
    seed json, like deployment-id-required-exception
    note <DeploymentIdRequiredException>
  loot 484
    seed json, like deployment-does-not-exist-exception
    note <DeploymentDoesNotExistException>
  loot 485
    seed json, like invalid-deployment-id-exception
    note <InvalidDeploymentIdException>
  loot 486
    seed json, like unsupported-action-for-deployment-type-exception
    note <UnsupportedActionForDeploymentTypeException>