
load @treesurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/client-token
  take form client-token

load @treesurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/component-format
  take form component-format

load @treesurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/component-type
  take form component-type

load @treesurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/non-empty-string
  take form non-empty-string

load @treesurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/platform
  take form platform

load @treesurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/resource-name
  take form resource-name

load @treesurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/tag-map
  take form tag-map

load @treesurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/uri
  take form uri

load @treesurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/version-number
  take form version-number

form import-component-request, name <ImportComponentRequest>
  take name, name <name>
    like resource-name
    note <The name of the component.>
  take semantic-version, name <semanticVersion>
    like version-number
    note <The semantic version of the component. This version follows the semantic version syntax.

The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.

**Filtering:** When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying "1.2.x", or "1.x.x" works to filter list results, but neither "1.x.2", nor "x.2.x" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.>
  take description, name <description>
    like non-empty-string
    void take
    note <The description of the component. Describes the contents of the component.>
  take change-description, name <changeDescription>
    like non-empty-string
    void take
    note <The change description of the component. Describes what change has been made in this version, or what makes this version different from other versions of this component.>
  take type, name <type>
    like component-type
    note <The type of the component denotes whether the component is used to build the image, or only to test it.>
  take format, name <format>
    like component-format
    note <The format of the resource that you want to import as a component.>
  take platform, name <platform>
    like platform
    note <The platform of the component.>
  take data, name <data>
    like non-empty-string
    void take
    note <The data of the component. Used to specify the data inline. Either `data` or `uri` can be used to specify the data within the component.>
  take uri, name <uri>
    like uri
    void take
    note <The uri of the component. Must be an Amazon S3 URL and the requester must have permission to access the Amazon S3 bucket. If you use Amazon S3, you can specify component content up to your service quota. Either `data` or `uri` can be used to specify the data within the component.>
  take kms-key-id, name <kmsKeyId>
    like non-empty-string
    void take
    note <The ID of the KMS key that should be used to encrypt this component.>
  take tags, name <tags>
    like tag-map
    void take
    note <The tags of the component.>
  take client-token, name <clientToken>
    like client-token
    note <The idempotency token of the component.>