
load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/client-token
  take form client-token

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/component-configuration-list
  take form component-configuration-list

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/container-type
  take form container-type

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/inline-docker-file-template
  take form inline-docker-file-template

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/instance-configuration
  take form instance-configuration

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/non-empty-string
  take form non-empty-string

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/platform
  take form platform

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/resource-name
  take form resource-name

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/tag-map
  take form tag-map

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/target-container-repository
  take form target-container-repository

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/uri
  take form uri

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/version-number
  take form version-number

form create-container-recipe-request, name <CreateContainerRecipeRequest>
  take container-type, name <containerType>
    like container-type
    note <The type of container to create.>
  take name, name <name>
    like resource-name
    note <The name of the container recipe.>
  take description, name <description>
    like non-empty-string
    void take
    note <The description of the container recipe.>
  take semantic-version, name <semanticVersion>
    like version-number
    note <The semantic version of the container recipe. This version follows the semantic version syntax.

The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.

**Assignment:** For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.

**Patterns:** You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.>
  take components, name <components>
    like component-configuration-list
    note <Components for build and test that are included in the container recipe.>
  take instance-configuration, name <instanceConfiguration>
    like instance-configuration
    void take
    note <A group of options that can be used to configure an instance for building and testing container images.>
  take dockerfile-template-data, name <dockerfileTemplateData>
    like inline-docker-file-template
    void take
    note <The Dockerfile template used to build your image as an inline data blob.>
  take dockerfile-template-uri, name <dockerfileTemplateUri>
    like uri
    void take
    note <The Amazon S3 URI for the Dockerfile that will be used to build your container image.>
  take platform-override, name <platformOverride>
    like platform
    void take
    note <Specifies the operating system platform when you use a custom source image.>
  take image-os-version-override, name <imageOsVersionOverride>
    like non-empty-string
    void take
    note <Specifies the operating system version for the source image.>
  take parent-image, name <parentImage>
    like non-empty-string
    note <The source image for the container recipe.>
  take tags, name <tags>
    like tag-map
    void take
    note <Tags that are attached to the container recipe.>
  take working-directory, name <workingDirectory>
    like non-empty-string
    void take
    note <The working directory for use during build and test workflows.>
  take target-repository, name <targetRepository>
    like target-container-repository
    note <The destination repository for the container image.>
  take kms-key-id, name <kmsKeyId>
    like non-empty-string
    void take
    note <Identifies which KMS key is used to encrypt the container image.>
  take client-token, name <clientToken>
    like client-token
    note <The client token used to make this request idempotent.>