
load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/arn
  take form arn

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/container-recipe
  take form container-recipe

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/date-time
  take form date-time

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/distribution-configuration
  take form distribution-configuration

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/image-builder-arn
  take form image-builder-arn

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/image-recipe
  take form image-recipe

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/image-state
  take form image-state

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/image-tests-configuration
  take form image-tests-configuration

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/image-type
  take form image-type

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/infrastructure-configuration
  take form infrastructure-configuration

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/nullable-boolean
  take form nullable-boolean

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/os-version
  take form os-version

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/output-resources
  take form output-resources

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/platform
  take form platform

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/resource-name
  take form resource-name

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/tag-map
  take form tag-map

load @wavebond/snow/amazonaws.com/imagebuilder/2019-12-02/base/version-number
  take form version-number

form image, name <Image>
  note <An Image Builder image. You must specify exactly one recipe for the image - either a container recipe (`containerRecipe`), which creates a container image, or an image recipe (`imageRecipe`), which creates an AMI.>
  take arn, name <arn>
    like image-builder-arn
    void take
    note <The Amazon Resource Name (ARN) of the image.

Semantic versioning is included in each object's Amazon Resource Name (ARN), at the level that applies to that object as follows:

1. Versionless ARNs and Name ARNs do not include specific values in any of the nodes. The nodes are either left off entirely, or they are specified as wildcards, for example: x.x.x.

2. Version ARNs have only the first three nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;

3. Build version ARNs have all four nodes, and point to a specific build for a specific version of an object.>
  take type, name <type>
    like image-type
    void take
    note <Specifies whether this is an AMI or container image.>
  take name, name <name>
    like resource-name
    void take
    note <The name of the image.>
  take version, name <version>
    like version-number
    void take
    note <The semantic version of the image.

The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.

**Assignment:** For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.

**Patterns:** You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.

**Filtering:** When you retrieve or reference a resource with a semantic version, you can use wildcards (x) to filter your results. When you use a wildcard in any node, all nodes to the right of the first wildcard must also be wildcards. For example, specifying "1.2.x", or "1.x.x" works to filter list results, but neither "1.x.2", nor "x.2.x" will work. You do not have to specify the build - Image Builder automatically uses a wildcard for that, if applicable.>
  take platform, name <platform>
    like platform
    void take
    note <The platform of the image.>
  take enhanced-image-metadata-enabled, name <enhancedImageMetadataEnabled>
    like nullable-boolean
    void take
    note <Collects additional information about the image being created, including the operating system (OS) version and package list. This information is used to enhance the overall experience of using EC2 Image Builder. Enabled by default.>
  take os-version, name <osVersion>
    like os-version
    void take
    note <The operating system version of the instance. For example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.>
  take state, name <state>
    like image-state
    void take
    note <The state of the image.>
  take image-recipe, name <imageRecipe>
    like image-recipe
    void take
    note <The image recipe used when creating the image.>
  take container-recipe, name <containerRecipe>
    like container-recipe
    void take
    note <The recipe that is used to create an Image Builder container image.>
  take source-pipeline-name, name <sourcePipelineName>
    like resource-name
    void take
    note <The name of the image pipeline that created this image.>
  take source-pipeline-arn, name <sourcePipelineArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the image pipeline that created this image.>
  take infrastructure-configuration, name <infrastructureConfiguration>
    like infrastructure-configuration
    void take
    note <The infrastructure used when creating this image.>
  take distribution-configuration, name <distributionConfiguration>
    like distribution-configuration
    void take
    note <The distribution configuration used when creating this image.>
  take image-tests-configuration, name <imageTestsConfiguration>
    like image-tests-configuration
    void take
    note <The image tests configuration used when creating this image.>
  take date-created, name <dateCreated>
    like date-time
    void take
    note <The date on which this image was created.>
  take output-resources, name <outputResources>
    like output-resources
    void take
    note <The output resources produced when creating this image.>
  take tags, name <tags>
    like tag-map
    void take
    note <The tags of the image.>