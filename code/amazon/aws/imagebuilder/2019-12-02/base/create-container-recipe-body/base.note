
load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/container-repository-service
  take form container-repository-service

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/instance-block-device-mappings
  take form instance-block-device-mappings

load @termsurf/snow/amazonaws.com/imagebuilder/2019-12-02/base/non-empty-string
  take form non-empty-string

form create-container-recipe-body
  take container-type, name <containerType>
  take name, name <name>
  take description, name <description>
    void take
  take semantic-version, name <semanticVersion>
  take components, name <components>
  take instance-configuration, name <instanceConfiguration>
    like form
      take image, name <image>
        like non-empty-string
        void take
        note <The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.>
      take block-device-mappings, name <blockDeviceMappings>
        like instance-block-device-mappings
        void take
        note <Defines the block devices to attach for building an instance from this Image Builder AMI.>
    void take
  take dockerfile-template-data, name <dockerfileTemplateData>
    void take
  take dockerfile-template-uri, name <dockerfileTemplateUri>
    void take
  take platform-override, name <platformOverride>
    void take
  take image-os-version-override, name <imageOsVersionOverride>
    void take
  take parent-image, name <parentImage>
  take tags, name <tags>
    void take
  take working-directory, name <workingDirectory>
    void take
  take target-repository, name <targetRepository>
    like form
      take service, name <service>
        like container-repository-service
        void take
        note <Specifies the service in which this image was registered.>
      take repository-name, name <repositoryName>
        like non-empty-string
        void take
        note <The name of the container repository where the output container image is stored. This name is prefixed by the repository location.>
  take kms-key-id, name <kmsKeyId>
    void take
  take client-token, name <clientToken>