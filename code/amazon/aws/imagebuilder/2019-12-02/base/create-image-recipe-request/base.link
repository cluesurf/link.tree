
load @drumwork/snow/amazonaws.com/imagebuilder/2019-12-02/base/additional-instance-configuration
  take form additional-instance-configuration

load @drumwork/snow/amazonaws.com/imagebuilder/2019-12-02/base/client-token
  take form client-token

load @drumwork/snow/amazonaws.com/imagebuilder/2019-12-02/base/component-configuration-list
  take form component-configuration-list

load @drumwork/snow/amazonaws.com/imagebuilder/2019-12-02/base/instance-block-device-mappings
  take form instance-block-device-mappings

load @drumwork/snow/amazonaws.com/imagebuilder/2019-12-02/base/non-empty-string
  take form non-empty-string

load @drumwork/snow/amazonaws.com/imagebuilder/2019-12-02/base/resource-name
  take form resource-name

load @drumwork/snow/amazonaws.com/imagebuilder/2019-12-02/base/tag-map
  take form tag-map

load @drumwork/snow/amazonaws.com/imagebuilder/2019-12-02/base/version-number
  take form version-number

form create-image-recipe-request, name <CreateImageRecipeRequest>
  take name, name <name>
    like resource-name
    note <The name of the image recipe.>
  take description, name <description>
    like non-empty-string
    void take
    note <The description of the image recipe.>
  take semantic-version, name <semanticVersion>
    like version-number
    note <The semantic version of the image recipe. This version follows the semantic version syntax.

The semantic version has four nodes: &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can assign values for the first three, and can filter on all of them.

**Assignment:** For the first three nodes you can assign any positive integer value, including zero, with an upper limit of 2^30-1, or 1073741823 for each node. Image Builder automatically assigns the build number, and that is not open for updates.

**Patterns:** You can use any numeric pattern that adheres to the assignment requirements for the nodes that you can assign. For example, you might choose a software version pattern, such as 1.0.0, or a date, such as 2021.01.01.>
  take components, name <components>
    like component-configuration-list
    note <The components of the image recipe.>
  take parent-image, name <parentImage>
    like non-empty-string
    note <The parent image of the image recipe. The value of the string can be the ARN of the parent image or an AMI ID. The format for the ARN follows this example: `arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x`. You can provide the specific version that you want to use, or you can use a wildcard in all of the fields. If you enter an AMI ID for the string value, you must have access to the AMI, and the AMI must be in the same Region in which you are using Image Builder.>
  take block-device-mappings, name <blockDeviceMappings>
    like instance-block-device-mappings
    void take
    note <The block device mappings of the image recipe.>
  take tags, name <tags>
    like tag-map
    void take
    note <The tags of the image recipe.>
  take working-directory, name <workingDirectory>
    like non-empty-string
    void take
    note <The working directory used during build and test workflows.>
  take additional-instance-configuration, name <additionalInstanceConfiguration>
    like additional-instance-configuration
    void take
    note <Specify additional settings and launch scripts for your build instances.>
  take client-token, name <clientToken>
    like client-token
    note <The idempotency token used to make this request idempotent.>