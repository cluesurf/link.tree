
load @drumwork/snow/amazonaws.com/appflow/2020-08-23/base/connector-metadata
  take form connector-metadata

load @drumwork/snow/amazonaws.com/appflow/2020-08-23/base/connector-type-list
  take form connector-type-list

load @drumwork/snow/amazonaws.com/appflow/2020-08-23/base/scheduling-frequency-type-list
  take form scheduling-frequency-type-list

load @drumwork/snow/amazonaws.com/appflow/2020-08-23/base/trigger-type-list
  take form trigger-type-list

load @drumwork/snow/base/boolean
  take form boolean

form connector-configuration, name <ConnectorConfiguration>
  note <The configuration settings related to a given connector.>
  take can-use-as-source, name <canUseAsSource>
    like boolean
    void take
    note <Specifies whether the connector can be used as a source.>
  take can-use-as-destination, name <canUseAsDestination>
    like boolean
    void take
    note <Specifies whether the connector can be used as a destination.>
  take supported-destination-connectors, name <supportedDestinationConnectors>
    like connector-type-list
    void take
    note <Lists the connectors that are available for use as destinations.>
  take supported-scheduling-frequencies, name <supportedSchedulingFrequencies>
    like scheduling-frequency-type-list
    void take
    note <Specifies the supported flow frequency for that connector.>
  take is-private-link-enabled, name <isPrivateLinkEnabled>
    like boolean
    void take
    note <Specifies if PrivateLink is enabled for that connector.>
  take is-private-link-endpoint-url-required, name <isPrivateLinkEndpointUrlRequired>
    like boolean
    void take
    note <Specifies if a PrivateLink endpoint URL is required.>
  take supported-trigger-types, name <supportedTriggerTypes>
    like trigger-type-list
    void take
    note <Specifies the supported trigger types for the flow.>
  take connector-metadata, name <connectorMetadata>
    like connector-metadata
    void take
    note <Specifies connector-specific metadata such as `oAuthScopes`, `supportedRegions`, `privateLinkServiceUrl`, and so on.>