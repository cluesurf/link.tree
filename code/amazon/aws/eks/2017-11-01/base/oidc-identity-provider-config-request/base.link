
load @treesurf/snow/amazonaws.com/eks/2017-11-01/base/required-claims-map
  take form required-claims-map

load @treesurf/snow/base/string
  take form string

form oidc-identity-provider-config-request, name <OidcIdentityProviderConfigRequest>
  note <An object representing an OpenID Connect (OIDC) configuration. Before associating an OIDC identity provider to your cluster, review the considerations in [Authenticating users for your cluster from an OpenID Connect identity provider](https://docs.aws.amazon.com/eks/latest/userguide/authenticate-oidc-identity-provider.html) in the _Amazon EKS User Guide_.>
  take identity-provider-config-name, name <identityProviderConfigName>
    like string
    note <The name of the OIDC provider configuration.>
  take issuer-url, name <issuerUrl>
    like string
    note <The URL of the OpenID identity provider that allows the API server to discover public signing keys for verifying tokens. The URL must begin with `https://` and should correspond to the `iss` claim in the provider's OIDC ID tokens. Per the OIDC standard, path components are allowed but query parameters are not. Typically the URL consists of only a hostname, like `https://server.example.org` or `https://example.com`. This URL should point to the level below `.well-known/openid-configuration` and must be publicly accessible over the internet.>
  take client-id, name <clientId>
    like string
    note <This is also known as _audience_. The ID for the client application that makes authentication requests to the OpenID identity provider.>
  take username-claim, name <usernameClaim>
    like string
    void take
    note <The JSON Web Token (JWT) claim to use as the username. The default is `sub`, which is expected to be a unique identifier of the end user. You can choose other claims, such as `email` or `name`, depending on the OpenID identity provider. Claims other than `email` are prefixed with the issuer URL to prevent naming clashes with other plug-ins.>
  take username-prefix, name <usernamePrefix>
    like string
    void take
    note <The prefix that is prepended to username claims to prevent clashes with existing names. If you do not provide this field, and `username` is a value other than `email`, the prefix defaults to `issuerurl#`. You can use the value `-` to disable all prefixing.>
  take groups-claim, name <groupsClaim>
    like string
    void take
    note <The JWT claim that the provider uses to return your groups.>
  take groups-prefix, name <groupsPrefix>
    like string
    void take
    note <The prefix that is prepended to group claims to prevent clashes with existing names (such as `system:` groups). For example, the value `oidc:` will create group names like `oidc:engineering` and `oidc:infra`.>
  take required-claims, name <requiredClaims>
    like required-claims-map
    void take
    note <The key value pairs that describe required claims in the identity token. If set, each claim is verified to be present in the token with a matching value. For the maximum number of claims that you can require, see [Amazon EKS service quotas](https://docs.aws.amazon.com/eks/latest/userguide/service-quotas.html) in the _Amazon EKS User Guide_.>