
load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/ami-types
  take form ami-types

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/boxed-integer
  take form boxed-integer

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/capacity-types
  take form capacity-types

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/labels-map
  take form labels-map

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/launch-template-specification
  take form launch-template-specification

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/nodegroup-health
  take form nodegroup-health

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/nodegroup-resources
  take form nodegroup-resources

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/nodegroup-scaling-config
  take form nodegroup-scaling-config

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/nodegroup-status
  take form nodegroup-status

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/nodegroup-update-config
  take form nodegroup-update-config

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/remote-access-config
  take form remote-access-config

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/string-list
  take form string-list

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/tag-map
  take form tag-map

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/taints-list
  take form taints-list

load @termsurf/snow/amazonaws.com/eks/2017-11-01/base/timestamp
  take form timestamp

load @termsurf/snow/base/string
  take form string

form nodegroup, name <Nodegroup>
  note <An object representing an Amazon EKS managed node group.>
  take nodegroup-name, name <nodegroupName>
    like string
    void take
    note <The name associated with an Amazon EKS managed node group.>
  take nodegroup-arn, name <nodegroupArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) associated with the managed node group.>
  take cluster-name, name <clusterName>
    like string
    void take
    note <The name of the cluster that the managed node group resides in.>
  take version, name <version>
    like string
    void take
    note <The Kubernetes version of the managed node group.>
  take release-version, name <releaseVersion>
    like string
    void take
    note <If the node group was deployed using a launch template with a custom AMI, then this is the AMI ID that was specified in the launch template. For node groups that weren't deployed using a launch template, this is the version of the Amazon EKS optimized AMI that the node group was deployed with.>
  take created-at, name <createdAt>
    like timestamp
    void take
    note <The Unix epoch timestamp in seconds for when the managed node group was created.>
  take modified-at, name <modifiedAt>
    like timestamp
    void take
    note <The Unix epoch timestamp in seconds for when the managed node group was last modified.>
  take status, name <status>
    like nodegroup-status
    void take
    note <The current status of the managed node group.>
  take capacity-type, name <capacityType>
    like capacity-types
    void take
    note <The capacity type of your managed node group.>
  take scaling-config, name <scalingConfig>
    like nodegroup-scaling-config
    void take
    note <The scaling configuration details for the Auto Scaling group that is associated with your node group.>
  take instance-types, name <instanceTypes>
    like string-list
    void take
    note <If the node group wasn't deployed with a launch template, then this is the instance type that is associated with the node group. If the node group was deployed with a launch template, then this is `null`.>
  take subnets, name <subnets>
    like string-list
    void take
    note <The subnets that were specified for the Auto Scaling group that is associated with your node group.>
  take remote-access, name <remoteAccess>
    like remote-access-config
    void take
    note <If the node group wasn't deployed with a launch template, then this is the remote access configuration that is associated with the node group. If the node group was deployed with a launch template, then this is `null`.>
  take ami-type, name <amiType>
    like ami-types
    void take
    note <If the node group was deployed using a launch template with a custom AMI, then this is `CUSTOM`. For node groups that weren't deployed using a launch template, this is the AMI type that was specified in the node group configuration.>
  take node-role, name <nodeRole>
    like string
    void take
    note <The IAM role associated with your node group. The Amazon EKS node `kubelet` daemon makes calls to Amazon Web Services APIs on your behalf. Nodes receive permissions for these API calls through an IAM instance profile and associated policies.>
  take labels, name <labels>
    like labels-map
    void take
    note <The Kubernetes labels applied to the nodes in the node group.

Only labels that are applied with the Amazon EKS API are shown here. There may be other Kubernetes labels applied to the nodes in this group.>
  take taints, name <taints>
    like taints-list
    void take
    note <The Kubernetes taints to be applied to the nodes in the node group when they are created. Effect is one of `No_Schedule`, `Prefer_No_Schedule`, or `No_Execute`. Kubernetes taints can be used together with tolerations to control how workloads are scheduled to your nodes.>
  take resources, name <resources>
    like nodegroup-resources
    void take
    note <The resources associated with the node group, such as Auto Scaling groups and security groups for remote access.>
  take disk-size, name <diskSize>
    like boxed-integer
    void take
    note <If the node group wasn't deployed with a launch template, then this is the disk size in the node group configuration. If the node group was deployed with a launch template, then this is `null`.>
  take health, name <health>
    like nodegroup-health
    void take
    note <The health status of the node group. If there are issues with your node group's health, they are listed here.>
  take update-config, name <updateConfig>
    like nodegroup-update-config
    void take
    note <The node group update configuration.>
  take launch-template, name <launchTemplate>
    like launch-template-specification
    void take
    note <If a launch template was used to create the node group, then this is the launch template that was used.>
  take tags, name <tags>
    like tag-map
    void take
    note <The metadata applied to the node group to assist with categorization and organization. Each tag consists of a key and an optional value, both of which you define. Node group tags do not propagate to any other resources associated with the node group, such as the Amazon EC2 instances or subnets.>