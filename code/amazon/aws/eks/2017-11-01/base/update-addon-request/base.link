
load @drumwork/snow/amazonaws.com/eks/2017-11-01/base/resolve-conflicts
  take form resolve-conflicts

load @drumwork/snow/amazonaws.com/eks/2017-11-01/base/role-arn
  take form role-arn

load @drumwork/snow/base/string
  take form string

form update-addon-request, name <UpdateAddonRequest>
  take addon-version, name <addonVersion>
    like string
    void take
    note <The version of the add-on. The version must match one of the versions returned by [`DescribeAddonVersions`](https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeAddonVersions.html) .>
  take service-account-role-arn, name <serviceAccountRoleArn>
    like role-arn
    void take
    note <The Amazon Resource Name (ARN) of an existing IAM role to bind to the add-on's service account. The role must be assigned the IAM permissions required by the add-on. If you don't specify an existing IAM role, then the add-on uses the permissions assigned to the node IAM role. For more information, see [Amazon EKS node IAM role](https://docs.aws.amazon.com/eks/latest/userguide/create-node-role.html) in the _Amazon EKS User Guide_.

To specify an existing IAM role, you must have an IAM OpenID Connect (OIDC) provider created for your cluster. For more information, see [Enabling IAM roles for service accounts on your cluster](https://docs.aws.amazon.com/eks/latest/userguide/enable-iam-roles-for-service-accounts.html) in the _Amazon EKS User Guide_.>
  take resolve-conflicts, name <resolveConflicts>
    like resolve-conflicts
    void take
    note <How to resolve parameter value conflicts when applying the new version of the add-on to the cluster.>
  take client-request-token, name <clientRequestToken>
    like string
    void take
    note <Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.>