
load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/airflow-version
  take form airflow-version

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/environment-class
  take form environment-class

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/iam-role-arn
  take form iam-role-arn

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/kms-key
  take form kms-key

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/logging-configuration-input
  take form logging-configuration-input

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/max-workers
  take form max-workers

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/min-workers
  take form min-workers

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/network-configuration
  take form network-configuration

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/relative-path
  take form relative-path

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/s3-bucket-arn
  take form s3-bucket-arn

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/s3-object-version
  take form s3-object-version

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/schedulers
  take form schedulers

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/synthetic-create-environment-input-airflow-configuration-options
  take form synthetic-create-environment-input-airflow-configuration-options

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/tag-map
  take form tag-map

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/webserver-access-mode
  take form webserver-access-mode

load @drumwork/snow/amazonaws.com/mwaa/2020-07-01/base/weekly-maintenance-window-start
  take form weekly-maintenance-window-start

form create-environment-input, name <CreateEnvironmentInput>
  note <This section contains the Amazon Managed Workflows for Apache Airflow (MWAA) API reference documentation to create an environment. For more information, see [Get started with Amazon Managed Workflows for Apache Airflow](https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html).>
  take airflow-configuration-options, name <AirflowConfigurationOptions>
    like synthetic-create-environment-input-airflow-configuration-options
    void take
    note <A list of key-value pairs containing the Apache Airflow configuration options you want to attach to your environment. To learn more, see [Apache Airflow configuration options](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-env-variables.html).>
  take airflow-version, name <AirflowVersion>
    like airflow-version
    void take
    note <The Apache Airflow version for your environment. For example, `v1.10.12`. If no value is specified, defaults to the latest version. Valid values: `v1.10.12`.>
  take dag-s3-path, name <DagS3Path>
    like relative-path
    note <The relative path to the DAGs folder on your Amazon S3 bucket. For example, `dags`. To learn more, see [Adding or updating DAGs](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-folder.html).>
  take environment-class, name <EnvironmentClass>
    like environment-class
    void take
    note <The environment class type. Valid values: `mw1.small`, `mw1.medium`, `mw1.large`. To learn more, see [Amazon MWAA environment class](https://docs.aws.amazon.com/mwaa/latest/userguide/environment-class.html).>
  take execution-role-arn, name <ExecutionRoleArn>
    like iam-role-arn
    note <The Amazon Resource Name (ARN) of the execution role for your environment. An execution role is an AWS Identity and Access Management (IAM) role that grants MWAA permission to access AWS services and resources used by your environment. For example, `arn:aws:iam::123456789:role/my-execution-role`. To learn more, see [Amazon MWAA Execution role](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-create-role.html).>
  take kms-key, name <KmsKey>
    like kms-key
    void take
    note <The AWS Key Management Service (KMS) key to encrypt the data in your environment. You can use an AWS owned CMK, or a Customer managed CMK (advanced). To learn more, see [Get started with Amazon Managed Workflows for Apache Airflow](https://docs.aws.amazon.com/mwaa/latest/userguide/get-started.html).>
  take logging-configuration, name <LoggingConfiguration>
    like logging-configuration-input
    void take
    note <Defines the Apache Airflow logs to send to CloudWatch Logs: `DagProcessingLogs`, `SchedulerLogs`, `TaskLogs`, `WebserverLogs`, `WorkerLogs`.>
  take max-workers, name <MaxWorkers>
    like max-workers
    void take
    note <The maximum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the `MaxWorkers` field. For example, `20`. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the one worker that is included with your environment, or the number you specify in `MinWorkers`.>
  take min-workers, name <MinWorkers>
    like min-workers
    void take
    note <The minimum number of workers that you want to run in your environment. MWAA scales the number of Apache Airflow workers up to the number you specify in the `MaxWorkers` field. When there are no more tasks running, and no more in the queue, MWAA disposes of the extra workers leaving the worker count you specify in the `MinWorkers` field. For example, `2`.>
  take network-configuration, name <NetworkConfiguration>
    like network-configuration
    note <The VPC networking components used to secure and enable network traffic between the AWS resources for your environment. To learn more, see [About networking on Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/networking-about.html).>
  take plugins-s3-object-version, name <PluginsS3ObjectVersion>
    like s3-object-version
    void take
    note <The version of the plugins.zip file on your Amazon S3 bucket. A version must be specified each time a plugins.zip file is updated. To learn more, see [How S3 Versioning works](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html).>
  take plugins-s3-path, name <PluginsS3Path>
    like relative-path
    void take
    note <The relative path to the `plugins.zip` file on your Amazon S3 bucket. For example, `plugins.zip`. If specified, then the plugins.zip version is required. To learn more, see [Installing custom plugins](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html).>
  take requirements-s3-object-version, name <RequirementsS3ObjectVersion>
    like s3-object-version
    void take
    note <The version of the requirements.txt file on your Amazon S3 bucket. A version must be specified each time a requirements.txt file is updated. To learn more, see [How S3 Versioning works](https://docs.aws.amazon.com/AmazonS3/latest/userguide/versioning-workflows.html).>
  take requirements-s3-path, name <RequirementsS3Path>
    like relative-path
    void take
    note <The relative path to the `requirements.txt` file on your Amazon S3 bucket. For example, `requirements.txt`. If specified, then a file version is required. To learn more, see [Installing Python dependencies](https://docs.aws.amazon.com/mwaa/latest/userguide/working-dags-dependencies.html).>
  take schedulers, name <Schedulers>
    like schedulers
    void take
    note <The number of Apache Airflow schedulers to run in your environment.>
  take source-bucket-arn, name <SourceBucketArn>
    like s3-bucket-arn
    note <The Amazon Resource Name (ARN) of the Amazon S3 bucket where your DAG code and supporting files are stored. For example, `arn:aws:s3:::my-airflow-bucket-unique-name`. To learn more, see [Create an Amazon S3 bucket for Amazon MWAA](https://docs.aws.amazon.com/mwaa/latest/userguide/mwaa-s3-bucket.html).>
  take tags, name <Tags>
    like tag-map
    void take
    note <The key-value tag pairs you want to associate to your environment. For example, `"Environment": "Staging"`. To learn more, see [Tagging AWS resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).>
  take webserver-access-mode, name <WebserverAccessMode>
    like webserver-access-mode
    void take
    note <The Apache Airflow _Web server_ access mode. To learn more, see [Apache Airflow access modes](https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-networking.html).>
  take weekly-maintenance-window-start, name <WeeklyMaintenanceWindowStart>
    like weekly-maintenance-window-start
    void take
    note <The day and time of the week to start weekly maintenance updates of your environment in the following format: `DAY:HH:MM`. For example: `TUE:03:30`. You can specify a start time in 30 minute increments only. Supported input includes the following:

- MON|TUE|WED|THU|FRI|SAT|SUN:([01]\\d|2[0-3]):(00|30)>