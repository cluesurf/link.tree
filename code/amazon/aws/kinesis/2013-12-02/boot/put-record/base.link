
load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/invalid-argument-exception
  take form invalid-argument-exception

load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/kms-access-denied-exception
  take form kms-access-denied-exception

load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/kms-disabled-exception
  take form kms-disabled-exception

load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/kms-invalid-state-exception
  take form kms-invalid-state-exception

load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/kms-not-found-exception
  take form kms-not-found-exception

load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/kms-opt-in-required
  take form kms-opt-in-required

load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/kms-throttling-exception
  take form kms-throttling-exception

load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/provisioned-throughput-exceeded-exception
  take form provisioned-throughput-exceeded-exception

load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/put-record-output
  take form put-record-output

load @nerdbond/snow/amazonaws.com/kinesis/2013-12-02/base/resource-not-found-exception
  take form resource-not-found-exception

load @nerdbond/snow/base/native-string
  take form native-string

boot put-record, name <PutRecord>
  deed post
  note <Writes a single data record into an Amazon Kinesis data stream. Call `PutRecord` to send data into the stream for real-time ingestion and subsequent processing, one record at a time. Each shard can support writes up to 1,000 records per second, up to a maximum data write total of 1 MiB per second.

You must specify the name of the stream that captures, stores, and transports the data; a partition key; and the data blob itself.

The data blob can be any type of data; for example, a segment from a log file, geographic/location data, website clickstream data, and so on.

The partition key is used by Kinesis Data Streams to distribute data across shards. Kinesis Data Streams segregates the data records that belong to a stream into multiple shards, using the partition key associated with each data record to determine the shard to which a given data record belongs.

Partition keys are Unicode strings, with a maximum length limit of 256 characters for each key. An MD5 hash function is used to map partition keys to 128-bit integer values and to map associated data records to shards using the hash key ranges of the shards. You can override hashing the partition key to determine the shard by explicitly specifying a hash value using the `ExplicitHashKey` parameter. For more information, see [Adding Data to a Stream](https://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream) in the _Amazon Kinesis Data Streams Developer Guide_.

`PutRecord` returns the shard ID of where the data record was placed and the sequence number that was assigned to the data record.

Sequence numbers increase over time and are specific to a shard within a stream, not across all shards within a stream. To guarantee strictly increasing ordering, write serially to a shard and use the `SequenceNumberForOrdering` parameter. For more information, see [Adding Data to a Stream](https://docs.aws.amazon.com/kinesis/latest/dev/developing-producers-with-sdk.html#kinesis-using-sdk-java-add-data-to-stream) in the _Amazon Kinesis Data Streams Developer Guide_.

After you write a record to a stream, you cannot modify that record or its order within the stream.

If a `PutRecord` request cannot be processed because of insufficient provisioned throughput on the shard involved in the request, `PutRecord` throws `ProvisionedThroughputExceededException`.

By default, data records are accessible for 24 hours from the time that they are added to a stream. You can use IncreaseStreamRetentionPeriod or DecreaseStreamRetentionPeriod to modify this retention period.>

  take x-amz-target
    like native-string
  take put-record-input, like put-record-input

  line </#X-Amz-Target=Kinesis_20131202.PutRecord>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan put-record-input

  loot 200
    seed json, like put-record-output
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like invalid-argument-exception
    note <InvalidArgumentException>
  loot 482
    seed json, like provisioned-throughput-exceeded-exception
    note <ProvisionedThroughputExceededException>
  loot 483
    seed json, like kms-disabled-exception
    note <KMSDisabledException>
  loot 484
    seed json, like kms-invalid-state-exception
    note <KMSInvalidStateException>
  loot 485
    seed json, like kms-access-denied-exception
    note <KMSAccessDeniedException>
  loot 486
    seed json, like kms-not-found-exception
    note <KMSNotFoundException>
  loot 487
    seed json, like kms-opt-in-required
    note <KMSOptInRequired>
  loot 488
    seed json, like kms-throttling-exception
    note <KMSThrottlingException>