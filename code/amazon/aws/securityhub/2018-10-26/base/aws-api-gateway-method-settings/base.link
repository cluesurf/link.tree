
load @nerdbond/snow/amazonaws.com/securityhub/2018-10-26/base/double
  take form double

load @nerdbond/snow/amazonaws.com/securityhub/2018-10-26/base/non-empty-string
  take form non-empty-string

load @nerdbond/snow/base/boolean
  take form boolean

load @nerdbond/snow/base/integer
  take form integer

form aws-api-gateway-method-settings, name <AwsApiGatewayMethodSettings>
  note <Defines settings for a method for the stage.>
  take metrics-enabled, name <MetricsEnabled>
    like boolean
    void take
    note <Indicates whether CloudWatch metrics are enabled for the method.>
  take logging-level, name <LoggingLevel>
    like non-empty-string
    void take
    note <The logging level for this method. The logging level affects the log entries that are pushed to CloudWatch Logs.

If the logging level is `ERROR`, then the logs only include error-level entries.

If the logging level is `INFO`, then the logs include both `ERROR` events and extra informational events.

Valid values: `OFF` | `ERROR` | `INFO`>
  take data-trace-enabled, name <DataTraceEnabled>
    like boolean
    void take
    note <Indicates whether data trace logging is enabled for the method. Data trace logging affects the log entries that are pushed to CloudWatch Logs.>
  take throttling-burst-limit, name <ThrottlingBurstLimit>
    like integer
    void take
    note <The throttling burst limit for the method.>
  take throttling-rate-limit, name <ThrottlingRateLimit>
    like double
    void take
    note <The throttling rate limit for the method.>
  take caching-enabled, name <CachingEnabled>
    like boolean
    void take
    note <Indicates whether responses are cached and returned for requests. For responses to be cached, a cache cluster must be enabled on the stage.>
  take cache-ttl-in-seconds, name <CacheTtlInSeconds>
    like integer
    void take
    note <Specifies the time to live (TTL), in seconds, for cached responses. The higher the TTL, the longer the response is cached.>
  take cache-data-encrypted, name <CacheDataEncrypted>
    like boolean
    void take
    note <Indicates whether the cached responses are encrypted.>
  take require-authorization-for-cache-control, name <RequireAuthorizationForCacheControl>
    like boolean
    void take
    note <Indicates whether authorization is required for a cache invalidation request.>
  take unauthorized-cache-control-header-strategy, name <UnauthorizedCacheControlHeaderStrategy>
    like non-empty-string
    void take
    note <Indicates how to handle unauthorized requests for cache invalidation.

Valid values: `FAIL_WITH_403` | `SUCCEED_WITH_RESPONSE_HEADER` | `SUCCEED_WITHOUT_RESPONSE_HEADER`>
  take http-method, name <HttpMethod>
    like non-empty-string
    void take
    note <The HTTP method. You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.>
  take resource-path, name <ResourcePath>
    like non-empty-string
    void take
    note <The resource path for this method. Forward slashes (/) are encoded as ~1 . The initial slash must include a forward slash.

For example, the path value `/resource/subresource` must be encoded as `/~1resource~1subresource`.

To specify the root path, use only a slash (/). You can use an asterisk (*) as a wildcard to apply method settings to multiple methods.>