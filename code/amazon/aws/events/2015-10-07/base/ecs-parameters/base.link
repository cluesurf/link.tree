
load @drumwork/snow/amazonaws.com/events/2015-10-07/base/arn
  take form arn

load @drumwork/snow/amazonaws.com/events/2015-10-07/base/capacity-provider-strategy
  take form capacity-provider-strategy

load @drumwork/snow/amazonaws.com/events/2015-10-07/base/launch-type
  take form launch-type

load @drumwork/snow/amazonaws.com/events/2015-10-07/base/limit-min1
  take form limit-min1

load @drumwork/snow/amazonaws.com/events/2015-10-07/base/network-configuration
  take form network-configuration

load @drumwork/snow/amazonaws.com/events/2015-10-07/base/placement-constraints
  take form placement-constraints

load @drumwork/snow/amazonaws.com/events/2015-10-07/base/placement-strategies
  take form placement-strategies

load @drumwork/snow/amazonaws.com/events/2015-10-07/base/propagate-tags
  take form propagate-tags

load @drumwork/snow/amazonaws.com/events/2015-10-07/base/reference-id
  take form reference-id

load @drumwork/snow/amazonaws.com/events/2015-10-07/base/tag-list
  take form tag-list

load @drumwork/snow/base/boolean
  take form boolean

load @drumwork/snow/base/string
  take form string

form ecs-parameters, name <EcsParameters>
  note <The custom parameters to be used when the target is an Amazon ECS task.>
  take task-definition-arn, name <TaskDefinitionArn>
    like arn
    note <The ARN of the task definition to use if the event target is an Amazon ECS task.>
  take task-count, name <TaskCount>
    like limit-min1
    void take
    note <The number of tasks to create based on `TaskDefinition`. The default is 1.>
  take launch-type, name <LaunchType>
    like launch-type
    void take
    note <Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. The `FARGATE` value is supported only in the Regions where Fargate witt Amazon ECS is supported. For more information, see [Fargate on Amazon ECS](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/AWS-Fargate.html) in the _Amazon Elastic Container Service Developer Guide_.>
  take network-configuration, name <NetworkConfiguration>
    like network-configuration
    void take
    note <Use this structure if the Amazon ECS task uses the `awsvpc` network mode. This structure specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. This structure is required if `LaunchType` is `FARGATE` because the `awsvpc` mode is required for Fargate tasks.

If you specify `NetworkConfiguration` when the target ECS task does not use the `awsvpc` network mode, the task fails.>
  take platform-version, name <PlatformVersion>
    like string
    void take
    note <Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as `1.1.0`.

This structure is used only if `LaunchType` is `FARGATE`. For more information about valid platform versions, see [Fargate Platform Versions](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html) in the _Amazon Elastic Container Service Developer Guide_.>
  take group, name <Group>
    like string
    void take
    note <Specifies an ECS task group for the task. The maximum length is 255 characters.>
  take capacity-provider-strategy, name <CapacityProviderStrategy>
    like capacity-provider-strategy
    void take
    note <The capacity provider strategy to use for the task.

If a `capacityProviderStrategy` is specified, the `launchType` parameter must be omitted. If no `capacityProviderStrategy` or launchType is specified, the `defaultCapacityProviderStrategy` for the cluster is used.>
  take enable-ecs-managed-tags, name <EnableECSManagedTags>
    like boolean
    void take
    note <Specifies whether to enable Amazon ECS managed tags for the task. For more information, see [Tagging Your Amazon ECS Resources](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-using-tags.html) in the Amazon Elastic Container Service Developer Guide.>
  take enable-execute-command, name <EnableExecuteCommand>
    like boolean
    void take
    note <Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.>
  take placement-constraints, name <PlacementConstraints>
    like placement-constraints
    void take
    note <An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime).>
  take placement-strategy, name <PlacementStrategy>
    like placement-strategies
    void take
    note <The placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.>
  take propagate-tags, name <PropagateTags>
    like propagate-tags
    void take
    note <Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. To add tags to a task after task creation, use the TagResource API action.>
  take reference-id, name <ReferenceId>
    like reference-id
    void take
    note <The reference ID to use for the task.>
  take tags, name <Tags>
    like tag-list
    void take
    note <The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define. To learn more, see [RunTask](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_RunTask.html#ECS-RunTask-request-tags) in the Amazon ECS API Reference.>