
load @nerdbond/snow/amazonaws.com/personalize-events/2018-03-22/base/date
  take form date

load @nerdbond/snow/amazonaws.com/personalize-events/2018-03-22/base/float-type
  take form float-type

load @nerdbond/snow/amazonaws.com/personalize-events/2018-03-22/base/impression
  take form impression

load @nerdbond/snow/amazonaws.com/personalize-events/2018-03-22/base/item-id
  take form item-id

load @nerdbond/snow/amazonaws.com/personalize-events/2018-03-22/base/recommendation-id
  take form recommendation-id

load @nerdbond/snow/amazonaws.com/personalize-events/2018-03-22/base/string-type
  take form string-type

form event, name <Event>
  note <Represents user interaction event information sent using the `PutEvents` API.>
  take event-id, name <eventId>
    like string-type
    void take
    note <An ID associated with the event. If an event ID is not provided, Amazon Personalize generates a unique ID for the event. An event ID is not used as an input to the model. Amazon Personalize uses the event ID to distinquish unique events. Any subsequent events after the first with the same event ID are not used in model training.>
  take event-type, name <eventType>
    like string-type
    note <The type of event, such as click or download. This property corresponds to the `EVENT_TYPE` field of your Interactions schema and depends on the types of events you are tracking.>
  take event-value, name <eventValue>
    like float-type
    void take
    note <The event value that corresponds to the `EVENT_VALUE` field of the Interactions schema.>
  take item-id, name <itemId>
    like item-id
    void take
    note <The item ID key that corresponds to the `ITEM_ID` field of the Interactions schema.>
  take properties, name <properties>
    void take
  take sent-at, name <sentAt>
    like date
    note <The timestamp (in Unix time) on the client side when the event occurred.>
  take recommendation-id, name <recommendationId>
    like recommendation-id
    void take
    note <The ID of the recommendation.>
  take impression, name <impression>
    like impression
    void take
    note <A list of item IDs that represents the sequence of items you have shown the user. For example, `["itemId1", "itemId2", "itemId3"]`.>