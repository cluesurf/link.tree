
load @wavebond/snow/amazonaws.com/kinesis-video-signaling/2019-12-04/base/client-limit-exceeded-exception
  take form client-limit-exceeded-exception

load @wavebond/snow/amazonaws.com/kinesis-video-signaling/2019-12-04/base/get-ice-server-config-body
  take form get-ice-server-config-body

load @wavebond/snow/amazonaws.com/kinesis-video-signaling/2019-12-04/base/get-ice-server-config-response
  take form get-ice-server-config-response

load @wavebond/snow/amazonaws.com/kinesis-video-signaling/2019-12-04/base/invalid-argument-exception
  take form invalid-argument-exception

load @wavebond/snow/amazonaws.com/kinesis-video-signaling/2019-12-04/base/invalid-client-exception
  take form invalid-client-exception

load @wavebond/snow/amazonaws.com/kinesis-video-signaling/2019-12-04/base/not-authorized-exception
  take form not-authorized-exception

load @wavebond/snow/amazonaws.com/kinesis-video-signaling/2019-12-04/base/resource-not-found-exception
  take form resource-not-found-exception

load @wavebond/snow/amazonaws.com/kinesis-video-signaling/2019-12-04/base/session-expired-exception
  take form session-expired-exception

boot get-ice-server-config, name <GetIceServerConfig>
  deed post
  note <Gets the Interactive Connectivity Establishment (ICE) server configuration information, including URIs, username, and password which can be used to configure the WebRTC connection. The ICE component uses this configuration information to setup the WebRTC connection, including authenticating with the Traversal Using Relays around NAT (TURN) relay server.

TURN is a protocol that is used to improve the connectivity of peer-to-peer applications. By providing a cloud-based relay service, TURN ensures that a connection can be established even when one or more peers are incapable of a direct peer-to-peer connection. For more information, see [A REST API For Access To TURN Services](https://tools.ietf.org/html/draft-uberti-rtcweb-turn-rest-00).

You can invoke this API to establish a fallback mechanism in case either of the peers is unable to establish a direct peer-to-peer connection over a signaling channel. You must specify either a signaling channel ARN or the client ID in order to invoke this API.>

  take get-ice-server-config-body, like get-ice-server-config-body

  line </v1/get-ice-server-config>

  seed json, loan get-ice-server-config-body

  loot 200
    seed json, like get-ice-server-config-response
    note <Success>
  loot 480
    seed json, like invalid-client-exception
    note <InvalidClientException>
  loot 481
    seed json, like session-expired-exception
    note <SessionExpiredException>
  loot 482
    seed json, like client-limit-exceeded-exception
    note <ClientLimitExceededException>
  loot 483
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 484
    seed json, like invalid-argument-exception
    note <InvalidArgumentException>
  loot 485
    seed json, like not-authorized-exception
    note <NotAuthorizedException>