
load @termsurf/snow/amazonaws.com/serverlessrepo/2017-09-08/base/list-of-string
  take form list-of-string

load @termsurf/snow/base/boolean
  take form boolean

load @termsurf/snow/base/integer
  take form integer

load @termsurf/snow/base/string
  take form string

form parameter-definition, name <ParameterDefinition>
  note <Parameters supported by the application.>
  take allowed-pattern, name <AllowedPattern>
    like string
    void take
    note <A regular expression that represents the patterns to allow for String types.>
    host xml
      host name, text <allowedPattern>
  take allowed-values, name <AllowedValues>
    like list-of-string
    void take
    note <An array containing the list of values allowed for the parameter.>
    host xml
      host name, text <allowedValues>
  take constraint-description, name <ConstraintDescription>
    like string
    void take
    note <A string that explains a constraint when the constraint is violated. For example, without a constraint description, a parameter that has an allowed pattern of [A-Za-z0-9]+ displays the following error message when the user specifies an invalid value:

Malformed input-Parameter MyParameter must match pattern [A-Za-z0-9]+

By adding a constraint description, such as "must contain only uppercase and lowercase letters and numbers," you can display the following customized error message:

Malformed input-Parameter MyParameter must contain only uppercase and lowercase letters and numbers.>
    host xml
      host name, text <constraintDescription>
  take default-value, name <DefaultValue>
    like string
    void take
    note <A value of the appropriate type for the template to use if no value is specified when a stack is created. If you define constraints for the parameter, you must specify a value that adheres to those constraints.>
    host xml
      host name, text <defaultValue>
  take description, name <Description>
    like string
    void take
    note <A string of up to 4,000 characters that describes the parameter.>
    host xml
      host name, text <description>
  take max-length, name <MaxLength>
    like integer
    void take
    note <An integer value that determines the largest number of characters that you want to allow for String types.>
    host xml
      host name, text <maxLength>
  take max-value, name <MaxValue>
    like integer
    void take
    note <A numeric value that determines the largest numeric value that you want to allow for Number types.>
    host xml
      host name, text <maxValue>
  take min-length, name <MinLength>
    like integer
    void take
    note <An integer value that determines the smallest number of characters that you want to allow for String types.>
    host xml
      host name, text <minLength>
  take min-value, name <MinValue>
    like integer
    void take
    note <A numeric value that determines the smallest numeric value that you want to allow for Number types.>
    host xml
      host name, text <minValue>
  take name, name <Name>
    like string
    note <The name of the parameter.>
    host xml
      host name, text <name>
  take no-echo, name <NoEcho>
    like boolean
    void take
    note <Whether to mask the parameter value whenever anyone makes a call that describes the stack. If you set the value to true, the parameter value is masked with asterisks (*****).>
    host xml
      host name, text <noEcho>
  take referenced-by-resources, name <ReferencedByResources>
    like list-of-string
    note <A list of AWS SAM resources that use this parameter.>
    host xml
      host name, text <referencedByResources>
  take type, name <Type>
    like string
    void take
    note <The type of the parameter.

Valid values: String | Number | List&lt;Number&gt; | CommaDelimitedList

String: A literal string.

For example, users can specify "MyUserName".

Number: An integer or float. AWS CloudFormation validates the parameter value as a number. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a string.

For example, users might specify "8888".

List&lt;Number&gt;: An array of integers or floats that are separated by commas. AWS CloudFormation validates the parameter value as numbers. However, when you use the parameter elsewhere in your template (for example, by using the Ref intrinsic function), the parameter value becomes a list of strings.

For example, users might specify "80,20", and then Ref results in ["80","20"].

CommaDelimitedList: An array of literal strings that are separated by commas. The total number of strings should be one more than the total number of commas. Also, each member string is space-trimmed.

For example, users might specify "test,dev,prod", and then Ref results in ["test","dev","prod"].>
    host xml
      host name, text <type>