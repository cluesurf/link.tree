
load @drumwork/snow/amazonaws.com/sns/2010-03-31/base/authorization-error-exception
  take form authorization-error-exception

load @drumwork/snow/amazonaws.com/sns/2010-03-31/base/internal-error-exception
  take form internal-error-exception

load @drumwork/snow/amazonaws.com/sns/2010-03-31/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @drumwork/snow/amazonaws.com/sns/2010-03-31/base/set-sms-attributes-response
  take form set-sms-attributes-response

load @drumwork/snow/amazonaws.com/sns/2010-03-31/base/throttled-exception
  take form throttled-exception

load @drumwork/snow/base/form
  take form form

load @drumwork/snow/base/native-string
  take form native-string

boot get-set-sms-attributes, name <GET_SetSMSAttributes>
  note <Use this request to set the default settings for sending SMS messages and receiving daily SMS usage reports.

You can override some of these settings for a single message when you use the `Publish` action with the `MessageAttributes.entry.N` parameter. For more information, see [Publishing to a mobile phone](https://docs.aws.amazon.com/sns/latest/dg/sms_publish-to-phone.html) in the _Amazon SNS Developer Guide_.

To use this operation, you must grant the Amazon SNS service principal (`sns.amazonaws.com`) permission to perform the `s3:ListBucket` action.>

  take attributes
    like form
    note <The default settings for sending SMS messages from your account. You can set values for the following attribute names:

`MonthlySpendLimit` - The maximum amount in USD that you are willing to spend each month to send SMS messages. When Amazon SNS determines that sending an SMS message would incur a cost that exceeds this limit, it stops sending SMS messages within minutes.

Amazon SNS stops sending SMS messages within minutes of the limit being crossed. During that interval, if you continue to send SMS messages, you will incur costs that exceed your limit.

By default, the spend limit is set to the maximum allowed by Amazon SNS. If you want to raise the limit, submit an [SNS Limit Increase case](https://console.aws.amazon.com/support/home#/case/create?issueType=service-limit-increase&limitType=service-code-sns). For **New limit value**, enter your desired monthly spend limit. In the **Use Case Description** field, explain that you are requesting an SMS monthly spend limit increase.

`DeliveryStatusIAMRole` - The ARN of the IAM role that allows Amazon SNS to write logs about SMS deliveries in CloudWatch Logs. For each SMS message that you send, Amazon SNS writes a log that includes the message price, the success or failure status, the reason for failure (if the message failed), the message dwell time, and other information.

`DeliveryStatusSuccessSamplingRate` - The percentage of successful SMS deliveries for which Amazon SNS will write logs in CloudWatch Logs. The value can be an integer from 0 - 100. For example, to write logs only for failed deliveries, set this value to `0`. To write logs for 10% of your successful deliveries, set it to `10`.

`DefaultSenderID` - A string, such as your business brand, that is displayed as the sender on the receiving device. Support for sender IDs varies by country. The sender ID can be 1 - 11 alphanumeric characters, and it must contain at least one letter.

`DefaultSMSType` - The type of SMS message that you will send by default. You can assign the following values:

- `Promotional` - (Default) Noncritical messages, such as marketing messages. Amazon SNS optimizes the message delivery to incur the lowest cost.

- `Transactional` - Critical messages that support customer transactions, such as one-time passcodes for multi-factor authentication. Amazon SNS optimizes the message delivery to achieve the highest reliability.

`UsageReportS3Bucket` - The name of the Amazon S3 bucket to receive daily SMS usage reports from Amazon SNS. Each day, Amazon SNS will deliver a usage report as a CSV file to the bucket. The report includes the following information for each SMS message that was successfully delivered by your account:

- Time that the message was published (in UTC)

- Message ID

- Destination phone number

- Message type

- Delivery status

- Message price (in USD)

- Part number (a message is split into multiple parts if it is too long for a single message)

- Total number of parts

To receive the report, the bucket must have a policy that allows the Amazon SNS service principal to perform the `s3:PutObject` and `s3:GetBucketLocation` actions.

For an example bucket policy and usage report, see [Monitoring SMS Activity](https://docs.aws.amazon.com/sns/latest/dg/sms_stats.html) in the _Amazon SNS Developer Guide_.>
  take action
    like native-string
  take version
    like native-string

  line </#Action=SetSMSAttributes>

  find <attributes>, loan attributes
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like set-sms-attributes-response
    note <Success>
  loot 480
    seed xml, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 481
    seed xml, like throttled-exception
    note <ThrottledException>
  loot 482
    seed xml, like internal-error-exception
    note <InternalErrorException>
  loot 483
    seed xml, like authorization-error-exception
    note <AuthorizationErrorException>