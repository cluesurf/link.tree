
load @termsurf/snow/amazonaws.com/route53/2013-04-01/base/incompatible-version
  take form incompatible-version

load @termsurf/snow/amazonaws.com/route53/2013-04-01/base/invalid-input
  take form invalid-input

load @termsurf/snow/amazonaws.com/route53/2013-04-01/base/list-health-checks-response
  take form list-health-checks-response

load @termsurf/snow/base/native-string
  take form native-string

boot list-health-checks, name <ListHealthChecks>
  deed get
  note <Retrieve a list of the health checks that are associated with the current Amazon Web Services account.>

  take marker
    like native-string
    note <If the value of `IsTruncated` in the previous response was `true`, you have more health checks. To get another group, submit another `ListHealthChecks` request.

For the value of `marker`, specify the value of `NextMarker` from the previous response, which is the ID of the first health check that Amazon Route 53 will return if you submit another request.

If the value of `IsTruncated` in the previous response was `false`, there are no more health checks to get.>
    void take
  take maxitems
    like native-string
    note <The maximum number of health checks that you want `ListHealthChecks` to return in response to the current request. Amazon Route 53 returns a maximum of 100 items. If you set `MaxItems` to a value greater than 100, Route 53 returns only the first 100 health checks.>
    void take
  take max-items
    like native-string
    note <Pagination limit>
    void take
  take marker
    like native-string
    note <Pagination token>
    void take

  line </2013-04-01/healthcheck>

  find <marker>, loan marker
  find <maxitems>, loan maxitems
  find <MaxItems>, loan max-items
  find <Marker>, loan marker

  loot 200
    seed xml, like list-health-checks-response
    note <Success>
  loot 480
    seed xml, like invalid-input
    note <InvalidInput>
  loot 481
    seed xml, like incompatible-version
    note <IncompatibleVersion>
