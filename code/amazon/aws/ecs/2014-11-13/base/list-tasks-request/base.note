
load @termsurf/snow/amazonaws.com/ecs/2014-11-13/base/boxed-integer
  take form boxed-integer

load @termsurf/snow/amazonaws.com/ecs/2014-11-13/base/desired-status
  take form desired-status

load @termsurf/snow/amazonaws.com/ecs/2014-11-13/base/launch-type
  take form launch-type

load @termsurf/snow/base/string
  take form string

form list-tasks-request, name <ListTasksRequest>
  take cluster, name <cluster>
    like string
    void take
    note <The short name or full Amazon Resource Name (ARN) of the cluster to use when filtering the `ListTasks` results. If you do not specify a cluster, the default cluster is assumed.>
  take container-instance, name <containerInstance>
    like string
    void take
    note <The container instance ID or full ARN of the container instance to use when filtering the `ListTasks` results. Specifying a `containerInstance` limits the results to tasks that belong to that container instance.>
  take family, name <family>
    like string
    void take
    note <The name of the task definition family to use when filtering the `ListTasks` results. Specifying a `family` limits the results to tasks that belong to that family.>
  take next-token, name <nextToken>
    like string
    void take
    note <The `nextToken` value returned from a `ListTasks` request indicating that more results are available to fulfill the request and further calls will be needed. If `maxResults` was provided, it is possible the number of results to be fewer than `maxResults`.

This token should be treated as an opaque identifier that is only used to retrieve the next items in a list and not for other programmatic purposes.>
  take max-results, name <maxResults>
    like boxed-integer
    void take
    note <The maximum number of task results returned by `ListTasks` in paginated output. When this parameter is used, `ListTasks` only returns `maxResults` results in a single page along with a `nextToken` response element. The remaining results of the initial request can be seen by sending another `ListTasks` request with the returned `nextToken` value. This value can be between 1 and 100. If this parameter is not used, then `ListTasks` returns up to 100 results and a `nextToken` value if applicable.>
  take started-by, name <startedBy>
    like string
    void take
    note <The `startedBy` value with which to filter the task results. Specifying a `startedBy` value limits the results to tasks that were started with that value.>
  take service-name, name <serviceName>
    like string
    void take
    note <The name of the service to use when filtering the `ListTasks` results. Specifying a `serviceName` limits the results to tasks that belong to that service.>
  take desired-status, name <desiredStatus>
    like desired-status
    void take
    note <The task desired status to use when filtering the `ListTasks` results. Specifying a `desiredStatus` of `STOPPED` limits the results to tasks that Amazon ECS has set the desired status to `STOPPED`. This can be useful for debugging tasks that are not starting properly or have died or finished. The default status filter is `RUNNING`, which shows tasks that Amazon ECS has set the desired status to `RUNNING`.

Although you can filter results based on a desired status of `PENDING`, this does not return any results. Amazon ECS never sets the desired status of a task to that value (only a task's `lastStatus` may have a value of `PENDING`).>
  take launch-type, name <launchType>
    like launch-type
    void take
    note <The launch type to use when filtering the `ListTasks` results.>