
load @treesurf/snow/amazonaws.com/ecs/2014-11-13/base/capacity-provider-strategy
  take form capacity-provider-strategy

load @treesurf/snow/amazonaws.com/ecs/2014-11-13/base/cluster-configuration
  take form cluster-configuration

load @treesurf/snow/amazonaws.com/ecs/2014-11-13/base/cluster-settings
  take form cluster-settings

load @treesurf/snow/amazonaws.com/ecs/2014-11-13/base/string-list
  take form string-list

load @treesurf/snow/amazonaws.com/ecs/2014-11-13/base/tags
  take form tags

load @treesurf/snow/base/string
  take form string

form create-cluster-request, name <CreateClusterRequest>
  take cluster-name, name <clusterName>
    like string
    void take
    note <The name of your cluster. If you do not specify a name for your cluster, you create a cluster named `default`. Up to 255 letters (uppercase and lowercase), numbers, underscores, and hyphens are allowed.>
  take tags, name <tags>
    like tags
    void take
    note <The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.

The following basic restrictions apply to tags:

- Maximum number of tags per resource - 50

- For each resource, each tag key must be unique, and each tag key can have only one value.

- Maximum key length - 128 Unicode characters in UTF-8

- Maximum value length - 256 Unicode characters in UTF-8

- If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.

- Tag keys and values are case-sensitive.

- Do not use `aws:`, `AWS:`, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.>
  take settings, name <settings>
    like cluster-settings
    void take
    note <The setting to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster. If this value is specified, it will override the `containerInsights` value set with PutAccountSetting or PutAccountSettingDefault.>
  take configuration, name <configuration>
    like cluster-configuration
    void take
    note <The execute command configuration for the cluster.>
  take capacity-providers, name <capacityProviders>
    like string-list
    void take
    note <The short name of one or more capacity providers to associate with the cluster. A capacity provider must be associated with a cluster before it can be included as part of the default capacity provider strategy of the cluster or used in a capacity provider strategy when calling the CreateService or RunTask actions.

If specifying a capacity provider that uses an Auto Scaling group, the capacity provider must already be created and not already associated with another cluster. New Auto Scaling group capacity providers can be created with the CreateCapacityProvider API operation.

To use a Fargate capacity provider, specify either the `FARGATE` or `FARGATE_SPOT` capacity providers. The Fargate capacity providers are available to all accounts and only need to be associated with a cluster to be used.

The PutClusterCapacityProviders API operation is used to update the list of available capacity providers for a cluster after the cluster is created.>
  take default-capacity-provider-strategy, name <defaultCapacityProviderStrategy>
    like capacity-provider-strategy
    void take
    note <The capacity provider strategy to set as the default for the cluster. When a default capacity provider strategy is set for a cluster, when calling the RunTask or CreateService APIs with no capacity provider strategy or launch type specified, the default capacity provider strategy for the cluster is used.

If a default capacity provider strategy is not defined for a cluster during creation, it can be defined later with the PutClusterCapacityProviders API operation.>