
load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/attachments
  take form attachments

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/attributes
  take form attributes

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/connectivity
  take form connectivity

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/containers
  take form containers

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/ephemeral-storage
  take form ephemeral-storage

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/health-status
  take form health-status

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/inference-accelerators
  take form inference-accelerators

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/launch-type
  take form launch-type

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/long
  take form long

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/tags
  take form tags

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/task-override
  take form task-override

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/task-stop-code
  take form task-stop-code

load @tunebond/snow/amazonaws.com/ecs/2014-11-13/base/timestamp
  take form timestamp

load @tunebond/snow/base/boolean
  take form boolean

load @tunebond/snow/base/string
  take form string

form task, name <Task>
  note <Details on a task in a cluster.>
  take attachments, name <attachments>
    like attachments
    void take
    note <The Elastic Network Adapter associated with the task if the task uses the `awsvpc` network mode.>
  take attributes, name <attributes>
    like attributes
    void take
    note <The attributes of the task>
  take availability-zone, name <availabilityZone>
    like string
    void take
    note <The availability zone of the task.>
  take capacity-provider-name, name <capacityProviderName>
    like string
    void take
    note <The capacity provider associated with the task.>
  take cluster-arn, name <clusterArn>
    like string
    void take
    note <The ARN of the cluster that hosts the task.>
  take connectivity, name <connectivity>
    like connectivity
    void take
    note <The connectivity status of a task.>
  take connectivity-at, name <connectivityAt>
    like timestamp
    void take
    note <The Unix timestamp for when the task last went into `CONNECTED` status.>
  take container-instance-arn, name <containerInstanceArn>
    like string
    void take
    note <The ARN of the container instances that host the task.>
  take containers, name <containers>
    like containers
    void take
    note <The containers associated with the task.>
  take cpu, name <cpu>
    like string
    void take
    note <The number of CPU units used by the task as expressed in a task definition. It can be expressed as an integer using CPU units, for example `1024`. It can also be expressed as a string using vCPUs, for example `1 vCPU` or `1 vcpu`. String values are converted to an integer indicating the CPU units when the task definition is registered.

If you are using the EC2 launch type, this field is optional. Supported values are between `128` CPU units (`0.125` vCPUs) and `10240` CPU units (`10` vCPUs).

If you are using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of supported values for the `memory` parameter:

- 256 (.25 vCPU) - Available `memory` values: 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB)

- 512 (.5 vCPU) - Available `memory` values: 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB)

- 1024 (1 vCPU) - Available `memory` values: 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB)

- 2048 (2 vCPU) - Available `memory` values: Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB)

- 4096 (4 vCPU) - Available `memory` values: Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB)>
  take created-at, name <createdAt>
    like timestamp
    void take
    note <The Unix timestamp for when the task was created (the task entered the `PENDING` state).>
  take desired-status, name <desiredStatus>
    like string
    void take
    note <The desired status of the task. For more information, see [Task Lifecycle](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-lifecycle.html).>
  take enable-execute-command, name <enableExecuteCommand>
    like boolean
    void take
    note <Whether or not execute command functionality is enabled for this task. If `true`, this enables execute command functionality on all containers in the task.>
  take execution-stopped-at, name <executionStoppedAt>
    like timestamp
    void take
    note <The Unix timestamp for when the task execution stopped.>
  take group, name <group>
    like string
    void take
    note <The name of the task group associated with the task.>
  take health-status, name <healthStatus>
    like health-status
    void take
    note <The health status for the task, which is determined by the health of the essential containers in the task. If all essential containers in the task are reporting as `HEALTHY`, then the task status also reports as `HEALTHY`. If any essential containers in the task are reporting as `UNHEALTHY` or `UNKNOWN`, then the task status also reports as `UNHEALTHY` or `UNKNOWN`, accordingly.

The Amazon ECS container agent does not monitor or report on Docker health checks that are embedded in a container image (such as those specified in a parent image or from the image's Dockerfile) and not specified in the container definition. Health check parameters that are specified in a container definition override any Docker health checks that exist in the container image.>
  take inference-accelerators, name <inferenceAccelerators>
    like inference-accelerators
    void take
    note <The Elastic Inference accelerator associated with the task.>
  take last-status, name <lastStatus>
    like string
    void take
    note <The last known status of the task. For more information, see [Task Lifecycle](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-lifecycle.html).>
  take launch-type, name <launchType>
    like launch-type
    void take
    note <The infrastructure on which your task is running. For more information, see [Amazon ECS launch types](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) in the _Amazon Elastic Container Service Developer Guide_.>
  take memory, name <memory>
    like string
    void take
    note <The amount of memory (in MiB) used by the task as expressed in a task definition. It can be expressed as an integer using MiB, for example `1024`. It can also be expressed as a string using GB, for example `1GB` or `1 GB`. String values are converted to an integer indicating the MiB when the task definition is registered.

If you are using the EC2 launch type, this field is optional.

If you are using the Fargate launch type, this field is required and you must use one of the following values, which determines your range of supported values for the `cpu` parameter:

- 512 (0.5 GB), 1024 (1 GB), 2048 (2 GB) - Available `cpu` values: 256 (.25 vCPU)

- 1024 (1 GB), 2048 (2 GB), 3072 (3 GB), 4096 (4 GB) - Available `cpu` values: 512 (.5 vCPU)

- 2048 (2 GB), 3072 (3 GB), 4096 (4 GB), 5120 (5 GB), 6144 (6 GB), 7168 (7 GB), 8192 (8 GB) - Available `cpu` values: 1024 (1 vCPU)

- Between 4096 (4 GB) and 16384 (16 GB) in increments of 1024 (1 GB) - Available `cpu` values: 2048 (2 vCPU)

- Between 8192 (8 GB) and 30720 (30 GB) in increments of 1024 (1 GB) - Available `cpu` values: 4096 (4 vCPU)>
  take overrides, name <overrides>
    like task-override
    void take
    note <One or more container overrides.>
  take platform-version, name <platformVersion>
    like string
    void take
    note <The platform version on which your task is running. A platform version is only specified for tasks using the Fargate launch type. If one is not specified, the `LATEST` platform version is used by default. For more information, see [Fargate Platform Versions](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html) in the _Amazon Elastic Container Service Developer Guide_.>
  take pull-started-at, name <pullStartedAt>
    like timestamp
    void take
    note <The Unix timestamp for when the container image pull began.>
  take pull-stopped-at, name <pullStoppedAt>
    like timestamp
    void take
    note <The Unix timestamp for when the container image pull completed.>
  take started-at, name <startedAt>
    like timestamp
    void take
    note <The Unix timestamp for when the task started (the task transitioned from the `PENDING` state to the `RUNNING` state).>
  take started-by, name <startedBy>
    like string
    void take
    note <The tag specified when a task is started. If the task is started by an Amazon ECS service, then the `startedBy` parameter contains the deployment ID of the service that starts it.>
  take stop-code, name <stopCode>
    like task-stop-code
    void take
    note <The stop code indicating why a task was stopped. The `stoppedReason` may contain additional details.>
  take stopped-at, name <stoppedAt>
    like timestamp
    void take
    note <The Unix timestamp for when the task was stopped (the task transitioned from the `RUNNING` state to the `STOPPED` state).>
  take stopped-reason, name <stoppedReason>
    like string
    void take
    note <The reason that the task was stopped.>
  take stopping-at, name <stoppingAt>
    like timestamp
    void take
    note <The Unix timestamp for when the task stops (transitions from the `RUNNING` state to `STOPPED`).>
  take tags, name <tags>
    like tags
    void take
    note <The metadata that you apply to the task to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.

The following basic restrictions apply to tags:

- Maximum number of tags per resource - 50

- For each resource, each tag key must be unique, and each tag key can have only one value.

- Maximum key length - 128 Unicode characters in UTF-8

- Maximum value length - 256 Unicode characters in UTF-8

- If your tagging schema is used across multiple services and resources, remember that other services may have restrictions on allowed characters. Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.

- Tag keys and values are case-sensitive.

- Do not use `aws:`, `AWS:`, or any upper or lowercase combination of such as a prefix for either keys or values as it is reserved for Amazon Web Services use. You cannot edit or delete tag keys or values with this prefix. Tags with this prefix do not count against your tags per resource limit.>
  take task-arn, name <taskArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the task.>
  take task-definition-arn, name <taskDefinitionArn>
    like string
    void take
    note <The ARN of the task definition that creates the task.>
  take version, name <version>
    like long
    void take
    note <The version counter for the task. Every time a task experiences a change that triggers a CloudWatch event, the version counter is incremented. If you are replicating your Amazon ECS task state with CloudWatch Events, you can compare the version of a task reported by the Amazon ECS API actions with the version reported in CloudWatch Events for the task (inside the `detail` object) to verify that the version in your event stream is current.>
  take ephemeral-storage, name <ephemeralStorage>
    like ephemeral-storage
    void take
    note <The ephemeral storage settings for the task.>