
load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/aws-user-arn
  take form aws-user-arn

load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/entity-id
  take form entity-id

load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/entity-name
  take form entity-name

load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/entity-status
  take form entity-status

load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/epoch-time
  take form epoch-time

load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/long-type
  take form long-type

load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/message
  take form message

load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/performance-metrics
  take form performance-metrics

load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/presigned-s3-url
  take form presigned-s3-url

load @drumwork/snow/amazonaws.com/machinelearning/2014-12-12/base/s3-url
  take form s3-url

form get-evaluation-output, name <GetEvaluationOutput>
  note <Represents the output of a `GetEvaluation` operation and describes an `Evaluation`.>
  take evaluation-id, name <EvaluationId>
    like entity-id
    void take
    note <The evaluation ID which is same as the `EvaluationId` in the request.>
  take ml-model-id, name <MLModelId>
    like entity-id
    void take
    note <The ID of the `MLModel` that was the focus of the evaluation.>
  take evaluation-data-source-id, name <EvaluationDataSourceId>
    like entity-id
    void take
    note <The `DataSource` used for this evaluation.>
  take input-data-location-s3, name <InputDataLocationS3>
    like s3-url
    void take
    note <The location of the data file or directory in Amazon Simple Storage Service (Amazon S3).>
  take created-by-iam-user, name <CreatedByIamUser>
    like aws-user-arn
    void take
    note <The AWS user account that invoked the evaluation. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.>
  take created-at, name <CreatedAt>
    like epoch-time
    void take
    note <The time that the `Evaluation` was created. The time is expressed in epoch time.>
  take last-updated-at, name <LastUpdatedAt>
    like epoch-time
    void take
    note <The time of the most recent edit to the `Evaluation`. The time is expressed in epoch time.>
  take name, name <Name>
    like entity-name
    void take
    note <A user-supplied name or description of the `Evaluation`.>
  take status, name <Status>
    like entity-status
    void take
    note <The status of the evaluation. This element can have one of the following values:

- `PENDING` - Amazon Machine Language (Amazon ML) submitted a request to evaluate an `MLModel`.

- `INPROGRESS` - The evaluation is underway.

- `FAILED` - The request to evaluate an `MLModel` did not run to completion. It is not usable.

- `COMPLETED` - The evaluation process completed successfully.

- `DELETED` - The `Evaluation` is marked as deleted. It is not usable.>
  take performance-metrics, name <PerformanceMetrics>
    like performance-metrics
    void take
    note <Measurements of how well the `MLModel` performed using observations referenced by the `DataSource`. One of the following metric is returned based on the type of the `MLModel`:

- BinaryAUC: A binary `MLModel` uses the Area Under the Curve (AUC) technique to measure performance.

- RegressionRMSE: A regression `MLModel` uses the Root Mean Square Error (RMSE) technique to measure performance. RMSE measures the difference between predicted and actual values for a single variable.

- MulticlassAvgFScore: A multiclass `MLModel` uses the F1 score technique to measure performance.

For more information about performance metrics, please see the [Amazon Machine Learning Developer Guide](https://docs.aws.amazon.com/machine-learning/latest/dg).>
  take log-uri, name <LogUri>
    like presigned-s3-url
    void take
    note <A link to the file that contains logs of the `CreateEvaluation` operation.>
  take message, name <Message>
    like message
    void take
    note <A description of the most recent details about evaluating the `MLModel`.>
  take compute-time, name <ComputeTime>
    like long-type
    void take
    note <The approximate CPU time in milliseconds that Amazon Machine Learning spent processing the `Evaluation`, normalized and scaled on computation resources. `ComputeTime` is only available if the `Evaluation` is in the `COMPLETED` state.>
  take finished-at, name <FinishedAt>
    like epoch-time
    void take
    note <The epoch time when Amazon Machine Learning marked the `Evaluation` as `COMPLETED` or `FAILED`. `FinishedAt` is only available when the `Evaluation` is in the `COMPLETED` or `FAILED` state.>
  take started-at, name <StartedAt>
    like epoch-time
    void take
    note <The epoch time when Amazon Machine Learning marked the `Evaluation` as `INPROGRESS`. `StartedAt` isn't available if the `Evaluation` is in the `PENDING` state.>