
load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/aws-user-arn
  take form aws-user-arn

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/compute-statistics
  take form compute-statistics

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/data-rearrangement
  take form data-rearrangement

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/entity-id
  take form entity-id

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/entity-name
  take form entity-name

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/entity-status
  take form entity-status

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/epoch-time
  take form epoch-time

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/long-type
  take form long-type

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/message
  take form message

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/rds-metadata
  take form rds-metadata

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/redshift-metadata
  take form redshift-metadata

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/role-arn
  take form role-arn

load @tunebond/snow/amazonaws.com/machinelearning/2014-12-12/base/s3-url
  take form s3-url

form data-source, name <DataSource>
  note <Represents the output of the `GetDataSource` operation.

The content consists of the detailed metadata and data file information and the current status of the `DataSource`.>
  take data-source-id, name <DataSourceId>
    like entity-id
    void take
    note <The ID that is assigned to the `DataSource` during creation.>
  take data-location-s3, name <DataLocationS3>
    like s3-url
    void take
    note <The location and name of the data in Amazon Simple Storage Service (Amazon S3) that is used by a `DataSource`.>
  take data-rearrangement, name <DataRearrangement>
    like data-rearrangement
    void take
    note <A JSON string that represents the splitting and rearrangement requirement used when this `DataSource` was created.>
  take created-by-iam-user, name <CreatedByIamUser>
    like aws-user-arn
    void take
    note <The AWS user account from which the `DataSource` was created. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.>
  take created-at, name <CreatedAt>
    like epoch-time
    void take
    note <The time that the `DataSource` was created. The time is expressed in epoch time.>
  take last-updated-at, name <LastUpdatedAt>
    like epoch-time
    void take
    note <The time of the most recent edit to the `BatchPrediction`. The time is expressed in epoch time.>
  take data-size-in-bytes, name <DataSizeInBytes>
    like long-type
    void take
    note <The total number of observations contained in the data files that the `DataSource` references.>
  take number-of-files, name <NumberOfFiles>
    like long-type
    void take
    note <The number of data files referenced by the `DataSource`.>
  take name, name <Name>
    like entity-name
    void take
    note <A user-supplied name or description of the `DataSource`.>
  take status, name <Status>
    like entity-status
    void take
    note <The current status of the `DataSource`. This element can have one of the following values:

- PENDING - Amazon Machine Learning (Amazon ML) submitted a request to create a `DataSource`.

- INPROGRESS - The creation process is underway.

- FAILED - The request to create a `DataSource` did not run to completion. It is not usable.

- COMPLETED - The creation process completed successfully.

- DELETED - The `DataSource` is marked as deleted. It is not usable.>
  take message, name <Message>
    like message
    void take
    note <A description of the most recent details about creating the `DataSource`.>
  take redshift-metadata, name <RedshiftMetadata>
    like redshift-metadata
    void take
  take rds-metadata, name <RDSMetadata>
    like rds-metadata
    void take
  take role-arn, name <RoleARN>
    like role-arn
    void take
  take compute-statistics, name <ComputeStatistics>
    like compute-statistics
    void take
    note <The parameter is `true` if statistics need to be generated from the observation data.>
  take compute-time, name <ComputeTime>
    like long-type
    void take
  take finished-at, name <FinishedAt>
    like epoch-time
    void take
  take started-at, name <StartedAt>
    like epoch-time
    void take