
load @wavebond/snow/amazonaws.com/machinelearning/2014-12-12/base/aws-user-arn
  take form aws-user-arn

load @wavebond/snow/amazonaws.com/machinelearning/2014-12-12/base/entity-id
  take form entity-id

load @wavebond/snow/amazonaws.com/machinelearning/2014-12-12/base/entity-name
  take form entity-name

load @wavebond/snow/amazonaws.com/machinelearning/2014-12-12/base/entity-status
  take form entity-status

load @wavebond/snow/amazonaws.com/machinelearning/2014-12-12/base/epoch-time
  take form epoch-time

load @wavebond/snow/amazonaws.com/machinelearning/2014-12-12/base/long-type
  take form long-type

load @wavebond/snow/amazonaws.com/machinelearning/2014-12-12/base/message
  take form message

load @wavebond/snow/amazonaws.com/machinelearning/2014-12-12/base/presigned-s3-url
  take form presigned-s3-url

load @wavebond/snow/amazonaws.com/machinelearning/2014-12-12/base/s3-url
  take form s3-url

form get-batch-prediction-output, name <GetBatchPredictionOutput>
  note <Represents the output of a `GetBatchPrediction` operation and describes a `BatchPrediction`.>
  take batch-prediction-id, name <BatchPredictionId>
    like entity-id
    void take
    note <An ID assigned to the `BatchPrediction` at creation. This value should be identical to the value of the `BatchPredictionID` in the request.>
  take ml-model-id, name <MLModelId>
    like entity-id
    void take
    note <The ID of the `MLModel` that generated predictions for the `BatchPrediction` request.>
  take batch-prediction-data-source-id, name <BatchPredictionDataSourceId>
    like entity-id
    void take
    note <The ID of the `DataSource` that was used to create the `BatchPrediction`.>
  take input-data-location-s3, name <InputDataLocationS3>
    like s3-url
    void take
    note <The location of the data file or directory in Amazon Simple Storage Service (Amazon S3).>
  take created-by-iam-user, name <CreatedByIamUser>
    like aws-user-arn
    void take
    note <The AWS user account that invoked the `BatchPrediction`. The account type can be either an AWS root account or an AWS Identity and Access Management (IAM) user account.>
  take created-at, name <CreatedAt>
    like epoch-time
    void take
    note <The time when the `BatchPrediction` was created. The time is expressed in epoch time.>
  take last-updated-at, name <LastUpdatedAt>
    like epoch-time
    void take
    note <The time of the most recent edit to `BatchPrediction`. The time is expressed in epoch time.>
  take name, name <Name>
    like entity-name
    void take
    note <A user-supplied name or description of the `BatchPrediction`.>
  take status, name <Status>
    like entity-status
    void take
    note <The status of the `BatchPrediction`, which can be one of the following values:

- `PENDING` - Amazon Machine Learning (Amazon ML) submitted a request to generate batch predictions.

- `INPROGRESS` - The batch predictions are in progress.

- `FAILED` - The request to perform a batch prediction did not run to completion. It is not usable.

- `COMPLETED` - The batch prediction process completed successfully.

- `DELETED` - The `BatchPrediction` is marked as deleted. It is not usable.>
  take output-uri, name <OutputUri>
    like s3-url
    void take
    note <The location of an Amazon S3 bucket or directory to receive the operation results.>
  take log-uri, name <LogUri>
    like presigned-s3-url
    void take
    note <A link to the file that contains logs of the `CreateBatchPrediction` operation.>
  take message, name <Message>
    like message
    void take
    note <A description of the most recent details about processing the batch prediction request.>
  take compute-time, name <ComputeTime>
    like long-type
    void take
    note <The approximate CPU time in milliseconds that Amazon Machine Learning spent processing the `BatchPrediction`, normalized and scaled on computation resources. `ComputeTime` is only available if the `BatchPrediction` is in the `COMPLETED` state.>
  take finished-at, name <FinishedAt>
    like epoch-time
    void take
    note <The epoch time when Amazon Machine Learning marked the `BatchPrediction` as `COMPLETED` or `FAILED`. `FinishedAt` is only available when the `BatchPrediction` is in the `COMPLETED` or `FAILED` state.>
  take started-at, name <StartedAt>
    like epoch-time
    void take
    note <The epoch time when Amazon Machine Learning marked the `BatchPrediction` as `INPROGRESS`. `StartedAt` isn't available if the `BatchPrediction` is in the `PENDING` state.>
  take total-record-count, name <TotalRecordCount>
    like long-type
    void take
    note <The number of total records that Amazon Machine Learning saw while processing the `BatchPrediction`.>
  take invalid-record-count, name <InvalidRecordCount>
    like long-type
    void take
    note <The number of invalid records that Amazon Machine Learning saw while processing the `BatchPrediction`.>