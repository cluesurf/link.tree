
load @nerdbond/snow/amazonaws.com/cloudtrail/2013-11-01/base/operator
  take form operator

load @nerdbond/snow/amazonaws.com/cloudtrail/2013-11-01/base/selector-field
  take form selector-field

form advanced-field-selector, name <AdvancedFieldSelector>
  note <A single selector statement in an advanced event selector.>
  take field, name <Field>
    like selector-field
    note <A field in an event record on which to filter events to be logged. Supported fields include `readOnly`, `eventCategory`, `eventSource` (for management events), `eventName`, `resources.type`, and `resources.ARN`.

- **`readOnly`** - Optional. Can be set to `Equals` a value of `true` or `false`. A value of `false` logs both `read` and `write` events.

- **`eventSource`** - For filtering management events only. This can be set only to `NotEquals` `kms.amazonaws.com`.

- **`eventName`** - Can use any operator. You can use it to ﬁlter in or ﬁlter out any data event logged to CloudTrail, such as `PutBucket` or `GetSnapshotBlock`. You can have multiple values for this ﬁeld, separated by commas.

- **`eventCategory`** - This is required. It must be set to `Equals`, and the value must be `Management` or `Data`.

- **`resources.type`** - This ﬁeld is required. `resources.type` can only use the `Equals` operator, and the value can be one of the following: `AWS::S3::Object`, `AWS::S3::AccessPoint`, `AWS::Lambda::Function`, `AWS::DynamoDB::Table`, `AWS::S3Outposts::Object`, `AWS::ManagedBlockchain::Node`, `AWS::S3ObjectLambda::AccessPoint`, or `AWS::EC2::Snapshot`. You can have only one `resources.type` ﬁeld per selector. To log data events on more than one resource type, add another selector.

- **`resources.ARN`** - You can use any operator with resources.ARN, but if you use `Equals` or `NotEquals`, the value must exactly match the ARN of a valid resource of the type you've speciﬁed in the template as the value of resources.type. For example, if resources.type equals `AWS::S3::Object`, the ARN must be in one of the following formats. To log all data events for all objects in a specific S3 bucket, use the `StartsWith` operator, and include only the bucket ARN as the matching value.

  The trailing slash is intentional; do not exclude it. Replace the text between less than and greater than symbols (&lt;&gt;) with resource-specific information.

  - `arn:&lt;partition&gt;:s3:::&lt;bucket_name&gt;/`

  - `arn:&lt;partition&gt;:s3:::&lt;bucket_name&gt;/&lt;object_path&gt;/`

  When `resources.type` equals `AWS::S3::AccessPoint`, and the operator is set to `Equals` or `NotEquals`, the ARN must be in one of the following formats. To log events on all objects in an S3 access point, we recommend that you use only the access point ARN, don’t include the object path, and use the `StartsWith` or `NotStartsWith` operators.

  - `arn:&lt;partition&gt;:s3:&lt;region&gt;:&lt;account_ID&gt;:accesspoint/&lt;access_point_name&gt;`

  - `arn:&lt;partition&gt;:s3:&lt;region&gt;:&lt;account_ID&gt;:accesspoint/&lt;access_point_name&gt;/object/&lt;object_path&gt;`

  When resources.type equals `AWS::Lambda::Function`, and the operator is set to `Equals` or `NotEquals`, the ARN must be in the following format:

  - `arn:&lt;partition&gt;:lambda:&lt;region&gt;:&lt;account_ID&gt;:function:&lt;function_name&gt;`

  When resources.type equals `AWS::DynamoDB::Table`, and the operator is set to `Equals` or `NotEquals`, the ARN must be in the following format:

  - `arn:&lt;partition&gt;:dynamodb:&lt;region&gt;:&lt;account_ID&gt;:table:&lt;table_name&gt;`

  When `resources.type` equals `AWS::S3Outposts::Object`, and the operator is set to `Equals` or `NotEquals`, the ARN must be in the following format:

  - `arn:&lt;partition&gt;:s3-outposts:&lt;region&gt;:&lt;account_ID&gt;:&lt;object_path&gt;`

  When `resources.type` equals `AWS::ManagedBlockchain::Node`, and the operator is set to `Equals` or `NotEquals`, the ARN must be in the following format:

  - `arn:&lt;partition&gt;:managedblockchain:&lt;region&gt;:&lt;account_ID&gt;:nodes/&lt;node_ID&gt;`

  When `resources.type` equals `AWS::S3ObjectLambda::AccessPoint`, and the operator is set to `Equals` or `NotEquals`, the ARN must be in the following format:

  - `arn:&lt;partition&gt;:s3-object-lambda:&lt;region&gt;:&lt;account_ID&gt;:accesspoint/&lt;access_point_name&gt;`

  When `resources.type` equals `AWS::EC2::Snapshot`, and the operator is set to `Equals` or `NotEquals`, the ARN must be in the following format:

  - `arn:&lt;partition&gt;:ec2:&lt;region&gt;::snapshot/&lt;snapshot_ID&gt;`>
  take equals, name <Equals>
    like operator
    void take
    note <An operator that includes events that match the exact value of the event record field specified as the value of `Field`. This is the only valid operator that you can use with the `readOnly`, `eventCategory`, and `resources.type` fields.>
  take starts-with, name <StartsWith>
    like operator
    void take
    note <An operator that includes events that match the first few characters of the event record field specified as the value of `Field`.>
  take ends-with, name <EndsWith>
    like operator
    void take
    note <An operator that includes events that match the last few characters of the event record field specified as the value of `Field`.>
  take not-equals, name <NotEquals>
    like operator
    void take
    note <An operator that excludes events that match the exact value of the event record field specified as the value of `Field`.>
  take not-starts-with, name <NotStartsWith>
    like operator
    void take
    note <An operator that excludes events that match the first few characters of the event record field specified as the value of `Field`.>
  take not-ends-with, name <NotEndsWith>
    like operator
    void take
    note <An operator that excludes events that match the last few characters of the event record field specified as the value of `Field`.>