
load @wavebond/snow/amazonaws.com/appconfig/2019-10-09/base/description
  take form description

load @wavebond/snow/amazonaws.com/appconfig/2019-10-09/base/growth-factor
  take form growth-factor

load @wavebond/snow/amazonaws.com/appconfig/2019-10-09/base/growth-type
  take form growth-type

load @wavebond/snow/amazonaws.com/appconfig/2019-10-09/base/minutes-between0-and24-hours
  take form minutes-between0-and24-hours

load @wavebond/snow/amazonaws.com/appconfig/2019-10-09/base/name
  take form name

load @wavebond/snow/amazonaws.com/appconfig/2019-10-09/base/replicate-to
  take form replicate-to

load @wavebond/snow/amazonaws.com/appconfig/2019-10-09/base/tag-map
  take form tag-map

form create-deployment-strategy-request, name <CreateDeploymentStrategyRequest>
  take name, name <Name>
    like name
    note <A name for the deployment strategy.>
  take description, name <Description>
    like description
    void take
    note <A description of the deployment strategy.>
  take deployment-duration-in-minutes, name <DeploymentDurationInMinutes>
    like minutes-between0-and24-hours
    note <Total amount of time for a deployment to last.>
  take final-bake-time-in-minutes, name <FinalBakeTimeInMinutes>
    like minutes-between0-and24-hours
    void take
    note <The amount of time AppConfig monitors for alarms before considering the deployment to be complete and no longer eligible for automatic roll back.>
  take growth-factor, name <GrowthFactor>
    like growth-factor
    note <The percentage of targets to receive a deployed configuration during each interval.>
  take growth-type, name <GrowthType>
    like growth-type
    void take
    note <The algorithm used to define how percentage grows over time. AWS AppConfig supports the following growth types:

**Linear**: For this type, AppConfig processes the deployment by dividing the total number of targets by the value specified for `Step percentage`. For example, a linear deployment that uses a `Step percentage` of 10 deploys the configuration to 10 percent of the hosts. After those deployments are complete, the system deploys the configuration to the next 10 percent. This continues until 100% of the targets have successfully received the configuration.

**Exponential**: For this type, AppConfig processes the deployment exponentially using the following formula: `G*(2^N)`. In this formula, `G` is the growth factor specified by the user and `N` is the number of steps until the configuration is deployed to all targets. For example, if you specify a growth factor of 2, then the system rolls out the configuration as follows:

`2*(2^0)`

`2*(2^1)`

`2*(2^2)`

Expressed numerically, the deployment rolls out as follows: 2% of the targets, 4% of the targets, 8% of the targets, and continues until the configuration has been deployed to all targets.>
  take replicate-to, name <ReplicateTo>
    like replicate-to
    note <Save the deployment strategy to a Systems Manager (SSM) document.>
  take tags, name <Tags>
    like tag-map
    void take
    note <Metadata to assign to the deployment strategy. Tags help organize and categorize your AppConfig resources. Each tag consists of a key and an optional value, both of which you define.>