
load @treesurf/snow/amazonaws.com/redshift-data/2019-12-20/base/long
  take form long

load @treesurf/snow/amazonaws.com/redshift-data/2019-12-20/base/secret-arn
  take form secret-arn

load @treesurf/snow/amazonaws.com/redshift-data/2019-12-20/base/sql-parameters-list
  take form sql-parameters-list

load @treesurf/snow/amazonaws.com/redshift-data/2019-12-20/base/statement-id
  take form statement-id

load @treesurf/snow/amazonaws.com/redshift-data/2019-12-20/base/statement-string
  take form statement-string

load @treesurf/snow/amazonaws.com/redshift-data/2019-12-20/base/status-string
  take form status-string

load @treesurf/snow/amazonaws.com/redshift-data/2019-12-20/base/sub-statement-list
  take form sub-statement-list

load @treesurf/snow/amazonaws.com/redshift-data/2019-12-20/base/timestamp
  take form timestamp

load @treesurf/snow/base/boolean
  take form boolean

load @treesurf/snow/base/string
  take form string

form describe-statement-response, name <DescribeStatementResponse>
  take cluster-identifier, name <ClusterIdentifier>
    like string
    void take
    note <The cluster identifier.>
  take created-at, name <CreatedAt>
    like timestamp
    void take
    note <The date and time (UTC) when the SQL statement was submitted to run.>
  take database, name <Database>
    like string
    void take
    note <The name of the database.>
  take db-user, name <DbUser>
    like string
    void take
    note <The database user name.>
  take duration, name <Duration>
    like long
    void take
    note <The amount of time in nanoseconds that the statement ran.>
  take error, name <Error>
    like string
    void take
    note <The error message from the cluster if the SQL statement encountered an error while running.>
  take has-result-set, name <HasResultSet>
    like boolean
    void take
    note <A value that indicates whether the statement has a result set. The result set can be empty.>
  take id, name <Id>
    like statement-id
    note <The identifier of the SQL statement described. This value is a universally unique identifier (UUID) generated by Amazon Redshift Data API.>
  take query-parameters, name <QueryParameters>
    like sql-parameters-list
    void take
    note <The parameters for the SQL statement.>
  take query-string, name <QueryString>
    like statement-string
    void take
    note <The SQL statement text.>
  take redshift-pid, name <RedshiftPid>
    like long
    void take
    note <The process identifier from Amazon Redshift.>
  take redshift-query-id, name <RedshiftQueryId>
    like long
    void take
    note <The identifier of the query generated by Amazon Redshift. These identifiers are also available in the `query` column of the `STL_QUERY` system view.>
  take result-rows, name <ResultRows>
    like long
    void take
    note <Either the number of rows returned from the SQL statement or the number of rows affected. If result size is greater than zero, the result rows can be the number of rows affected by SQL statements such as INSERT, UPDATE, DELETE, COPY, and others. A `-1` indicates the value is null.>
  take result-size, name <ResultSize>
    like long
    void take
    note <The size in bytes of the returned results. A `-1` indicates the value is null.>
  take secret-arn, name <SecretArn>
    like secret-arn
    void take
    note <The name or Amazon Resource Name (ARN) of the secret that enables access to the database.>
  take status, name <Status>
    like status-string
    void take
    note <The status of the SQL statement being described. Status values are defined as follows:

- ABORTED - The query run was stopped by the user.

- ALL - A status value that includes all query statuses. This value can be used to filter results.

- FAILED - The query run failed.

- FINISHED - The query has finished running.

- PICKED - The query has been chosen to be run.

- STARTED - The query run has started.

- SUBMITTED - The query was submitted, but not yet processed.>
  take sub-statements, name <SubStatements>
    like sub-statement-list
    void take
    note <The SQL statements from a multiple statement run.>
  take updated-at, name <UpdatedAt>
    like timestamp
    void take
    note <The date and time (UTC) that the metadata for the SQL statement was last updated. An example is the time the status last changed.>