
load @drumwork/snow/amazonaws.com/robomaker/2018-06-29/base/arn
  take form arn

load @drumwork/snow/amazonaws.com/robomaker/2018-06-29/base/created-at
  take form created-at

load @drumwork/snow/amazonaws.com/robomaker/2018-06-29/base/deployment-application-configs
  take form deployment-application-configs

load @drumwork/snow/amazonaws.com/robomaker/2018-06-29/base/deployment-config
  take form deployment-config

load @drumwork/snow/amazonaws.com/robomaker/2018-06-29/base/deployment-job-error-code
  take form deployment-job-error-code

load @drumwork/snow/amazonaws.com/robomaker/2018-06-29/base/deployment-status
  take form deployment-status

load @drumwork/snow/amazonaws.com/robomaker/2018-06-29/base/generic-string
  take form generic-string

load @drumwork/snow/amazonaws.com/robomaker/2018-06-29/base/tag-map
  take form tag-map

form create-deployment-job-response, name <CreateDeploymentJobResponse>
  take arn, name <arn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the deployment job.>
  take fleet, name <fleet>
    like arn
    void take
    note <The target fleet for the deployment job.>
  take status, name <status>
    like deployment-status
    void take
    note <The status of the deployment job.>
  take deployment-application-configs, name <deploymentApplicationConfigs>
    like deployment-application-configs
    void take
    note <The deployment application configuration.>
  take failure-reason, name <failureReason>
    like generic-string
    void take
    note <The failure reason of the deployment job if it failed.>
  take failure-code, name <failureCode>
    like deployment-job-error-code
    void take
    note <The failure code of the simulation job if it failed:

BadPermissionError

AWS Greengrass requires a service-level role permission to access other services. The role must include the [`AWSGreengrassResourceAccessRolePolicy` managed policy](https://console.aws.amazon.com/iam/home?#/policies/arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy$jsonEditor).

ExtractingBundleFailure

The robot application could not be extracted from the bundle.

FailureThresholdBreached

The percentage of robots that could not be updated exceeded the percentage set for the deployment.

GreengrassDeploymentFailed

The robot application could not be deployed to the robot.

GreengrassGroupVersionDoesNotExist

The AWS Greengrass group or version associated with a robot is missing.

InternalServerError

An internal error has occurred. Retry your request, but if the problem persists, contact us with details.

MissingRobotApplicationArchitecture

The robot application does not have a source that matches the architecture of the robot.

MissingRobotDeploymentResource

One or more of the resources specified for the robot application are missing. For example, does the robot application have the correct launch package and launch file?

PostLaunchFileFailure

The post-launch script failed.

PreLaunchFileFailure

The pre-launch script failed.

ResourceNotFound

One or more deployment resources are missing. For example, do robot application source bundles still exist?

RobotDeploymentNoResponse

There is no response from the robot. It might not be powered on or connected to the internet.>
  take created-at, name <createdAt>
    like created-at
    void take
    note <The time, in milliseconds since the epoch, when the fleet was created.>
  take deployment-config, name <deploymentConfig>
    like deployment-config
    void take
    note <The deployment configuration.>
  take tags, name <tags>
    like tag-map
    void take
    note <The list of all tags added to the deployment job.>