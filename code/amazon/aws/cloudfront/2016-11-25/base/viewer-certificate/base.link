
load @termsurf/snow/amazonaws.com/cloudfront/2016-11-25/base/certificate-source
  take form certificate-source

load @termsurf/snow/amazonaws.com/cloudfront/2016-11-25/base/minimum-protocol-version
  take form minimum-protocol-version

load @termsurf/snow/amazonaws.com/cloudfront/2016-11-25/base/ssl-support-method
  take form ssl-support-method

load @termsurf/snow/base/boolean
  take form boolean

load @termsurf/snow/base/string
  take form string

form viewer-certificate, name <ViewerCertificate>
  note <A complex type that specifies the following:

- Which SSL/TLS certificate to use when viewers request objects using HTTPS

- Whether you want CloudFront to use dedicated IP addresses or SNI when you're using alternate domain names in your object names

- The minimum protocol version that you want CloudFront to use when communicating with viewers

For more information, see [Using an HTTPS Connection to Access Your Objects](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html) in the _Amazon Amazon CloudFront Developer Guide_.>
  take cloud-front-default-certificate, name <CloudFrontDefaultCertificate>
    like boolean
    void take
  take iam-certificate-id, name <IAMCertificateId>
    like string
    void take
  take acm-certificate-arn, name <ACMCertificateArn>
    like string
    void take
  take ssl-support-method, name <SSLSupportMethod>
    like ssl-support-method
    void take
    note <If you specify a value for `ACMCertificateArn` or for `IAMCertificateId`, you must also specify how you want CloudFront to serve HTTPS requests: using a method that works for all clients or one that works for most clients:

- `vip`: CloudFront uses dedicated IP addresses for your content and can respond to HTTPS requests from any viewer. However, you must request permission to use this feature, and you incur additional monthly charges.

- `sni-only`: CloudFront can respond to HTTPS requests from viewers that support Server Name Indication (SNI). All modern browsers support SNI, but some browsers still in use don't support SNI. If some of your users' browsers don't support SNI, we recommend that you do one of the following:

  - Use the `vip` option (dedicated IP addresses) instead of `sni-only`.

  - Use the CloudFront SSL/TLS certificate instead of a custom certificate. This requires that you use the CloudFront domain name of your distribution in the URLs for your objects, for example, `https://d111111abcdef8.cloudfront.net/logo.png`.

  - If you can control which browser your users use, upgrade the browser to one that supports SNI.

  - Use HTTP instead of HTTPS.

Do not specify a value for `SSLSupportMethod` if you specified `&lt;CloudFrontDefaultCertificate&gt;true&lt;CloudFrontDefaultCertificate&gt;`.

For more information, see [Using Alternate Domain Names and HTTPS](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html#CNAMEsAndHTTPS.html) in the _Amazon CloudFront Developer Guide_.>
  take minimum-protocol-version, name <MinimumProtocolVersion>
    like minimum-protocol-version
    void take
    note <Specify the minimum version of the SSL/TLS protocol that you want CloudFront to use for HTTPS connections between viewers and CloudFront: `SSLv3` or `TLSv1`. CloudFront serves your objects only to viewers that support SSL/TLS version that you specify and later versions. The `TLSv1` protocol is more secure, so we recommend that you specify `SSLv3` only if your users are using browsers or devices that don't support `TLSv1`. Note the following:

- If you specify &lt;CloudFrontDefaultCertificate&gt;true&lt;CloudFrontDefaultCertificate&gt;, the minimum SSL protocol version is `TLSv1` and can't be changed.

- If you're using a custom certificate (if you specify a value for `ACMCertificateArn` or for `IAMCertificateId`) and if you're using SNI (if you specify `sni-only` for `SSLSupportMethod`), you must specify `TLSv1` for `MinimumProtocolVersion`.>
  take certificate, name <Certificate>
    like string
    void take
    note <Include one of these values to specify the following:

- Whether you want viewers to use HTTP or HTTPS to request your objects.

- If you want viewers to use HTTPS, whether you're using an alternate domain name such as example.com or the CloudFront domain name for your distribution, such as `d111111abcdef8.cloudfront.net`.

- If you're using an alternate domain name, whether AWS Certificate Manager (ACM) provided the certificate, or you purchased a certificate from a third-party certificate authority and imported it into ACM or uploaded it to the IAM certificate store.

You must specify one (and only one) of the three values. Do not specify `false` for `CloudFrontDefaultCertificate`.

**If you want viewers to use HTTP to request your objects**: Specify the following value:

`&lt;CloudFrontDefaultCertificate&gt;true&lt;CloudFrontDefaultCertificate&gt;`

In addition, specify `allow-all` for `ViewerProtocolPolicy` for all of your cache behaviors.

**If you want viewers to use HTTPS to request your objects**: Choose the type of certificate that you want to use based on whether you're using an alternate domain name for your objects or the CloudFront domain name:

- **If you're using an alternate domain name, such as example.com**: Specify one of the following values, depending on whether ACM provided your certificate or you purchased your certificate from third-party certificate authority:

  - `&lt;ACMCertificateArn&gt;ARN for ACM SSL/TLS certificate&lt;ACMCertificateArn&gt;` where ARN for ACM SSL/TLS certificate is the ARN for the ACM SSL/TLS certificate that you want to use for this distribution.

  - `&lt;IAMCertificateId&gt;IAM certificate ID&lt;IAMCertificateId&gt;` where IAM certificate ID is the ID that IAM returned when you added the certificate to the IAM certificate store.

  If you specify `ACMCertificateArn` or `IAMCertificateId`, you must also specify a value for `SSLSupportMethod`.

  If you choose to use an ACM certificate or a certificate in the IAM certificate store, we recommend that you use only an alternate domain name in your object URLs (`https://example.com/logo.jpg`). If you use the domain name that is associated with your CloudFront distribution (`https://d111111abcdef8.cloudfront.net/logo.jpg`) and the viewer supports `SNI`, then CloudFront behaves normally. However, if the browser does not support SNI, the user's experience depends on the value that you choose for `SSLSupportMethod`:

  - `vip`: The viewer displays a warning because there is a mismatch between the CloudFront domain name and the domain name in your SSL/TLS certificate.

  - `sni-only`: CloudFront drops the connection with the browser without returning the object.

- **If you're using the CloudFront domain name for your distribution, such as `d111111abcdef8.cloudfront.net`** : Specify the following value:

  `&lt;CloudFrontDefaultCertificate&gt;true&lt;CloudFrontDefaultCertificate&gt;`

  If you want viewers to use HTTPS, you must also specify one of the following values in your cache behaviors:

  - `&lt;ViewerProtocolPolicy&gt;https-only&lt;ViewerProtocolPolicy&gt;`

  - `&lt;ViewerProtocolPolicy&gt;redirect-to-https&lt;ViewerProtocolPolicy&gt;`

  You can also optionally require that CloudFront use HTTPS to communicate with your origin by specifying one of the following values for the applicable origins:

  - `&lt;OriginProtocolPolicy&gt;https-only&lt;OriginProtocolPolicy&gt;`

  - `&lt;OriginProtocolPolicy&gt;match-viewer&lt;OriginProtocolPolicy&gt;`

  For more information, see [Using Alternate Domain Names and HTTPS](http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/SecureConnections.html#CNAMEsAndHTTPS) in the _Amazon CloudFront Developer Guide_.>
  take certificate-source, name <CertificateSource>
    like certificate-source
    void take
    note <This field is deprecated. You can use one of the following: `[ACMCertificateArn`, `IAMCertificateId`, or `CloudFrontDefaultCertificate]`.>