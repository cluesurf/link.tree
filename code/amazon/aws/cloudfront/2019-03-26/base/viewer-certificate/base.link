
load @tunebond/snow/amazonaws.com/cloudfront/2019-03-26/base/certificate-source
  take form certificate-source

load @tunebond/snow/amazonaws.com/cloudfront/2019-03-26/base/minimum-protocol-version
  take form minimum-protocol-version

load @tunebond/snow/amazonaws.com/cloudfront/2019-03-26/base/ssl-support-method
  take form ssl-support-method

load @tunebond/snow/base/boolean
  take form boolean

load @tunebond/snow/base/string
  take form string

form viewer-certificate, name <ViewerCertificate>
  note <A complex type that determines the distribution’s SSL/TLS configuration for communicating with viewers.

If the distribution doesn’t use `Aliases` (also known as alternate domain names or CNAMEs)—that is, if the distribution uses the CloudFront domain name such as `d111111abcdef8.cloudfront.net`—set `CloudFrontDefaultCertificate` to `true` and leave all other fields empty.

If the distribution uses `Aliases` (alternate domain names or CNAMEs), use the fields in this type to specify the following settings:

- Which viewers the distribution accepts HTTPS connections from: only viewers that support [server name indication (SNI)](https://en.wikipedia.org/wiki/Server_Name_Indication) (recommended), or all viewers including those that don’t support SNI.

  - To accept HTTPS connections from only viewers that support SNI, set `SSLSupportMethod` to `sni-only`. This is recommended. Most browsers and clients support SNI.

  - To accept HTTPS connections from all viewers, including those that don’t support SNI, set `SSLSupportMethod` to `vip`. This is not recommended, and results in additional monthly charges from CloudFront.

- The minimum SSL/TLS protocol version that the distribution can use to communicate with viewers. To specify a minimum version, choose a value for `MinimumProtocolVersion`. For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) in the _Amazon CloudFront Developer Guide_.

- The location of the SSL/TLS certificate, [AWS Certificate Manager (ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html) (recommended) or [AWS Identity and Access Management (AWS IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html). You specify the location by setting a value in one of the following fields (not both):

  - `ACMCertificateArn`

  - `IAMCertificateId`

All distributions support HTTPS connections from viewers. To require viewers to use HTTPS only, or to redirect them from HTTP to HTTPS, use `ViewerProtocolPolicy` in the `CacheBehavior` or `DefaultCacheBehavior`. To specify how CloudFront should use SSL/TLS to communicate with your custom origin, use `CustomOriginConfig`.

For more information, see [Using HTTPS with CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https.html) and [Using Alternate Domain Names and HTTPS](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html) in the _Amazon CloudFront Developer Guide_.>
  take cloud-front-default-certificate, name <CloudFrontDefaultCertificate>
    like boolean
    void take
    note <If the distribution uses the CloudFront domain name such as `d111111abcdef8.cloudfront.net`, set this field to `true`.

If the distribution uses `Aliases` (alternate domain names or CNAMEs), set this field to `false` and specify values for the following fields:

- `ACMCertificateArn` or `IAMCertificateId` (specify a value for one, not both)

- `MinimumProtocolVersion`

- `SSLSupportMethod`>
  take iam-certificate-id, name <IAMCertificateId>
    like string
    void take
    note <If the distribution uses `Aliases` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [AWS Identity and Access Management (AWS IAM)](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_server-certs.html), provide the ID of the IAM certificate.

If you specify an IAM certificate ID, you must also specify values for `MinimumProtocolVerison` and `SSLSupportMethod`.>
  take acm-certificate-arn, name <ACMCertificateArn>
    like string
    void take
    note <If the distribution uses `Aliases` (alternate domain names or CNAMEs) and the SSL/TLS certificate is stored in [AWS Certificate Manager (ACM)](https://docs.aws.amazon.com/acm/latest/userguide/acm-overview.html), provide the Amazon Resource Name (ARN) of the ACM certificate. CloudFront only supports ACM certificates in the US East (N. Virginia) Region (`us-east-1`).

If you specify an ACM certificate ARN, you must also specify values for `MinimumProtocolVerison` and `SSLSupportMethod`.>
  take ssl-support-method, name <SSLSupportMethod>
    like ssl-support-method
    void take
    note <If the distribution uses `Aliases` (alternate domain names or CNAMEs), specify which viewers the distribution accepts HTTPS connections from.

- `sni-only` - The distribution accepts HTTPS connections from only viewers that support [server name indication (SNI)](https://en.wikipedia.org/wiki/Server_Name_Indication). This is recommended. Most browsers and clients support SNI.

- `vip` - The distribution accepts HTTPS connections from all viewers including those that don’t support SNI. This is not recommended, and results in additional monthly charges from CloudFront.

If the distribution uses the CloudFront domain name such as `d111111abcdef8.cloudfront.net`, don’t set a value for this field.>
  take minimum-protocol-version, name <MinimumProtocolVersion>
    like minimum-protocol-version
    void take
    note <If the distribution uses `Aliases` (alternate domain names or CNAMEs), specify the security policy that you want CloudFront to use for HTTPS connections with viewers. The security policy determines two settings:

- The minimum SSL/TLS protocol that CloudFront can use to communicate with viewers.

- The ciphers that CloudFront can use to encrypt the content that it returns to viewers.

For more information, see [Security Policy](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-values-specify.html#DownloadDistValues-security-policy) and [Supported Protocols and Ciphers Between Viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/secure-connections-supported-viewer-protocols-ciphers.html#secure-connections-supported-ciphers) in the _Amazon CloudFront Developer Guide_.

On the CloudFront console, this setting is called **Security Policy**.

When you’re using SNI only (you set `SSLSupportMethod` to `sni-only`), you must specify `TLSv1` or higher.

If the distribution uses the CloudFront domain name such as `d111111abcdef8.cloudfront.net` (you set `CloudFrontDefaultCertificate` to `true`), CloudFront automatically sets the security policy to `TLSv1` regardless of the value that you set here.>
  take certificate, name <Certificate>
    like string
    void take
    note <This field is deprecated. Use one of the following fields instead:

- `ACMCertificateArn`

- `IAMCertificateId`

- `CloudFrontDefaultCertificate`>
  take certificate-source, name <CertificateSource>
    like certificate-source
    void take
    note <This field is deprecated. Use one of the following fields instead:

- `ACMCertificateArn`

- `IAMCertificateId`

- `CloudFrontDefaultCertificate`>