
load @nerdbond/snow/amazonaws.com/runtime.sagemaker/2017-05-13/base/internal-failure
  take form internal-failure

load @nerdbond/snow/amazonaws.com/runtime.sagemaker/2017-05-13/base/invoke-endpoint-body
  take form invoke-endpoint-body

load @nerdbond/snow/amazonaws.com/runtime.sagemaker/2017-05-13/base/invoke-endpoint-output
  take form invoke-endpoint-output

load @nerdbond/snow/amazonaws.com/runtime.sagemaker/2017-05-13/base/model-error
  take form model-error

load @nerdbond/snow/amazonaws.com/runtime.sagemaker/2017-05-13/base/service-unavailable
  take form service-unavailable

load @nerdbond/snow/amazonaws.com/runtime.sagemaker/2017-05-13/base/validation-error
  take form validation-error

load @nerdbond/snow/base/native-string
  take form native-string

boot invoke-endpoint, name <InvokeEndpoint>
  deed post
  note <After you deploy a model into production using Amazon SageMaker hosting services, your client applications use this API to get inferences from the model hosted at the specified endpoint.

For an overview of Amazon SageMaker, see [How It Works](https://docs.aws.amazon.com/sagemaker/latest/dg/how-it-works.html).

Amazon SageMaker strips all POST headers except those supported by the API. Amazon SageMaker might add additional headers. You should not rely on the behavior of headers outside those enumerated in the request syntax.

Calls to `InvokeEndpoint` are authenticated by using AWS Signature Version 4. For information, see [Authenticating Requests (AWS Signature Version 4)](https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html) in the _Amazon S3 API Reference_.

A customer's model containers must respond to requests within 60 seconds. The model itself can have a maximum processing time of 60 seconds before responding to invocations. If your model is going to take 50-60 seconds of processing time, the SDK socket timeout should be set to be 70 seconds.

Endpoints are scoped to an individual account, and are not public. The URL does not contain the account ID, but Amazon SageMaker determines the account ID from the authentication token that is supplied by the caller.>

  take endpoint-name
    like native-string
    note <The name of the endpoint that you specified when you created the endpoint using the [CreateEndpoint](https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateEndpoint.html) API.>
  take content-type
    like native-string
    note <The MIME type of the input data in the request body.>
    void take
  take accept
    like native-string
    note <The desired MIME type of the inference in the response.>
    void take
  take x-amzn-sage-maker-custom-attributes
    like native-string
    note <Provides additional information about a request for an inference submitted to a model hosted at an Amazon SageMaker endpoint. The information is an opaque value that is forwarded verbatim. You could use this value, for example, to provide an ID that you can use to track a request or to provide other metadata that a service endpoint was programmed to process. The value must consist of no more than 1024 visible US-ASCII characters as specified in [Section 3.3.6. Field Value Components](https://tools.ietf.org/html/rfc7230#section-3.2.6) of the Hypertext Transfer Protocol (HTTP/1.1).

The code in your model is responsible for setting or updating any custom attributes in the response. If your code does not set this value in the response, an empty value is returned. For example, if a custom attribute represents the trace ID, your model can prepend the custom attribute with `Trace ID:` in your post-processing function.

This feature is currently supported in the AWS SDKs but not in the Amazon SageMaker Python SDK.>
    void take
  take x-amzn-sage-maker-target-model
    like native-string
    note <The model to request for inference when invoking a multi-model endpoint.>
    void take
  take x-amzn-sage-maker-target-variant
    like native-string
    note <Specify the production variant to send the inference request to when invoking an endpoint that is running two or more variants. Note that this parameter overrides the default behavior for the endpoint, which is to distribute the invocation traffic based on the variant weights.

For information about how to use variant targeting to perform a/b testing, see [Test models in production](https://docs.aws.amazon.com/sagemaker/latest/dg/model-ab-testing.html)>
    void take
  take x-amzn-sage-maker-target-container-hostname
    like native-string
    note <If the endpoint hosts multiple containers and is configured to use direct invocation, this parameter specifies the host name of the container to invoke.>
    void take
  take x-amzn-sage-maker-inference-id
    like native-string
    note <If you provide a value, it is added to the captured data when you enable data capture on the endpoint. For information about data capture, see [Capture Data](https://docs.aws.amazon.com/sagemaker/latest/dg/model-monitor-data-capture.html).>
    void take
  take invoke-endpoint-body, like invoke-endpoint-body

  line </endpoints/{endpoint-name}/invocations>

  hint <Content-Type>, loan content-type
  hint <Accept>, loan accept
  hint <X-Amzn-SageMaker-Custom-Attributes>, loan x-amzn-sage-maker-custom-attributes
  hint <X-Amzn-SageMaker-Target-Model>, loan x-amzn-sage-maker-target-model
  hint <X-Amzn-SageMaker-Target-Variant>, loan x-amzn-sage-maker-target-variant
  hint <X-Amzn-SageMaker-Target-Container-Hostname>, loan x-amzn-sage-maker-target-container-hostname
  hint <X-Amzn-SageMaker-Inference-Id>, loan x-amzn-sage-maker-inference-id

  seed json, loan invoke-endpoint-body

  loot 200
    seed json, like invoke-endpoint-output
    note <Success>
  loot 480
    seed json, like internal-failure
    note <InternalFailure>
  loot 481
    seed json, like service-unavailable
    note <ServiceUnavailable>
  loot 482
    seed json, like validation-error
    note <ValidationError>
  loot 483
    seed json, like model-error
    note <ModelError>