
load @drumwork/snow/amazonaws.com/appsync/2017-07-25/base/conflict-detection-type
  take form conflict-detection-type

load @drumwork/snow/amazonaws.com/appsync/2017-07-25/base/conflict-handler-type
  take form conflict-handler-type

load @drumwork/snow/amazonaws.com/appsync/2017-07-25/base/lambda-conflict-handler-config
  take form lambda-conflict-handler-config

form update-function-body
  take name, name <name>
  take description, name <description>
    void take
  take data-source-name, name <dataSourceName>
  take request-mapping-template, name <requestMappingTemplate>
    void take
  take response-mapping-template, name <responseMappingTemplate>
    void take
  take function-version, name <functionVersion>
  take sync-config, name <syncConfig>
    like form
      take conflict-handler, name <conflictHandler>
        like conflict-handler-type
        void take
        note <The Conflict Resolution strategy to perform in the event of a conflict.

- **OPTIMISTIC_CONCURRENCY**: Resolve conflicts by rejecting mutations when versions do not match the latest version at the server.

- **AUTOMERGE**: Resolve conflicts with the Automerge conflict resolution strategy.

- **LAMBDA**: Resolve conflicts with a Lambda function supplied in the LambdaConflictHandlerConfig.>
      take conflict-detection, name <conflictDetection>
        like conflict-detection-type
        void take
        note <The Conflict Detection strategy to use.

- **VERSION**: Detect conflicts based on object versions for this resolver.

- **NONE**: Do not detect conflicts when executing this resolver.>
      take lambda-conflict-handler-config, name <lambdaConflictHandlerConfig>
        like lambda-conflict-handler-config
        void take
        note <The `LambdaConflictHandlerConfig` when configuring LAMBDA as the Conflict Handler.>
    void take