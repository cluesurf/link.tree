
load @treesurf/snow/amazonaws.com/apigateway/2015-07-09/base/list-of-string
  take form list-of-string

load @treesurf/snow/amazonaws.com/apigateway/2015-07-09/base/map-of-string-to-boolean
  take form map-of-string-to-boolean

load @treesurf/snow/amazonaws.com/apigateway/2015-07-09/base/map-of-string-to-string
  take form map-of-string-to-string

load @treesurf/snow/base/boolean
  take form boolean

load @treesurf/snow/base/string
  take form string

form put-method-request, name <PutMethodRequest>
  note <Request to add a method to an existing Resource resource.>
  take authorization-type, name <authorizationType>
    like string
    note <[Required] The method's authorization type. Valid values are `NONE` for open access, `AWS_IAM` for using AWS IAM permissions, `CUSTOM` for using a custom authorizer, or `COGNITO_USER_POOLS` for using a Cognito user pool.>
  take authorizer-id, name <authorizerId>
    like string
    void take
    note <Specifies the identifier of an Authorizer to use on this Method, if the type is CUSTOM or COGNITO_USER_POOLS. The authorizer identifier is generated by API Gateway when you created the authorizer.>
  take api-key-required, name <apiKeyRequired>
    like boolean
    void take
    note <Specifies whether the method required a valid ApiKey.>
  take operation-name, name <operationName>
    like string
    void take
    note <A human-friendly operation identifier for the method. For example, you can assign the `operationName` of `ListPets` for the `GET /pets` method in the `PetStore` example.>
  take request-parameters, name <requestParameters>
    like map-of-string-to-boolean
    void take
    note <A key-value map defining required or optional method request parameters that can be accepted by API Gateway. A key defines a method request parameter name matching the pattern of `method.request.{location}.{name}`, where `location` is `querystring`, `path`, or `header` and `name` is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (`true`) or optional (`false`). The method request parameter names defined here are available in Integration to be mapped to integration request parameters or body-mapping templates.>
  take request-models, name <requestModels>
    like map-of-string-to-string
    void take
    note <Specifies the Model resources used for the request's content type. Request models are represented as a key/value map, with a content type as the key and a Model name as the value.>
  take request-validator-id, name <requestValidatorId>
    like string
    void take
    note <The identifier of a RequestValidator for validating the method request.>
  take authorization-scopes, name <authorizationScopes>
    like list-of-string
    void take
    note <A list of authorization scopes configured on the method. The scopes are used with a `COGNITO_USER_POOLS` authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes.>