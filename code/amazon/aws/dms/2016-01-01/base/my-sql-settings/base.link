
load @wavebond/snow/amazonaws.com/dms/2016-01-01/base/boolean-optional
  take form boolean-optional

load @wavebond/snow/amazonaws.com/dms/2016-01-01/base/integer-optional
  take form integer-optional

load @wavebond/snow/amazonaws.com/dms/2016-01-01/base/secret-string
  take form secret-string

load @wavebond/snow/amazonaws.com/dms/2016-01-01/base/target-db-type
  take form target-db-type

load @wavebond/snow/base/string
  take form string

form my-sql-settings, name <MySQLSettings>
  note <Provides information that defines a MySQL endpoint.>
  take after-connect-script, name <AfterConnectScript>
    like string
    void take
    note <Specifies a script to run immediately after DMS connects to the endpoint. The migration task continues running regardless if the SQL statement succeeds or fails.

For this parameter, provide the code of the script itself, not the name of a file containing the script.>
  take clean-source-metadata-on-mismatch, name <CleanSourceMetadataOnMismatch>
    like boolean-optional
    void take
    note <Adjusts the behavior of DMS when migrating from an SQL Server source database that is hosted as part of an Always On availability group cluster. If you need DMS to poll all the nodes in the Always On cluster for transaction backups, set this attribute to `false`.>
  take database-name, name <DatabaseName>
    like string
    void take
    note <Database name for the endpoint. For a MySQL source or target endpoint, don't explicitly specify the database using the `DatabaseName` request parameter on either the `CreateEndpoint` or `ModifyEndpoint` API call. Specifying `DatabaseName` when you create or modify a MySQL endpoint replicates all the task tables to this single database. For MySQL endpoints, you specify the database only when you specify the schema in the table-mapping rules of the DMS task.>
  take events-poll-interval, name <EventsPollInterval>
    like integer-optional
    void take
    note <Specifies how often to check the binary log for new changes/events when the database is idle.

Example: `eventsPollInterval=5;`

In the example, DMS checks for changes in the binary logs every five seconds.>
  take target-db-type, name <TargetDbType>
    like target-db-type
    void take
    note <Specifies where to migrate source tables on the target, either to a single database or multiple databases.

Example: `targetDbType=MULTIPLE_DATABASES`>
  take max-file-size, name <MaxFileSize>
    like integer-optional
    void take
    note <Specifies the maximum size (in KB) of any .csv file used to transfer data to a MySQL-compatible database.

Example: `maxFileSize=512`>
  take parallel-load-threads, name <ParallelLoadThreads>
    like integer-optional
    void take
    note <Improves performance when loading data into the MySQL-compatible target database. Specifies how many threads to use to load the data into the MySQL-compatible target database. Setting a large number of threads can have an adverse effect on database performance, because a separate connection is required for each thread.

Example: `parallelLoadThreads=1`>
  take password, name <Password>
    like secret-string
    void take
    note <Endpoint connection password.>
  take port, name <Port>
    like integer-optional
    void take
    note <Endpoint TCP port.>
  take server-name, name <ServerName>
    like string
    void take
    note <Fully qualified domain name of the endpoint.>
  take server-timezone, name <ServerTimezone>
    like string
    void take
    note <Specifies the time zone for the source MySQL database.

Example: `serverTimezone=US/Pacific;`

Note: Do not enclose time zones in single quotes.>
  take username, name <Username>
    like string
    void take
    note <Endpoint connection user name.>
  take secrets-manager-access-role-arn, name <SecretsManagerAccessRoleArn>
    like string
    void take
    note <The full Amazon Resource Name (ARN) of the IAM role that specifies DMS as the trusted entity and grants the required permissions to access the value in `SecretsManagerSecret`. The role must allow the `iam:PassRole` action. `SecretsManagerSecret` has the value of the Amazon Web Services Secrets Manager secret that allows access to the MySQL endpoint.

You can specify one of two sets of values for these permissions. You can specify the values for this setting and `SecretsManagerSecretId`. Or you can specify clear-text values for `UserName`, `Password`, `ServerName`, and `Port`. You can't specify both. For more information on creating this `SecretsManagerSecret` and the `SecretsManagerAccessRoleArn` and `SecretsManagerSecretId` required to access it, see [Using secrets to access Database Migration Service resources](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html#security-iam-secretsmanager) in the _Database Migration Service User Guide_.>
  take secrets-manager-secret-id, name <SecretsManagerSecretId>
    like string
    void take
    note <The full ARN, partial ARN, or friendly name of the `SecretsManagerSecret` that contains the MySQL endpoint connection details.>