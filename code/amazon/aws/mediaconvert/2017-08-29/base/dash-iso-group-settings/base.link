
load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/dash-iso-encryption-settings
  take form dash-iso-encryption-settings

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/dash-iso-group-audio-channel-config-scheme-id-uri
  take form dash-iso-group-audio-channel-config-scheme-id-uri

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/dash-iso-hbbtv-compliance
  take form dash-iso-hbbtv-compliance

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/dash-iso-image-based-trick-play
  take form dash-iso-image-based-trick-play

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/dash-iso-mpd-profile
  take form dash-iso-mpd-profile

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/dash-iso-pts-offset-handling-for-b-frames
  take form dash-iso-pts-offset-handling-for-b-frames

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/dash-iso-segment-control
  take form dash-iso-segment-control

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/dash-iso-segment-length-control
  take form dash-iso-segment-length-control

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/dash-iso-write-segment-timeline-in-representation
  take form dash-iso-write-segment-timeline-in-representation

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/destination-settings
  take form destination-settings

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/double-min0-max2147483647
  take form double-min0-max2147483647

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/integer-min0-max2147483647
  take form integer-min0-max2147483647

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/integer-min1-max2147483647
  take form integer-min1-max2147483647

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/list-of-dash-additional-manifest
  take form list-of-dash-additional-manifest

load @wavebond/snow/amazonaws.com/mediaconvert/2017-08-29/base/string-pattern-s3
  take form string-pattern-s3

load @wavebond/snow/base/string
  take form string

form dash-iso-group-settings, name <DashIsoGroupSettings>
  note <Settings related to your DASH output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html. When you work directly in your JSON job specification, include this object and any required children when you set Type, under OutputGroupSettings, to DASH_ISO_GROUP_SETTINGS.>
  take additional-manifests, name <AdditionalManifests>
    like list-of-dash-additional-manifest
    void take
    note <By default, the service creates one .mpd DASH manifest for each DASH ISO output group in your job. This default manifest references every output in the output group. To create additional DASH manifests that reference a subset of the outputs in the output group, specify a list of them here.>
    host xml
      host name, text <additionalManifests>
  take audio-channel-config-scheme-id-uri, name <AudioChannelConfigSchemeIdUri>
    like dash-iso-group-audio-channel-config-scheme-id-uri
    void take
    note <Use this setting only when your audio codec is a Dolby one (AC3, EAC3, or Atmos) and your downstream workflow requires that your DASH manifest use the Dolby channel configuration tag, rather than the MPEG one. For example, you might need to use this to make dynamic ad insertion work. Specify which audio channel configuration scheme ID URI MediaConvert writes in your DASH manifest. Keep the default value, MPEG channel configuration (MPEG_CHANNEL_CONFIGURATION), to have MediaConvert write this: urn:mpeg:mpegB:cicp:ChannelConfiguration. Choose Dolby channel configuration (DOLBY_CHANNEL_CONFIGURATION) to have MediaConvert write this instead: tag:dolby.com,2014:dash:audio_channel_configuration:2011.>
    host xml
      host name, text <audioChannelConfigSchemeIdUri>
  take base-url, name <BaseUrl>
    like string
    void take
    note <A partial URI prefix that will be put in the manifest (.mpd) file at the top level BaseURL element. Can be used if streams are delivered from a different URL than the manifest file.>
    host xml
      host name, text <baseUrl>
  take destination, name <Destination>
    like string-pattern-s3
    void take
    note <Use Destination (Destination) to specify the S3 output location and the output filename base. Destination accepts format identifiers. If you do not specify the base filename in the URI, the service will use the filename of the input file. If your job has multiple inputs, the service uses the filename of the first input file.>
    host xml
      host name, text <destination>
  take destination-settings, name <DestinationSettings>
    like destination-settings
    void take
    note <Settings associated with the destination. Will vary based on the type of destination>
    host xml
      host name, text <destinationSettings>
  take encryption, name <Encryption>
    like dash-iso-encryption-settings
    void take
    note <DRM settings.>
    host xml
      host name, text <encryption>
  take fragment-length, name <FragmentLength>
    like integer-min1-max2147483647
    void take
    note <Length of fragments to generate (in seconds). Fragment length must be compatible with GOP size and Framerate. Note that fragments will end on the next keyframe after this number of seconds, so actual fragment length may be longer. When Emit Single File is checked, the fragmentation is internal to a single output file and it does not cause the creation of many output files as in other output types.>
    host xml
      host name, text <fragmentLength>
  take hbbtv-compliance, name <HbbtvCompliance>
    like dash-iso-hbbtv-compliance
    void take
    note <Supports HbbTV specification as indicated>
    host xml
      host name, text <hbbtvCompliance>
  take image-based-trick-play, name <ImageBasedTrickPlay>
    like dash-iso-image-based-trick-play
    void take
    note <Specify whether MediaConvert generates images for trick play. Keep the default value, None (NONE), to not generate any images. Choose Thumbnail (THUMBNAIL) to generate tiled thumbnails. Choose Thumbnail and full frame (THUMBNAIL_AND_FULLFRAME) to generate tiled thumbnails and full-resolution images of single frames. MediaConvert adds an entry in the .mpd manifest for each set of images that you generate. A common application for these images is Roku trick mode. The thumbnails and full-frame images that MediaConvert creates with this feature are compatible with this Roku specification: https://developer.roku.com/docs/developer-program/media-playback/trick-mode/hls-and-dash.md>
    host xml
      host name, text <imageBasedTrickPlay>
  take min-buffer-time, name <MinBufferTime>
    like integer-min0-max2147483647
    void take
    note <Minimum time of initially buffered media that is needed to ensure smooth playout.>
    host xml
      host name, text <minBufferTime>
  take min-final-segment-length, name <MinFinalSegmentLength>
    like double-min0-max2147483647
    void take
    note <Keep this setting at the default value of 0, unless you are troubleshooting a problem with how devices play back the end of your video asset. If you know that player devices are hanging on the final segment of your video because the length of your final segment is too short, use this setting to specify a minimum final segment length, in seconds. Choose a value that is greater than or equal to 1 and less than your segment length. When you specify a value for this setting, the encoder will combine any final segment that is shorter than the length that you specify with the previous segment. For example, your segment length is 3 seconds and your final segment is .5 seconds without a minimum final segment length; when you set the minimum final segment length to 1, your final segment is 3.5 seconds.>
    host xml
      host name, text <minFinalSegmentLength>
  take mpd-profile, name <MpdProfile>
    like dash-iso-mpd-profile
    void take
    note <Specify whether your DASH profile is on-demand or main. When you choose Main profile (MAIN_PROFILE), the service signals urn:mpeg:dash:profile:isoff-main:2011 in your .mpd DASH manifest. When you choose On-demand (ON_DEMAND_PROFILE), the service signals urn:mpeg:dash:profile:isoff-on-demand:2011 in your .mpd. When you choose On-demand, you must also set the output group setting Segment control (SegmentControl) to Single file (SINGLE_FILE).>
    host xml
      host name, text <mpdProfile>
  take pts-offset-handling-for-b-frames, name <PtsOffsetHandlingForBFrames>
    like dash-iso-pts-offset-handling-for-b-frames
    void take
    note <Use this setting only when your output video stream has B-frames, which causes the initial presentation time stamp (PTS) to be offset from the initial decode time stamp (DTS). Specify how MediaConvert handles PTS when writing time stamps in output DASH manifests. Choose Match initial PTS (MATCH_INITIAL_PTS) when you want MediaConvert to use the initial PTS as the first time stamp in the manifest. Choose Zero-based (ZERO_BASED) to have MediaConvert ignore the initial PTS in the video stream and instead write the initial time stamp as zero in the manifest. For outputs that don't have B-frames, the time stamps in your DASH manifests start at zero regardless of your choice here.>
    host xml
      host name, text <ptsOffsetHandlingForBFrames>
  take segment-control, name <SegmentControl>
    like dash-iso-segment-control
    void take
    note <When set to SINGLE_FILE, a single output file is generated, which is internally segmented using the Fragment Length and Segment Length. When set to SEGMENTED_FILES, separate segment files will be created.>
    host xml
      host name, text <segmentControl>
  take segment-length, name <SegmentLength>
    like integer-min1-max2147483647
    void take
    note <Specify the length, in whole seconds, of each segment. When you don't specify a value, MediaConvert defaults to 30. Related settings: Use Segment length control (SegmentLengthControl) to specify whether the encoder enforces this value strictly. Use Segment control (DashIsoSegmentControl) to specify whether MediaConvert creates separate segment files or one content file that has metadata to mark the segment boundaries.>
    host xml
      host name, text <segmentLength>
  take segment-length-control, name <SegmentLengthControl>
    like dash-iso-segment-length-control
    void take
    note <Specify how you want MediaConvert to determine the segment length. Choose Exact (EXACT) to have the encoder use the exact length that you specify with the setting Segment length (SegmentLength). This might result in extra I-frames. Choose Multiple of GOP (GOP_MULTIPLE) to have the encoder round up the segment lengths to match the next GOP boundary.>
    host xml
      host name, text <segmentLengthControl>
  take write-segment-timeline-in-representation, name <WriteSegmentTimelineInRepresentation>
    like dash-iso-write-segment-timeline-in-representation
    void take
    note <If you get an HTTP error in the 400 range when you play back your DASH output, enable this setting and run your transcoding job again. When you enable this setting, the service writes precise segment durations in the DASH manifest. The segment duration information appears inside the SegmentTimeline element, inside SegmentTemplate at the Representation level. When you don't enable this setting, the service writes approximate segment durations in your DASH manifest.>
    host xml
      host name, text <writeSegmentTimelineInRepresentation>