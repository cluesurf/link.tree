
load @nerdbond/snow/amazonaws.com/mediaconvert/2017-08-29/base/double-min0
  take form double-min0

load @nerdbond/snow/amazonaws.com/mediaconvert/2017-08-29/base/integer-min0-max47185920
  take form integer-min0-max47185920

load @nerdbond/snow/amazonaws.com/mediaconvert/2017-08-29/base/integer-min1-max2147483647
  take form integer-min1-max2147483647

load @nerdbond/snow/amazonaws.com/mediaconvert/2017-08-29/base/integer-min1000-max480000000
  take form integer-min1000-max480000000

load @nerdbond/snow/amazonaws.com/mediaconvert/2017-08-29/base/vp9-framerate-control
  take form vp9-framerate-control

load @nerdbond/snow/amazonaws.com/mediaconvert/2017-08-29/base/vp9-framerate-conversion-algorithm
  take form vp9-framerate-conversion-algorithm

load @nerdbond/snow/amazonaws.com/mediaconvert/2017-08-29/base/vp9-par-control
  take form vp9-par-control

load @nerdbond/snow/amazonaws.com/mediaconvert/2017-08-29/base/vp9-quality-tuning-level
  take form vp9-quality-tuning-level

load @nerdbond/snow/amazonaws.com/mediaconvert/2017-08-29/base/vp9-rate-control-mode
  take form vp9-rate-control-mode

form vp9-settings, name <Vp9Settings>
  note <Required when you set (Codec) under (VideoDescription)&gt;(CodecSettings) to the value VP9.>
  take bitrate, name <Bitrate>
    like integer-min1000-max480000000
    void take
    note <Target bitrate in bits/second. For example, enter five megabits per second as 5000000.>
    host xml
      host name, text <bitrate>
  take framerate-control, name <FramerateControl>
    like vp9-framerate-control
    void take
    note <If you are using the console, use the Framerate setting to specify the frame rate for this output. If you want to keep the same frame rate as the input video, choose Follow source. If you want to do frame rate conversion, choose a frame rate from the dropdown list or choose Custom. The framerates shown in the dropdown list are decimal approximations of fractions. If you choose Custom, specify your frame rate as a fraction. If you are creating your transcoding job specification as a JSON file without the console, use FramerateControl to specify which value the service uses for the frame rate for this output. Choose INITIALIZE_FROM_SOURCE if you want the service to use the frame rate from the input. Choose SPECIFIED if you want the service to use the frame rate you specify in the settings FramerateNumerator and FramerateDenominator.>
    host xml
      host name, text <framerateControl>
  take framerate-conversion-algorithm, name <FramerateConversionAlgorithm>
    like vp9-framerate-conversion-algorithm
    void take
    note <Choose the method that you want MediaConvert to use when increasing or decreasing the frame rate. We recommend using drop duplicate (DUPLICATE_DROP) for numerically simple conversions, such as 60 fps to 30 fps. For numerically complex conversions, you can use interpolate (INTERPOLATE) to avoid stutter. This results in a smooth picture, but might introduce undesirable video artifacts. For complex frame rate conversions, especially if your source video has already been converted from its original cadence, use FrameFormer (FRAMEFORMER) to do motion-compensated interpolation. FrameFormer chooses the best conversion method frame by frame. Note that using FrameFormer increases the transcoding time and incurs a significant add-on cost.>
    host xml
      host name, text <framerateConversionAlgorithm>
  take framerate-denominator, name <FramerateDenominator>
    like integer-min1-max2147483647
    void take
    note <When you use the API for transcode jobs that use frame rate conversion, specify the frame rate as a fraction. For example, 24000 / 1001 = 23.976 fps. Use FramerateDenominator to specify the denominator of this fraction. In this example, use 1001 for the value of FramerateDenominator. When you use the console for transcode jobs that use frame rate conversion, provide the value as a decimal number for Framerate. In this example, specify 23.976.>
    host xml
      host name, text <framerateDenominator>
  take framerate-numerator, name <FramerateNumerator>
    like integer-min1-max2147483647
    void take
    note <When you use the API for transcode jobs that use frame rate conversion, specify the frame rate as a fraction. For example, 24000 / 1001 = 23.976 fps. Use FramerateNumerator to specify the numerator of this fraction. In this example, use 24000 for the value of FramerateNumerator. When you use the console for transcode jobs that use frame rate conversion, provide the value as a decimal number for Framerate. In this example, specify 23.976.>
    host xml
      host name, text <framerateNumerator>
  take gop-size, name <GopSize>
    like double-min0
    void take
    note <GOP Length (keyframe interval) in frames. Must be greater than zero.>
    host xml
      host name, text <gopSize>
  take hrd-buffer-size, name <HrdBufferSize>
    like integer-min0-max47185920
    void take
    note <Size of buffer (HRD buffer model) in bits. For example, enter five megabits as 5000000.>
    host xml
      host name, text <hrdBufferSize>
  take max-bitrate, name <MaxBitrate>
    like integer-min1000-max480000000
    void take
    note <Ignore this setting unless you set qualityTuningLevel to MULTI_PASS. Optional. Specify the maximum bitrate in bits/second. For example, enter five megabits per second as 5000000. The default behavior uses twice the target bitrate as the maximum bitrate.>
    host xml
      host name, text <maxBitrate>
  take par-control, name <ParControl>
    like vp9-par-control
    void take
    note <Optional. Specify how the service determines the pixel aspect ratio for this output. The default behavior is to use the same pixel aspect ratio as your input video.>
    host xml
      host name, text <parControl>
  take par-denominator, name <ParDenominator>
    like integer-min1-max2147483647
    void take
    note <Required when you set Pixel aspect ratio (parControl) to SPECIFIED. On the console, this corresponds to any value other than Follow source. When you specify an output pixel aspect ratio (PAR) that is different from your input video PAR, provide your output PAR as a ratio. For example, for D1/DV NTSC widescreen, you would specify the ratio 40:33. In this example, the value for parDenominator is 33.>
    host xml
      host name, text <parDenominator>
  take par-numerator, name <ParNumerator>
    like integer-min1-max2147483647
    void take
    note <Required when you set Pixel aspect ratio (parControl) to SPECIFIED. On the console, this corresponds to any value other than Follow source. When you specify an output pixel aspect ratio (PAR) that is different from your input video PAR, provide your output PAR as a ratio. For example, for D1/DV NTSC widescreen, you would specify the ratio 40:33. In this example, the value for parNumerator is 40.>
    host xml
      host name, text <parNumerator>
  take quality-tuning-level, name <QualityTuningLevel>
    like vp9-quality-tuning-level
    void take
    note <Optional. Use Quality tuning level (qualityTuningLevel) to choose how you want to trade off encoding speed for output video quality. The default behavior is faster, lower quality, multi-pass encoding.>
    host xml
      host name, text <qualityTuningLevel>
  take rate-control-mode, name <RateControlMode>
    like vp9-rate-control-mode
    void take
    note <With the VP9 codec, you can use only the variable bitrate (VBR) rate control mode.>
    host xml
      host name, text <rateControlMode>