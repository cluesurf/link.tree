
load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/destination-settings
  take form destination-settings

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/double-min0-max2147483647
  take form double-min0-max2147483647

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-audio-only-header
  take form hls-audio-only-header

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-caption-language-setting
  take form hls-caption-language-setting

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-client-cache
  take form hls-client-cache

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-codec-specification
  take form hls-codec-specification

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-directory-structure
  take form hls-directory-structure

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-encryption-settings
  take form hls-encryption-settings

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-image-based-trick-play
  take form hls-image-based-trick-play

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-manifest-compression
  take form hls-manifest-compression

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-manifest-duration-format
  take form hls-manifest-duration-format

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-output-selection
  take form hls-output-selection

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-program-date-time
  take form hls-program-date-time

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-segment-control
  take form hls-segment-control

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-segment-length-control
  take form hls-segment-length-control

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-stream-inf-resolution
  take form hls-stream-inf-resolution

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-target-duration-compatibility-mode
  take form hls-target-duration-compatibility-mode

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/hls-timed-metadata-id3-frame
  take form hls-timed-metadata-id3-frame

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/integer-min-negative2147483648-max2147483647
  take form integer-min-negative2147483648-max2147483647

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/integer-min0-max2147483647
  take form integer-min0-max2147483647

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/integer-min0-max3600
  take form integer-min0-max3600

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/integer-min1-max2147483647
  take form integer-min1-max2147483647

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/list-of-hls-ad-markers
  take form list-of-hls-ad-markers

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/list-of-hls-additional-manifest
  take form list-of-hls-additional-manifest

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/list-of-hls-caption-language-mapping
  take form list-of-hls-caption-language-mapping

load @treesurf/snow/amazonaws.com/mediaconvert/2017-08-29/base/string-pattern-s3
  take form string-pattern-s3

load @treesurf/snow/base/string
  take form string

form hls-group-settings, name <HlsGroupSettings>
  note <Settings related to your HLS output package. For more information, see https://docs.aws.amazon.com/mediaconvert/latest/ug/outputs-file-ABR.html. When you work directly in your JSON job specification, include this object and any required children when you set Type, under OutputGroupSettings, to HLS_GROUP_SETTINGS.>
  take ad-markers, name <AdMarkers>
    like list-of-hls-ad-markers
    void take
    note <Choose one or more ad marker types to decorate your Apple HLS manifest. This setting does not determine whether SCTE-35 markers appear in the outputs themselves.>
    host xml
      host name, text <adMarkers>
  take additional-manifests, name <AdditionalManifests>
    like list-of-hls-additional-manifest
    void take
    note <By default, the service creates one top-level .m3u8 HLS manifest for each HLS output group in your job. This default manifest references every output in the output group. To create additional top-level manifests that reference a subset of the outputs in the output group, specify a list of them here.>
    host xml
      host name, text <additionalManifests>
  take audio-only-header, name <AudioOnlyHeader>
    like hls-audio-only-header
    void take
    note <Ignore this setting unless you are using FairPlay DRM with Verimatrix and you encounter playback issues. Keep the default value, Include (INCLUDE), to output audio-only headers. Choose Exclude (EXCLUDE) to remove the audio-only headers from your audio segments.>
    host xml
      host name, text <audioOnlyHeader>
  take base-url, name <BaseUrl>
    like string
    void take
    note <A partial URI prefix that will be prepended to each output in the media .m3u8 file. Can be used if base manifest is delivered from a different URL than the main .m3u8 file.>
    host xml
      host name, text <baseUrl>
  take caption-language-mappings, name <CaptionLanguageMappings>
    like list-of-hls-caption-language-mapping
    void take
    note <Language to be used on Caption outputs>
    host xml
      host name, text <captionLanguageMappings>
  take caption-language-setting, name <CaptionLanguageSetting>
    like hls-caption-language-setting
    void take
    note <Applies only to 608 Embedded output captions. Insert: Include CLOSED-CAPTIONS lines in the manifest. Specify at least one language in the CC1 Language Code field. One CLOSED-CAPTION line is added for each Language Code you specify. Make sure to specify the languages in the order in which they appear in the original source (if the source is embedded format) or the order of the caption selectors (if the source is other than embedded). Otherwise, languages in the manifest will not match up properly with the output captions. None: Include CLOSED-CAPTIONS=NONE line in the manifest. Omit: Omit any CLOSED-CAPTIONS line from the manifest.>
    host xml
      host name, text <captionLanguageSetting>
  take client-cache, name <ClientCache>
    like hls-client-cache
    void take
    note <Disable this setting only when your workflow requires the #EXT-X-ALLOW-CACHE:no tag. Otherwise, keep the default value Enabled (ENABLED) and control caching in your video distribution set up. For example, use the Cache-Control http header.>
    host xml
      host name, text <clientCache>
  take codec-specification, name <CodecSpecification>
    like hls-codec-specification
    void take
    note <Specification to use (RFC-6381 or the default RFC-4281) during m3u8 playlist generation.>
    host xml
      host name, text <codecSpecification>
  take destination, name <Destination>
    like string-pattern-s3
    void take
    note <Use Destination (Destination) to specify the S3 output location and the output filename base. Destination accepts format identifiers. If you do not specify the base filename in the URI, the service will use the filename of the input file. If your job has multiple inputs, the service uses the filename of the first input file.>
    host xml
      host name, text <destination>
  take destination-settings, name <DestinationSettings>
    like destination-settings
    void take
    note <Settings associated with the destination. Will vary based on the type of destination>
    host xml
      host name, text <destinationSettings>
  take directory-structure, name <DirectoryStructure>
    like hls-directory-structure
    void take
    note <Indicates whether segments should be placed in subdirectories.>
    host xml
      host name, text <directoryStructure>
  take encryption, name <Encryption>
    like hls-encryption-settings
    void take
    note <DRM settings.>
    host xml
      host name, text <encryption>
  take image-based-trick-play, name <ImageBasedTrickPlay>
    like hls-image-based-trick-play
    void take
    note <Specify whether MediaConvert generates images for trick play. Keep the default value, None (NONE), to not generate any images. Choose Thumbnail (THUMBNAIL) to generate tiled thumbnails. Choose Thumbnail and full frame (THUMBNAIL_AND_FULLFRAME) to generate tiled thumbnails and full-resolution images of single frames. MediaConvert creates a child manifest for each set of images that you generate and adds corresponding entries to the parent manifest. A common application for these images is Roku trick mode. The thumbnails and full-frame images that MediaConvert creates with this feature are compatible with this Roku specification: https://developer.roku.com/docs/developer-program/media-playback/trick-mode/hls-and-dash.md>
    host xml
      host name, text <imageBasedTrickPlay>
  take manifest-compression, name <ManifestCompression>
    like hls-manifest-compression
    void take
    note <When set to GZIP, compresses HLS playlist.>
    host xml
      host name, text <manifestCompression>
  take manifest-duration-format, name <ManifestDurationFormat>
    like hls-manifest-duration-format
    void take
    note <Indicates whether the output manifest should use floating point values for segment duration.>
    host xml
      host name, text <manifestDurationFormat>
  take min-final-segment-length, name <MinFinalSegmentLength>
    like double-min0-max2147483647
    void take
    note <Keep this setting at the default value of 0, unless you are troubleshooting a problem with how devices play back the end of your video asset. If you know that player devices are hanging on the final segment of your video because the length of your final segment is too short, use this setting to specify a minimum final segment length, in seconds. Choose a value that is greater than or equal to 1 and less than your segment length. When you specify a value for this setting, the encoder will combine any final segment that is shorter than the length that you specify with the previous segment. For example, your segment length is 3 seconds and your final segment is .5 seconds without a minimum final segment length; when you set the minimum final segment length to 1, your final segment is 3.5 seconds.>
    host xml
      host name, text <minFinalSegmentLength>
  take min-segment-length, name <MinSegmentLength>
    like integer-min0-max2147483647
    void take
    note <When set, Minimum Segment Size is enforced by looking ahead and back within the specified range for a nearby avail and extending the segment size if needed.>
    host xml
      host name, text <minSegmentLength>
  take output-selection, name <OutputSelection>
    like hls-output-selection
    void take
    note <Indicates whether the .m3u8 manifest file should be generated for this HLS output group.>
    host xml
      host name, text <outputSelection>
  take program-date-time, name <ProgramDateTime>
    like hls-program-date-time
    void take
    note <Includes or excludes EXT-X-PROGRAM-DATE-TIME tag in .m3u8 manifest files. The value is calculated as follows: either the program date and time are initialized using the input timecode source, or the time is initialized using the input timecode source and the date is initialized using the timestamp_offset.>
    host xml
      host name, text <programDateTime>
  take program-date-time-period, name <ProgramDateTimePeriod>
    like integer-min0-max3600
    void take
    note <Period of insertion of EXT-X-PROGRAM-DATE-TIME entry, in seconds.>
    host xml
      host name, text <programDateTimePeriod>
  take segment-control, name <SegmentControl>
    like hls-segment-control
    void take
    note <When set to SINGLE_FILE, emits program as a single media resource (.ts) file, uses #EXT-X-BYTERANGE tags to index segment for playback.>
    host xml
      host name, text <segmentControl>
  take segment-length, name <SegmentLength>
    like integer-min1-max2147483647
    void take
    note <Specify the length, in whole seconds, of each segment. When you don't specify a value, MediaConvert defaults to 10. Related settings: Use Segment length control (SegmentLengthControl) to specify whether the encoder enforces this value strictly. Use Segment control (HlsSegmentControl) to specify whether MediaConvert creates separate segment files or one content file that has metadata to mark the segment boundaries.>
    host xml
      host name, text <segmentLength>
  take segment-length-control, name <SegmentLengthControl>
    like hls-segment-length-control
    void take
    note <Specify how you want MediaConvert to determine the segment length. Choose Exact (EXACT) to have the encoder use the exact length that you specify with the setting Segment length (SegmentLength). This might result in extra I-frames. Choose Multiple of GOP (GOP_MULTIPLE) to have the encoder round up the segment lengths to match the next GOP boundary.>
    host xml
      host name, text <segmentLengthControl>
  take segments-per-subdirectory, name <SegmentsPerSubdirectory>
    like integer-min1-max2147483647
    void take
    note <Number of segments to write to a subdirectory before starting a new one. directoryStructure must be SINGLE_DIRECTORY for this setting to have an effect.>
    host xml
      host name, text <segmentsPerSubdirectory>
  take stream-inf-resolution, name <StreamInfResolution>
    like hls-stream-inf-resolution
    void take
    note <Include or exclude RESOLUTION attribute for video in EXT-X-STREAM-INF tag of variant manifest.>
    host xml
      host name, text <streamInfResolution>
  take target-duration-compatibility-mode, name <TargetDurationCompatibilityMode>
    like hls-target-duration-compatibility-mode
    void take
    note <When set to LEGACY, the segment target duration is always rounded up to the nearest integer value above its current value in seconds. When set to SPEC\\_COMPLIANT, the segment target duration is rounded up to the nearest integer value if fraction seconds are greater than or equal to 0.5 (&gt;= 0.5) and rounded down if less than 0.5 (&lt; 0.5). You may need to use LEGACY if your client needs to ensure that the target duration is always longer than the actual duration of the segment. Some older players may experience interrupted playback when the actual duration of a track in a segment is longer than the target duration.>
    host xml
      host name, text <targetDurationCompatibilityMode>
  take timed-metadata-id3-frame, name <TimedMetadataId3Frame>
    like hls-timed-metadata-id3-frame
    void take
    note <Indicates ID3 frame that has the timecode.>
    host xml
      host name, text <timedMetadataId3Frame>
  take timed-metadata-id3-period, name <TimedMetadataId3Period>
    like integer-min-negative2147483648-max2147483647
    void take
    note <Timed Metadata interval in seconds.>
    host xml
      host name, text <timedMetadataId3Period>
  take timestamp-delta-milliseconds, name <TimestampDeltaMilliseconds>
    like integer-min-negative2147483648-max2147483647
    void take
    note <Provides an extra millisecond delta offset to fine tune the timestamps.>
    host xml
      host name, text <timestampDeltaMilliseconds>