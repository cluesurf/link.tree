
load @tunebond/snow/amazonaws.com/elasticloadbalancing/2012-06-01/base/access-point-not-found-exception
  take form access-point-not-found-exception

load @tunebond/snow/amazonaws.com/elasticloadbalancing/2012-06-01/base/create-lb-cookie-stickiness-policy-output
  take form create-lb-cookie-stickiness-policy-output

load @tunebond/snow/amazonaws.com/elasticloadbalancing/2012-06-01/base/duplicate-policy-name-exception
  take form duplicate-policy-name-exception

load @tunebond/snow/amazonaws.com/elasticloadbalancing/2012-06-01/base/invalid-configuration-request-exception
  take form invalid-configuration-request-exception

load @tunebond/snow/amazonaws.com/elasticloadbalancing/2012-06-01/base/too-many-policies-exception
  take form too-many-policies-exception

load @tunebond/snow/base/native-integer
  take form native-integer

load @tunebond/snow/base/native-string
  take form native-string

boot get-create-lb-cookie-stickiness-policy, name <GET_CreateLBCookieStickinessPolicy>
  deed get
  note <Generates a stickiness policy with sticky session lifetimes controlled by the lifetime of the browser (user-agent) or a specified expiration period. This policy can be associated only with HTTP/HTTPS listeners.

When a load balancer implements this policy, the load balancer uses a special cookie to track the instance for each request. When the load balancer receives a request, it first checks to see if this cookie is present in the request. If so, the load balancer sends the request to the application server specified in the cookie. If not, the load balancer sends the request to a server that is chosen based on the existing load-balancing algorithm.

A cookie is inserted into the response for binding subsequent requests from the same user to that server. The validity of the cookie is based on the cookie expiration time, which is specified in the policy configuration.

For more information, see [Duration-Based Session Stickiness](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-sticky-sessions.html#enable-sticky-sessions-duration) in the _Classic Load Balancers Guide_.>

  take load-balancer-name
    like native-string
    note <The name of the load balancer.>
  take policy-name
    like native-string
    note <The name of the policy being created. Policy names must consist of alphanumeric characters and dashes (-). This name must be unique within the set of policies for this load balancer.>
  take cookie-expiration-period
    like native-integer
    note <The time period, in seconds, after which the cookie should be considered stale. If you do not specify this parameter, the default value is 0, which indicates that the sticky session should last for the duration of the browser session.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreateLBCookieStickinessPolicy>

  find <LoadBalancerName>, loan load-balancer-name
  find <PolicyName>, loan policy-name
  find <CookieExpirationPeriod>, loan cookie-expiration-period
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-lb-cookie-stickiness-policy-output
    note <Success>
  loot 480
    seed xml, like access-point-not-found-exception
    note <AccessPointNotFoundException>
  loot 481
    seed xml, like duplicate-policy-name-exception
    note <DuplicatePolicyNameException>
  loot 482
    seed xml, like too-many-policies-exception
    note <TooManyPoliciesException>
  loot 483
    seed xml, like invalid-configuration-request-exception
    note <InvalidConfigurationRequestException>