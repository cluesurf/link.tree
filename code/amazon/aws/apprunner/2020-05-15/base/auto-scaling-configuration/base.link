
load @textsurf/snow/amazonaws.com/apprunner/2020-05-15/base/app-runner-resource-arn
  take form app-runner-resource-arn

load @textsurf/snow/amazonaws.com/apprunner/2020-05-15/base/auto-scaling-configuration-name
  take form auto-scaling-configuration-name

load @textsurf/snow/amazonaws.com/apprunner/2020-05-15/base/auto-scaling-configuration-status
  take form auto-scaling-configuration-status

load @textsurf/snow/amazonaws.com/apprunner/2020-05-15/base/timestamp
  take form timestamp

load @textsurf/snow/base/boolean
  take form boolean

load @textsurf/snow/base/integer
  take form integer

form auto-scaling-configuration, name <AutoScalingConfiguration>
  note <Describes an AWS App Runner automatic scaling configuration resource. Multiple revisions of a configuration have the same `AutoScalingConfigurationName` and different `AutoScalingConfigurationRevision` values.

A higher `MinSize` increases the spread of your App Runner service over more Availability Zones in the AWS Region. The tradeoff is a higher minimal cost.

A lower `MaxSize` controls your cost. The tradeoff is lower responsiveness during peak demand.>
  take auto-scaling-configuration-arn, name <AutoScalingConfigurationArn>
    like app-runner-resource-arn
    void take
    note <The Amazon Resource Name (ARN) of this auto scaling configuration.>
  take auto-scaling-configuration-name, name <AutoScalingConfigurationName>
    like auto-scaling-configuration-name
    void take
    note <The customer-provided auto scaling configuration name. It can be used in multiple revisions of a configuration.>
  take auto-scaling-configuration-revision, name <AutoScalingConfigurationRevision>
    like integer
    void take
    note <The revision of this auto scaling configuration. It's unique among all the active configurations (`"Status": "ACTIVE"`) that share the same `AutoScalingConfigurationName`.>
  take latest, name <Latest>
    like boolean
    void take
    note <It's set to `true` for the configuration with the highest `Revision` among all configurations that share the same `Name`. It's set to `false` otherwise.>
  take status, name <Status>
    like auto-scaling-configuration-status
    void take
    note <The current state of the auto scaling configuration. If the status of a configuration revision is `INACTIVE`, it was deleted and can't be used. Inactive configuration revisions are permanently removed some time after they are deleted.>
  take max-concurrency, name <MaxConcurrency>
    like integer
    void take
    note <The maximum number of concurrent requests that an instance processes. If the number of concurrent requests exceeds this limit, App Runner scales the service up.>
  take min-size, name <MinSize>
    like integer
    void take
    note <The minimum number of instances that App Runner provisions for a service. The service always has at least `MinSize` provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.

App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.>
  take max-size, name <MaxSize>
    like integer
    void take
    note <The maximum number of instances that a service scales up to. At most `MaxSize` instances actively serve traffic for your service.>
  take created-at, name <CreatedAt>
    like timestamp
    void take
    note <The time when the auto scaling configuration was created. It's in Unix time stamp format.>
  take deleted-at, name <DeletedAt>
    like timestamp
    void take
    note <The time when the auto scaling configuration was deleted. It's in Unix time stamp format.>
