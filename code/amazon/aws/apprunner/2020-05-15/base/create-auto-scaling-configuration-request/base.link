
load @textsurf/snow/amazonaws.com/apprunner/2020-05-15/base/as-config-max-concurrency
  take form as-config-max-concurrency

load @textsurf/snow/amazonaws.com/apprunner/2020-05-15/base/as-config-max-size
  take form as-config-max-size

load @textsurf/snow/amazonaws.com/apprunner/2020-05-15/base/as-config-min-size
  take form as-config-min-size

load @textsurf/snow/amazonaws.com/apprunner/2020-05-15/base/auto-scaling-configuration-name
  take form auto-scaling-configuration-name

load @textsurf/snow/amazonaws.com/apprunner/2020-05-15/base/tag-list
  take form tag-list

form create-auto-scaling-configuration-request, name <CreateAutoScalingConfigurationRequest>
  take auto-scaling-configuration-name, name <AutoScalingConfigurationName>
    like auto-scaling-configuration-name
    note <A name for the auto scaling configuration. When you use it for the first time in an AWS Region, App Runner creates revision number `1` of this name. When you use the same name in subsequent calls, App Runner creates incremental revisions of the configuration.>
  take max-concurrency, name <MaxConcurrency>
    like as-config-max-concurrency
    void take
    note <The maximum number of concurrent requests that you want an instance to process. If the number of concurrent requests exceeds this limit, App Runner scales up your service.

Default: `100`>
  take min-size, name <MinSize>
    like as-config-min-size
    void take
    note <The minimum number of instances that App Runner provisions for your service. The service always has at least `MinSize` provisioned instances. Some of them actively serve traffic. The rest of them (provisioned and inactive instances) are a cost-effective compute capacity reserve and are ready to be quickly activated. You pay for memory usage of all the provisioned instances. You pay for CPU usage of only the active subset.

App Runner temporarily doubles the number of provisioned instances during deployments, to maintain the same capacity for both old and new code.

Default: `1`>
  take max-size, name <MaxSize>
    like as-config-max-size
    void take
    note <The maximum number of instances that your service scales up to. At most `MaxSize` instances actively serve traffic for your service.

Default: `25`>
  take tags, name <Tags>
    like tag-list
    void take
    note <A list of metadata items that you can associate with your auto scaling configuration resource. A tag is a key-value pair.>
