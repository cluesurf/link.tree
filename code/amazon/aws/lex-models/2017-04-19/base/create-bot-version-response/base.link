
load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/bot-name
  take form bot-name

load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/description
  take form description

load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/intent-list
  take form intent-list

load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/locale
  take form locale

load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/prompt
  take form prompt

load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/session-ttl
  take form session-ttl

load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/statement
  take form statement

load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/status
  take form status

load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/timestamp
  take form timestamp

load @drumwork/snow/amazonaws.com/lex-models/2017-04-19/base/version
  take form version

load @drumwork/snow/base/boolean
  take form boolean

load @drumwork/snow/base/string
  take form string

form create-bot-version-response, name <CreateBotVersionResponse>
  take name, name <name>
    like bot-name
    void take
    note <The name of the bot.>
  take description, name <description>
    like description
    void take
    note <A description of the bot.>
  take intents, name <intents>
    like intent-list
    void take
    note <An array of `Intent` objects. For more information, see PutBot.>
  take clarification-prompt, name <clarificationPrompt>
    like prompt
    void take
    note <The message that Amazon Lex uses when it doesn't understand the user's request. For more information, see PutBot.>
  take abort-statement, name <abortStatement>
    like statement
    void take
    note <The message that Amazon Lex uses to cancel a conversation. For more information, see PutBot.>
  take status, name <status>
    like status
    void take
    note <When you send a request to create or update a bot, Amazon Lex sets the `status` response element to `BUILDING`. After Amazon Lex builds the bot, it sets `status` to `READY`. If Amazon Lex can't build the bot, it sets `status` to `FAILED`. Amazon Lex returns the reason for the failure in the `failureReason` response element.>
  take failure-reason, name <failureReason>
    like string
    void take
    note <If `status` is `FAILED`, Amazon Lex provides the reason that it failed to build the bot.>
  take last-updated-date, name <lastUpdatedDate>
    like timestamp
    void take
    note <The date when the `$LATEST` version of this bot was updated.>
  take created-date, name <createdDate>
    like timestamp
    void take
    note <The date when the bot version was created.>
  take idle-session-ttl-in-seconds, name <idleSessionTTLInSeconds>
    like session-ttl
    void take
    note <The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. For more information, see PutBot.>
  take voice-id, name <voiceId>
    like string
    void take
    note <The Amazon Polly voice ID that Amazon Lex uses for voice interactions with the user.>
  take checksum, name <checksum>
    like string
    void take
    note <Checksum identifying the version of the bot that was created.>
  take version, name <version>
    like version
    void take
    note <The version of the bot.>
  take locale, name <locale>
    like locale
    void take
    note <Specifies the target locale for the bot.>
  take child-directed, name <childDirected>
    like boolean
    void take
    note <For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying `true` or `false` in the `childDirected` field. By specifying `true` in the `childDirected` field, you confirm that your use of Amazon Lex **is** related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying `false` in the `childDirected` field, you confirm that your use of Amazon Lex **is not** related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the `childDirected` field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.

If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the [Amazon Lex FAQ.](https://aws.amazon.com/lex/faqs#data-security)>
  take enable-model-improvements, name <enableModelImprovements>
    like boolean
    void take
    note <Indicates whether the bot uses accuracy improvements. `true` indicates that the bot is using the improvements, otherwise, `false`.>
  take detect-sentiment, name <detectSentiment>
    like boolean
    void take
    note <Indicates whether utterances entered by the user should be sent to Amazon Comprehend for sentiment analysis.>