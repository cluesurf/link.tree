
load @textsurf/snow/amazonaws.com/lex-models/2017-04-19/base/bot-name
  take form bot-name

load @textsurf/snow/amazonaws.com/lex-models/2017-04-19/base/iam-role-arn
  take form iam-role-arn

load @textsurf/snow/amazonaws.com/lex-models/2017-04-19/base/migration-strategy
  take form migration-strategy

load @textsurf/snow/amazonaws.com/lex-models/2017-04-19/base/v2-bot-name
  take form v2-bot-name

load @textsurf/snow/amazonaws.com/lex-models/2017-04-19/base/version
  take form version

form start-migration-request, name <StartMigrationRequest>
  take v1-bot-name, name <v1BotName>
    like bot-name
    note <The name of the Amazon Lex V1 bot that you are migrating to Amazon Lex V2.>
  take v1-bot-version, name <v1BotVersion>
    like version
    note <The version of the bot to migrate to Amazon Lex V2. You can migrate the `$LATEST` version as well as any numbered version.>
  take v2-bot-name, name <v2BotName>
    like v2-bot-name
    note <The name of the Amazon Lex V2 bot that you are migrating the Amazon Lex V1 bot to.

- If the Amazon Lex V2 bot doesn't exist, you must use the `CREATE_NEW` migration strategy.

- If the Amazon Lex V2 bot exists, you must use the `UPDATE_EXISTING` migration strategy to change the contents of the Amazon Lex V2 bot.>
  take v2-bot-role, name <v2BotRole>
    like iam-role-arn
    note <The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.>
  take migration-strategy, name <migrationStrategy>
    like migration-strategy
    note <The strategy used to conduct the migration.

- `CREATE_NEW` - Creates a new Amazon Lex V2 bot and migrates the Amazon Lex V1 bot to the new bot.

- `UPDATE_EXISTING` - Overwrites the existing Amazon Lex V2 bot metadata and the locale being migrated. It doesn't change any other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a new locale is created in the Amazon Lex V2 bot.>