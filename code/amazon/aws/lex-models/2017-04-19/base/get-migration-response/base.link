
load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/bot-name
  take form bot-name

load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/iam-role-arn
  take form iam-role-arn

load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/locale
  take form locale

load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/migration-alerts
  take form migration-alerts

load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/migration-id
  take form migration-id

load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/migration-status
  take form migration-status

load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/migration-strategy
  take form migration-strategy

load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/timestamp
  take form timestamp

load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/v2-bot-id
  take form v2-bot-id

load @tunebond/snow/amazonaws.com/lex-models/2017-04-19/base/version
  take form version

form get-migration-response, name <GetMigrationResponse>
  take migration-id, name <migrationId>
    like migration-id
    void take
    note <The unique identifier of the migration. This is the same as the identifier used when calling the `GetMigration` operation.>
  take v1-bot-name, name <v1BotName>
    like bot-name
    void take
    note <The name of the Amazon Lex V1 bot migrated to Amazon Lex V2.>
  take v1-bot-version, name <v1BotVersion>
    like version
    void take
    note <The version of the Amazon Lex V1 bot migrated to Amazon Lex V2.>
  take v1-bot-locale, name <v1BotLocale>
    like locale
    void take
    note <The locale of the Amazon Lex V1 bot migrated to Amazon Lex V2.>
  take v2-bot-id, name <v2BotId>
    like v2-bot-id
    void take
    note <The unique identifier of the Amazon Lex V2 bot that the Amazon Lex V1 is being migrated to.>
  take v2-bot-role, name <v2BotRole>
    like iam-role-arn
    void take
    note <The IAM role that Amazon Lex uses to run the Amazon Lex V2 bot.>
  take migration-status, name <migrationStatus>
    like migration-status
    void take
    note <Indicates the status of the migration. When the status is `COMPLETE` the migration is finished and the bot is available in Amazon Lex V2. There may be alerts and warnings that need to be resolved to complete the migration.>
  take migration-strategy, name <migrationStrategy>
    like migration-strategy
    void take
    note <The strategy used to conduct the migration.

- `CREATE_NEW` - Creates a new Amazon Lex V2 bot and migrates the Amazon Lex V1 bot to the new bot.

- `UPDATE_EXISTING` - Overwrites the existing Amazon Lex V2 bot metadata and the locale being migrated. It doesn't change any other locales in the Amazon Lex V2 bot. If the locale doesn't exist, a new locale is created in the Amazon Lex V2 bot.>
  take migration-timestamp, name <migrationTimestamp>
    like timestamp
    void take
    note <The date and time that the migration started.>
  take alerts, name <alerts>
    like migration-alerts
    void take
    note <A list of alerts and warnings that indicate issues with the migration for the Amazon Lex V1 bot to Amazon Lex V2. You receive a warning when an Amazon Lex V1 feature has a different implementation if Amazon Lex V2.

For more information, see [Migrating a bot](https://docs.aws.amazon.com/lexv2/latest/dg/migrate.html) in the _Amazon Lex V2 developer guide_.>