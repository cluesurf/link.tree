
load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/bot-name
  take form bot-name

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/confidence-threshold
  take form confidence-threshold

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/description
  take form description

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/intent-list
  take form intent-list

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/locale
  take form locale

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/prompt
  take form prompt

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/session-ttl
  take form session-ttl

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/statement
  take form statement

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/status
  take form status

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/tag-list
  take form tag-list

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/timestamp
  take form timestamp

load @termsurf/snow/amazonaws.com/lex-models/2017-04-19/base/version
  take form version

load @termsurf/snow/base/boolean
  take form boolean

load @termsurf/snow/base/string
  take form string

form put-bot-response, name <PutBotResponse>
  take name, name <name>
    like bot-name
    void take
    note <The name of the bot.>
  take description, name <description>
    like description
    void take
    note <A description of the bot.>
  take intents, name <intents>
    like intent-list
    void take
    note <An array of `Intent` objects. For more information, see PutBot.>
  take enable-model-improvements, name <enableModelImprovements>
    like boolean
    void take
    note <Indicates whether the bot uses accuracy improvements. `true` indicates that the bot is using the improvements, otherwise, `false`.>
  take nlu-intent-confidence-threshold, name <nluIntentConfidenceThreshold>
    like confidence-threshold
    void take
    note <The score that determines where Amazon Lex inserts the `AMAZON.FallbackIntent`, `AMAZON.KendraSearchIntent`, or both when returning alternative intents in a [PostContent](https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostContent.html) or [PostText](https://docs.aws.amazon.com/lex/latest/dg/API_runtime_PostText.html) response. `AMAZON.FallbackIntent` is inserted if the confidence score for all intents is below this value. `AMAZON.KendraSearchIntent` is only inserted if it is configured for the bot.>
  take clarification-prompt, name <clarificationPrompt>
    like prompt
    void take
    note <The prompts that Amazon Lex uses when it doesn't understand the user's intent. For more information, see PutBot.>
  take abort-statement, name <abortStatement>
    like statement
    void take
    note <The message that Amazon Lex uses to cancel a conversation. For more information, see PutBot.>
  take status, name <status>
    like status
    void take
    note <When you send a request to create a bot with `processBehavior` set to `BUILD`, Amazon Lex sets the `status` response element to `BUILDING`.

In the `READY_BASIC_TESTING` state you can test the bot with user inputs that exactly match the utterances configured for the bot's intents and values in the slot types.

If Amazon Lex can't build the bot, Amazon Lex sets `status` to `FAILED`. Amazon Lex returns the reason for the failure in the `failureReason` response element.

When you set `processBehavior` to `SAVE`, Amazon Lex sets the status code to `NOT BUILT`.

When the bot is in the `READY` state you can test and publish the bot.>
  take failure-reason, name <failureReason>
    like string
    void take
    note <If `status` is `FAILED`, Amazon Lex provides the reason that it failed to build the bot.>
  take last-updated-date, name <lastUpdatedDate>
    like timestamp
    void take
    note <The date that the bot was updated. When you create a resource, the creation date and last updated date are the same.>
  take created-date, name <createdDate>
    like timestamp
    void take
    note <The date that the bot was created.>
  take idle-session-ttl-in-seconds, name <idleSessionTTLInSeconds>
    like session-ttl
    void take
    note <The maximum length of time that Amazon Lex retains the data gathered in a conversation. For more information, see PutBot.>
  take voice-id, name <voiceId>
    like string
    void take
    note <The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user. For more information, see PutBot.>
  take checksum, name <checksum>
    like string
    void take
    note <Checksum of the bot that you created.>
  take version, name <version>
    like version
    void take
    note <The version of the bot. For a new bot, the version is always `$LATEST`.>
  take locale, name <locale>
    like locale
    void take
    note <The target locale for the bot.>
  take child-directed, name <childDirected>
    like boolean
    void take
    note <For each Amazon Lex bot created with the Amazon Lex Model Building Service, you must specify whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA) by specifying `true` or `false` in the `childDirected` field. By specifying `true` in the `childDirected` field, you confirm that your use of Amazon Lex **is** related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. By specifying `false` in the `childDirected` field, you confirm that your use of Amazon Lex **is not** related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. You may not specify a default value for the `childDirected` field that does not accurately reflect whether your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA.

If your use of Amazon Lex relates to a website, program, or other application that is directed in whole or in part, to children under age 13, you must obtain any required verifiable parental consent under COPPA. For information regarding the use of Amazon Lex in connection with websites, programs, or other applications that are directed or targeted, in whole or in part, to children under age 13, see the [Amazon Lex FAQ.](https://aws.amazon.com/lex/faqs#data-security)>
  take create-version, name <createVersion>
    like boolean
    void take
    note <`True` if a new version of the bot was created. If the `createVersion` field was not specified in the request, the `createVersion` field is set to false in the response.>
  take detect-sentiment, name <detectSentiment>
    like boolean
    void take
    note <`true` if the bot is configured to send user utterances to Amazon Comprehend for sentiment analysis. If the `detectSentiment` field was not specified in the request, the `detectSentiment` field is `false` in the response.>
  take tags, name <tags>
    like tag-list
    void take
    note <A list of tags associated with the bot.>