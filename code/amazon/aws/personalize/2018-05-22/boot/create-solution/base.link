
load @termsurf/snow/amazonaws.com/personalize/2018-05-22/base/create-solution-response
  take form create-solution-response

load @termsurf/snow/amazonaws.com/personalize/2018-05-22/base/invalid-input-exception
  take form invalid-input-exception

load @termsurf/snow/amazonaws.com/personalize/2018-05-22/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @termsurf/snow/amazonaws.com/personalize/2018-05-22/base/resource-already-exists-exception
  take form resource-already-exists-exception

load @termsurf/snow/amazonaws.com/personalize/2018-05-22/base/resource-in-use-exception
  take form resource-in-use-exception

load @termsurf/snow/amazonaws.com/personalize/2018-05-22/base/resource-not-found-exception
  take form resource-not-found-exception

load @termsurf/snow/base/native-string
  take form native-string

boot create-solution, name <CreateSolution>
  deed post
  note <Creates the configuration for training a model. A trained model is known as a solution. After the configuration is created, you train the model (create a solution) by calling the CreateSolutionVersion operation. Every time you call `CreateSolutionVersion`, a new version of the solution is created.

After creating a solution version, you check its accuracy by calling GetSolutionMetrics. When you are satisfied with the version, you deploy it using CreateCampaign. The campaign provides recommendations to a client through the [GetRecommendations](https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html) API.

To train a model, Amazon Personalize requires training data and a recipe. The training data comes from the dataset group that you provide in the request. A recipe specifies the training algorithm and a feature transformation. You can specify one of the predefined recipes provided by Amazon Personalize. Alternatively, you can specify `performAutoML` and Amazon Personalize will analyze your data and select the optimum USER_PERSONALIZATION recipe for you.

Amazon Personalize doesn't support configuring the `hpoObjective` for solution hyperparameter optimization at this time.

**Status** A solution can be in one of the following states:

- CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED

- DELETE PENDING &gt; DELETE IN_PROGRESS

To get the status of the solution, call DescribeSolution. Wait until the status shows as ACTIVE before calling `CreateSolutionVersion`.

**Related APIs** - ListSolutions

- CreateSolutionVersion

- DescribeSolution

- DeleteSolution

- ListSolutionVersions

- DescribeSolutionVersion>

  take x-amz-target
    like native-string
  take create-solution-request, like create-solution-request

  line </#X-Amz-Target=AmazonPersonalize.CreateSolution>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-solution-request

  loot 200
    seed json, like create-solution-response
    note <Success>
  loot 480
    seed json, like invalid-input-exception
    note <InvalidInputException>
  loot 481
    seed json, like resource-already-exists-exception
    note <ResourceAlreadyExistsException>
  loot 482
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 483
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 484
    seed json, like resource-in-use-exception
    note <ResourceInUseException>