
load @drumwork/snow/amazonaws.com/personalize/2018-05-22/base/create-campaign-response
  take form create-campaign-response

load @drumwork/snow/amazonaws.com/personalize/2018-05-22/base/invalid-input-exception
  take form invalid-input-exception

load @drumwork/snow/amazonaws.com/personalize/2018-05-22/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @drumwork/snow/amazonaws.com/personalize/2018-05-22/base/resource-already-exists-exception
  take form resource-already-exists-exception

load @drumwork/snow/amazonaws.com/personalize/2018-05-22/base/resource-in-use-exception
  take form resource-in-use-exception

load @drumwork/snow/amazonaws.com/personalize/2018-05-22/base/resource-not-found-exception
  take form resource-not-found-exception

load @drumwork/snow/base/native-string
  take form native-string

boot create-campaign, name <CreateCampaign>
  deed post
  note <Creates a campaign by deploying a solution version. When a client calls the [GetRecommendations](https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetRecommendations.html) and [GetPersonalizedRanking](https://docs.aws.amazon.com/personalize/latest/dg/API_RS_GetPersonalizedRanking.html) APIs, a campaign is specified in the request.

**Minimum Provisioned TPS and Auto-Scaling** A transaction is a single `GetRecommendations` or `GetPersonalizedRanking` call. Transactions per second (TPS) is the throughput and unit of billing for Amazon Personalize. The minimum provisioned TPS (`minProvisionedTPS`) specifies the baseline throughput provisioned by Amazon Personalize, and thus, the minimum billing charge.

If your TPS increases beyond `minProvisionedTPS`, Amazon Personalize auto-scales the provisioned capacity up and down, but never below `minProvisionedTPS`. There's a short time delay while the capacity is increased that might cause loss of transactions.

The actual TPS used is calculated as the average requests/second within a 5-minute window. You pay for maximum of either the minimum provisioned TPS or the actual TPS. We recommend starting with a low `minProvisionedTPS`, track your usage using Amazon CloudWatch metrics, and then increase the `minProvisionedTPS` as necessary.

**Status** A campaign can be in one of the following states:

- CREATE PENDING &gt; CREATE IN_PROGRESS &gt; ACTIVE -or- CREATE FAILED

- DELETE PENDING &gt; DELETE IN_PROGRESS

To get the campaign status, call DescribeCampaign.

Wait until the `status` of the campaign is `ACTIVE` before asking the campaign for recommendations.

**Related APIs** - ListCampaigns

- DescribeCampaign

- UpdateCampaign

- DeleteCampaign>

  take x-amz-target
    like native-string
  take create-campaign-request, like create-campaign-request

  line </#X-Amz-Target=AmazonPersonalize.CreateCampaign>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-campaign-request

  loot 200
    seed json, like create-campaign-response
    note <Success>
  loot 480
    seed json, like invalid-input-exception
    note <InvalidInputException>
  loot 481
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 482
    seed json, like resource-already-exists-exception
    note <ResourceAlreadyExistsException>
  loot 483
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 484
    seed json, like resource-in-use-exception
    note <ResourceInUseException>