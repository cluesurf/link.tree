
load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/build-artifacts
  take form build-artifacts

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/build-artifacts-list
  take form build-artifacts-list

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/build-batch-phases
  take form build-batch-phases

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/build-groups
  take form build-groups

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/logs-config
  take form logs-config

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/non-empty-string
  take form non-empty-string

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-build-batch-config
  take form project-build-batch-config

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-cache
  take form project-cache

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-environment
  take form project-environment

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-file-system-locations
  take form project-file-system-locations

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-secondary-source-versions
  take form project-secondary-source-versions

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-source
  take form project-source

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-sources
  take form project-sources

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/status-type
  take form status-type

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/timestamp
  take form timestamp

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/vpc-config
  take form vpc-config

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/wrapper-boolean
  take form wrapper-boolean

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/wrapper-int
  take form wrapper-int

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/wrapper-long
  take form wrapper-long

load @nerdbond/snow/base/boolean
  take form boolean

load @nerdbond/snow/base/string
  take form string

form build-batch, name <BuildBatch>
  note <Contains information about a batch build.>
  take id, name <id>
    like non-empty-string
    void take
    note <The identifier of the batch build.>
  take arn, name <arn>
    like non-empty-string
    void take
    note <The ARN of the batch build.>
  take start-time, name <startTime>
    like timestamp
    void take
    note <The date and time that the batch build started.>
  take end-time, name <endTime>
    like timestamp
    void take
    note <The date and time that the batch build ended.>
  take current-phase, name <currentPhase>
    like string
    void take
    note <The current phase of the batch build.>
  take build-batch-status, name <buildBatchStatus>
    like status-type
    void take
    note <The status of the batch build.>
  take source-version, name <sourceVersion>
    like non-empty-string
    void take
    note <The identifier of the version of the source code to be built.>
  take resolved-source-version, name <resolvedSourceVersion>
    like non-empty-string
    void take
    note <The identifier of the resolved version of this batch build's source code.

- For CodeCommit, GitHub, GitHub Enterprise, and BitBucket, the commit ID.

- For CodePipeline, the source revision provided by CodePipeline.

- For Amazon S3, this does not apply.>
  take project-name, name <projectName>
    like non-empty-string
    void take
    note <The name of the batch build project.>
  take phases, name <phases>
    like build-batch-phases
    void take
    note <An array of `BuildBatchPhase` objects the specify the phases of the batch build.>
  take source, name <source>
    like project-source
    void take
  take secondary-sources, name <secondarySources>
    like project-sources
    void take
    note <An array of `ProjectSource` objects that define the sources for the batch build.>
  take secondary-source-versions, name <secondarySourceVersions>
    like project-secondary-source-versions
    void take
    note <An array of `ProjectSourceVersion` objects. Each `ProjectSourceVersion` must be one of:

- For CodeCommit: the commit ID, branch, or Git tag to use.

- For GitHub: the commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format `pr/pull-request-ID` (for example, `pr/25`). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.

- For Bitbucket: the commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.

- For Amazon S3: the version ID of the object that represents the build input ZIP file to use.>
  take artifacts, name <artifacts>
    like build-artifacts
    void take
    note <A `BuildArtifacts` object the defines the build artifacts for this batch build.>
  take secondary-artifacts, name <secondaryArtifacts>
    like build-artifacts-list
    void take
    note <An array of `BuildArtifacts` objects the define the build artifacts for this batch build.>
  take cache, name <cache>
    like project-cache
    void take
  take environment, name <environment>
    like project-environment
    void take
  take service-role, name <serviceRole>
    like non-empty-string
    void take
    note <The name of a service role used for builds in the batch.>
  take log-config, name <logConfig>
    like logs-config
    void take
  take build-timeout-in-minutes, name <buildTimeoutInMinutes>
    like wrapper-int
    void take
    note <Specifies the maximum amount of time, in minutes, that the build in a batch must be completed in.>
  take queued-timeout-in-minutes, name <queuedTimeoutInMinutes>
    like wrapper-int
    void take
    note <Specifies the amount of time, in minutes, that the batch build is allowed to be queued before it times out.>
  take complete, name <complete>
    like boolean
    void take
    note <Indicates if the batch build is complete.>
  take initiator, name <initiator>
    like string
    void take
    note <The entity that started the batch build. Valid values include:

- If CodePipeline started the build, the pipeline's name (for example, `codepipeline/my-demo-pipeline`).

- If an IAM user started the build, the user's name.

- If the Jenkins plugin for CodeBuild started the build, the string `CodeBuild-Jenkins-Plugin`.>
  take vpc-config, name <vpcConfig>
    like vpc-config
    void take
  take encryption-key, name <encryptionKey>
    like non-empty-string
    void take
    note <The Key Management Service customer master key (CMK) to be used for encrypting the batch build output artifacts.

You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.

You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias (using the format `alias/&lt;alias-name&gt;`).>
  take build-batch-number, name <buildBatchNumber>
    like wrapper-long
    void take
    note <The number of the batch build. For each project, the `buildBatchNumber` of its first batch build is `1`. The `buildBatchNumber` of each subsequent batch build is incremented by `1`. If a batch build is deleted, the `buildBatchNumber` of other batch builds does not change.>
  take file-system-locations, name <fileSystemLocations>
    like project-file-system-locations
    void take
    note <An array of `ProjectFileSystemLocation` objects for the batch build project. A `ProjectFileSystemLocation` object specifies the `identifier`, `location`, `mountOptions`, `mountPoint`, and `type` of a file system created using Amazon Elastic File System.>
  take build-batch-config, name <buildBatchConfig>
    like project-build-batch-config
    void take
  take build-groups, name <buildGroups>
    like build-groups
    void take
    note <An array of `BuildGroup` objects that define the build groups for the batch build.>
  take debug-session-enabled, name <debugSessionEnabled>
    like wrapper-boolean
    void take
    note <Specifies if session debugging is enabled for this batch build. For more information, see [Viewing a running build in Session Manager](https://docs.aws.amazon.com/codebuild/latest/userguide/session-manager.html). Batch session debugging is not supported for matrix batch builds.>