
load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/build-status-config
  take form build-status-config

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/compute-type
  take form compute-type

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/environment-type
  take form environment-type

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/environment-variables
  take form environment-variables

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/git-clone-depth
  take form git-clone-depth

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/git-submodules-config
  take form git-submodules-config

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/image-pull-credentials-type
  take form image-pull-credentials-type

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/logs-config
  take form logs-config

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/non-empty-string
  take form non-empty-string

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-artifacts
  take form project-artifacts

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-artifacts-list
  take form project-artifacts-list

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-cache
  take form project-cache

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-secondary-source-versions
  take form project-secondary-source-versions

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/project-sources
  take form project-sources

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/registry-credential
  take form registry-credential

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/source-auth
  take form source-auth

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/source-type
  take form source-type

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/time-out
  take form time-out

load @nerdbond/snow/amazonaws.com/codebuild/2016-10-06/base/wrapper-boolean
  take form wrapper-boolean

load @nerdbond/snow/base/string
  take form string

form start-build-input, name <StartBuildInput>
  take project-name, name <projectName>
    like non-empty-string
    note <The name of the CodeBuild build project to start running a build.>
  take secondary-sources-override, name <secondarySourcesOverride>
    like project-sources
    void take
    note <An array of `ProjectSource` objects.>
  take secondary-sources-version-override, name <secondarySourcesVersionOverride>
    like project-secondary-source-versions
    void take
    note <An array of `ProjectSourceVersion` objects that specify one or more versions of the project's secondary sources to be used for this build only.>
  take source-version, name <sourceVersion>
    like string
    void take
    note <The version of the build input to be built, for this build only. If not specified, the latest version is used. If specified, the contents depends on the source provider:

CodeCommit

The commit ID, branch, or Git tag to use.

GitHub

The commit ID, pull request ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a pull request ID is specified, it must use the format `pr/pull-request-ID` (for example `pr/25`). If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.

Bitbucket

The commit ID, branch name, or tag name that corresponds to the version of the source code you want to build. If a branch name is specified, the branch's HEAD commit ID is used. If not specified, the default branch's HEAD commit ID is used.

Amazon S3

The version ID of the object that represents the build input ZIP file to use.

If `sourceVersion` is specified at the project level, then this `sourceVersion` (at the build level) takes precedence.

For more information, see [Source Version Sample with CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/sample-source-version.html) in the _CodeBuild User Guide_.>
  take artifacts-override, name <artifactsOverride>
    like project-artifacts
    void take
    note <Build output artifact settings that override, for this build only, the latest ones already defined in the build project.>
  take secondary-artifacts-override, name <secondaryArtifactsOverride>
    like project-artifacts-list
    void take
    note <An array of `ProjectArtifacts` objects.>
  take environment-variables-override, name <environmentVariablesOverride>
    like environment-variables
    void take
    note <A set of environment variables that overrides, for this build only, the latest ones already defined in the build project.>
  take source-type-override, name <sourceTypeOverride>
    like source-type
    void take
    note <A source input type, for this build, that overrides the source input defined in the build project.>
  take source-location-override, name <sourceLocationOverride>
    like string
    void take
    note <A location that overrides, for this build, the source location for the one defined in the build project.>
  take source-auth-override, name <sourceAuthOverride>
    like source-auth
    void take
    note <An authorization type for this build that overrides the one defined in the build project. This override applies only if the build project's source is BitBucket or GitHub.>
  take git-clone-depth-override, name <gitCloneDepthOverride>
    like git-clone-depth
    void take
    note <The user-defined depth of history, with a minimum value of 0, that overrides, for this build only, any previous depth of history defined in the build project.>
  take git-submodules-config-override, name <gitSubmodulesConfigOverride>
    like git-submodules-config
    void take
    note <Information about the Git submodules configuration for this build of an CodeBuild build project.>
  take buildspec-override, name <buildspecOverride>
    like string
    void take
    note <A buildspec file declaration that overrides, for this build only, the latest one already defined in the build project.

If this value is set, it can be either an inline buildspec definition, the path to an alternate buildspec file relative to the value of the built-in `CODEBUILD_SRC_DIR` environment variable, or the path to an S3 bucket. The bucket must be in the same Amazon Web Services Region as the build project. Specify the buildspec file using its ARN (for example, `arn:aws:s3:::my-codebuild-sample2/buildspec.yml`). If this value is not provided or is set to an empty string, the source code must contain a buildspec file in its root directory. For more information, see [Buildspec File Name and Storage Location](https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html#build-spec-ref-name-storage).>
  take insecure-ssl-override, name <insecureSslOverride>
    like wrapper-boolean
    void take
    note <Enable this flag to override the insecure SSL setting that is specified in the build project. The insecure SSL setting determines whether to ignore SSL warnings while connecting to the project source code. This override applies only if the build's source is GitHub Enterprise.>
  take report-build-status-override, name <reportBuildStatusOverride>
    like wrapper-boolean
    void take
    note <Set to true to report to your source provider the status of a build's start and completion. If you use this option with a source provider other than GitHub, GitHub Enterprise, or Bitbucket, an `invalidInputException` is thrown.

To be able to report the build status to the source provider, the user associated with the source provider must have write access to the repo. If the user does not have write access, the build status cannot be updated. For more information, see [Source provider access](https://docs.aws.amazon.com/codebuild/latest/userguide/access-tokens.html) in the _CodeBuild User Guide_.

The status of a build triggered by a webhook is always reported to your source provider.>
  take build-status-config-override, name <buildStatusConfigOverride>
    like build-status-config
    void take
    note <Contains information that defines how the build project reports the build status to the source provider. This option is only used when the source provider is `GITHUB`, `GITHUB_ENTERPRISE`, or `BITBUCKET`.>
  take environment-type-override, name <environmentTypeOverride>
    like environment-type
    void take
    note <A container type for this build that overrides the one specified in the build project.>
  take image-override, name <imageOverride>
    like non-empty-string
    void take
    note <The name of an image for this build that overrides the one specified in the build project.>
  take compute-type-override, name <computeTypeOverride>
    like compute-type
    void take
    note <The name of a compute type for this build that overrides the one specified in the build project.>
  take certificate-override, name <certificateOverride>
    like string
    void take
    note <The name of a certificate for this build that overrides the one specified in the build project.>
  take cache-override, name <cacheOverride>
    like project-cache
    void take
    note <A ProjectCache object specified for this build that overrides the one defined in the build project.>
  take service-role-override, name <serviceRoleOverride>
    like non-empty-string
    void take
    note <The name of a service role for this build that overrides the one specified in the build project.>
  take privileged-mode-override, name <privilegedModeOverride>
    like wrapper-boolean
    void take
    note <Enable this flag to override privileged mode in the build project.>
  take timeout-in-minutes-override, name <timeoutInMinutesOverride>
    like time-out
    void take
    note <The number of build timeout minutes, from 5 to 480 (8 hours), that overrides, for this build only, the latest setting already defined in the build project.>
  take queued-timeout-in-minutes-override, name <queuedTimeoutInMinutesOverride>
    like time-out
    void take
    note <The number of minutes a build is allowed to be queued before it times out.>
  take encryption-key-override, name <encryptionKeyOverride>
    like non-empty-string
    void take
    note <The Key Management Service customer master key (CMK) that overrides the one specified in the build project. The CMK key encrypts the build output artifacts.

You can use a cross-account KMS key to encrypt the build output artifacts if your service role has permission to that key.

You can specify either the Amazon Resource Name (ARN) of the CMK or, if available, the CMK's alias (using the format `alias/&lt;alias-name&gt;`).>
  take logs-config-override, name <logsConfigOverride>
    like logs-config
    void take
    note <Log settings for this build that override the log settings defined in the build project.>
  take registry-credential-override, name <registryCredentialOverride>
    like registry-credential
    void take
    note <The credentials for access to a private registry.>
  take image-pull-credentials-type-override, name <imagePullCredentialsTypeOverride>
    like image-pull-credentials-type
    void take
    note <The type of credentials CodeBuild uses to pull images in your build. There are two valid values:

CODEBUILD

Specifies that CodeBuild uses its own credentials. This requires that you modify your ECR repository policy to trust CodeBuild's service principal.

SERVICE_ROLE

Specifies that CodeBuild uses your build project's service role.

When using a cross-account or private registry image, you must use `SERVICE_ROLE` credentials. When using an CodeBuild curated image, you must use `CODEBUILD` credentials.>
  take debug-session-enabled, name <debugSessionEnabled>
    like wrapper-boolean
    void take
    note <Specifies if session debugging is enabled for this build. For more information, see [Viewing a running build in Session Manager](https://docs.aws.amazon.com/codebuild/latest/userguide/session-manager.html).>