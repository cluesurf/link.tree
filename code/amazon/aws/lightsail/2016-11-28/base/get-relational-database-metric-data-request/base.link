
load @drumwork/snow/amazonaws.com/lightsail/2016-11-28/base/iso-date
  take form iso-date

load @drumwork/snow/amazonaws.com/lightsail/2016-11-28/base/metric-period
  take form metric-period

load @drumwork/snow/amazonaws.com/lightsail/2016-11-28/base/metric-statistic-list
  take form metric-statistic-list

load @drumwork/snow/amazonaws.com/lightsail/2016-11-28/base/metric-unit
  take form metric-unit

load @drumwork/snow/amazonaws.com/lightsail/2016-11-28/base/relational-database-metric-name
  take form relational-database-metric-name

load @drumwork/snow/amazonaws.com/lightsail/2016-11-28/base/resource-name
  take form resource-name

form get-relational-database-metric-data-request, name <GetRelationalDatabaseMetricDataRequest>
  take relational-database-name, name <relationalDatabaseName>
    like resource-name
    note <The name of your database from which to get metric data.>
  take metric-name, name <metricName>
    like relational-database-metric-name
    note <The metric for which you want to return information.

Valid relational database metric names are listed below, along with the most useful `statistics` to include in your request, and the published `unit` value. All relational database metric data is available in 1-minute (60 seconds) granularity.

- **`CPUUtilization`** - The percentage of CPU utilization currently in use on the database.

  `Statistics`: The most useful statistics are `Maximum` and `Average`.

  `Unit`: The published unit is `Percent`.

- **`DatabaseConnections`** - The number of database connections in use.

  `Statistics`: The most useful statistics are `Maximum` and `Sum`.

  `Unit`: The published unit is `Count`.

- **`DiskQueueDepth`** - The number of outstanding IOs (read/write requests) that are waiting to access the disk.

  `Statistics`: The most useful statistic is `Sum`.

  `Unit`: The published unit is `Count`.

- **`FreeStorageSpace`** - The amount of available storage space.

  `Statistics`: The most useful statistic is `Sum`.

  `Unit`: The published unit is `Bytes`.

- **`NetworkReceiveThroughput`** - The incoming (Receive) network traffic on the database, including both customer database traffic and AWS traffic used for monitoring and replication.

  `Statistics`: The most useful statistic is `Average`.

  `Unit`: The published unit is `Bytes/Second`.

- **`NetworkTransmitThroughput`** - The outgoing (Transmit) network traffic on the database, including both customer database traffic and AWS traffic used for monitoring and replication.

  `Statistics`: The most useful statistic is `Average`.

  `Unit`: The published unit is `Bytes/Second`.>
  take period, name <period>
    like metric-period
    note <The granularity, in seconds, of the returned data points.

All relational database metric data is available in 1-minute (60 seconds) granularity.>
  take start-time, name <startTime>
    like iso-date
    note <The start of the time interval from which to get metric data.

Constraints:

- Specified in Coordinated Universal Time (UTC).

- Specified in the Unix time format.

  For example, if you wish to use a start time of October 1, 2018, at 8 PM UTC, then you input `1538424000` as the start time.>
  take end-time, name <endTime>
    like iso-date
    note <The end of the time interval from which to get metric data.

Constraints:

- Specified in Coordinated Universal Time (UTC).

- Specified in the Unix time format.

  For example, if you wish to use an end time of October 1, 2018, at 8 PM UTC, then you input `1538424000` as the end time.>
  take unit, name <unit>
    like metric-unit
    note <The unit for the metric data request. Valid units depend on the metric data being requested. For the valid units with each available metric, see the `metricName` parameter.>
  take statistics, name <statistics>
    like metric-statistic-list
    note <The statistic for the metric.

The following statistics are available:

- `Minimum` - The lowest value observed during the specified period. Use this value to determine low volumes of activity for your application.

- `Maximum` - The highest value observed during the specified period. Use this value to determine high volumes of activity for your application.

- `Sum` - All values submitted for the matching metric added together. You can use this statistic to determine the total volume of a metric.

- `Average` - The value of Sum / SampleCount during the specified period. By comparing this statistic with the Minimum and Maximum values, you can determine the full scope of a metric and how close the average use is to the Minimum and Maximum values. This comparison helps you to know when to increase or decrease your resources.

- `SampleCount` - The count, or number, of data points used for the statistical calculation.>