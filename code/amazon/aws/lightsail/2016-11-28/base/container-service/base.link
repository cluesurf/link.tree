
load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/container-service-deployment
  take form container-service-deployment

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/container-service-name
  take form container-service-name

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/container-service-power-name
  take form container-service-power-name

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/container-service-public-domains
  take form container-service-public-domains

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/container-service-scale
  take form container-service-scale

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/container-service-state
  take form container-service-state

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/container-service-state-detail
  take form container-service-state-detail

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/iso-date
  take form iso-date

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/non-empty-string
  take form non-empty-string

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/resource-location
  take form resource-location

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/resource-type
  take form resource-type

load @nerdbond/snow/amazonaws.com/lightsail/2016-11-28/base/tag-list
  take form tag-list

load @nerdbond/snow/base/boolean
  take form boolean

load @nerdbond/snow/base/string
  take form string

form container-service, name <ContainerService>
  note <Describes an Amazon Lightsail container service.>
  take container-service-name, name <containerServiceName>
    like container-service-name
    void take
    note <The name of the container service.>
  take arn, name <arn>
    like non-empty-string
    void take
    note <The Amazon Resource Name (ARN) of the container service.>
  take created-at, name <createdAt>
    like iso-date
    void take
    note <The timestamp when the container service was created.>
  take location, name <location>
    like resource-location
    void take
    note <An object that describes the location of the container service, such as the AWS Region and Availability Zone.>
  take resource-type, name <resourceType>
    like resource-type
    void take
    note <The Lightsail resource type of the container service (i.e., `ContainerService`).>
  take tags, name <tags>
    like tag-list
    void take
    note <The tag keys and optional values for the resource. For more information about tags in Lightsail, see the [Amazon Lightsail Developer Guide](https://lightsail.aws.amazon.com/ls/docs/en_us/articles/amazon-lightsail-tags).>
  take power, name <power>
    like container-service-power-name
    void take
    note <The power specification of the container service.

The power specifies the amount of RAM, the number of vCPUs, and the base price of the container service.>
  take power-id, name <powerId>
    like string
    void take
    note <The ID of the power of the container service.>
  take state, name <state>
    like container-service-state
    void take
    note <The current state of the container service.

The following container service states are possible:

- `PENDING` - The container service is being created.

- `READY` - The container service is running but it does not have an active container deployment.

- `DEPLOYING` - The container service is launching a container deployment.

- `RUNNING` - The container service is running and it has an active container deployment.

- `UPDATING` - The container service capacity or its custom domains are being updated.

- `DELETING` - The container service is being deleted.

- `DISABLED` - The container service is disabled, and its active deployment and containers, if any, are shut down.>
  take state-detail, name <stateDetail>
    like container-service-state-detail
    void take
    note <An object that describes the current state of the container service.

The state detail is populated only when a container service is in a `PENDING`, `DEPLOYING`, or `UPDATING` state.>
  take scale, name <scale>
    like container-service-scale
    void take
    note <The scale specification of the container service.

The scale specifies the allocated compute nodes of the container service.>
  take current-deployment, name <currentDeployment>
    like container-service-deployment
    void take
    note <An object that describes the current container deployment of the container service.>
  take next-deployment, name <nextDeployment>
    like container-service-deployment
    void take
    note <An object that describes the next deployment of the container service.

This value is `null` when there is no deployment in a `pending` state.>
  take is-disabled, name <isDisabled>
    like boolean
    void take
    note <A Boolean value indicating whether the container service is disabled.>
  take principal-arn, name <principalArn>
    like string
    void take
    note <The principal ARN of the container service.

The principal ARN can be used to create a trust relationship between your standard AWS account and your Lightsail container service. This allows you to give your service permission to access resources in your standard AWS account.>
  take private-domain-name, name <privateDomainName>
    like string
    void take
    note <The private domain name of the container service.

The private domain name is accessible only by other resources within the default virtual private cloud (VPC) of your Lightsail account.>
  take public-domain-names, name <publicDomainNames>
    like container-service-public-domains
    void take
    note <The public domain name of the container service, such as `example.com` and `www.example.com`.

You can specify up to four public domain names for a container service. The domain names that you specify are used when you create a deployment with a container configured as the public endpoint of your container service.

If you don't specify public domain names, then you can use the default domain of the container service.

You must create and validate an SSL/TLS certificate before you can use public domain names with your container service. Use the `CreateCertificate` action to create a certificate for the public domain names you want to use with your container service.

See `CreateContainerService` or `UpdateContainerService` for information about how to specify public domain names for your Lightsail container service.>
  take url, name <url>
    like string
    void take
    note <The publicly accessible URL of the container service.

If no public endpoint is specified in the `currentDeployment`, this URL returns a 404 response.>