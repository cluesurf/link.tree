
load @treesurf/snow/amazonaws.com/lightsail/2016-11-28/base/cookie-object
  take form cookie-object

load @treesurf/snow/amazonaws.com/lightsail/2016-11-28/base/header-object
  take form header-object

load @treesurf/snow/amazonaws.com/lightsail/2016-11-28/base/long
  take form long

load @treesurf/snow/amazonaws.com/lightsail/2016-11-28/base/non-empty-string
  take form non-empty-string

load @treesurf/snow/amazonaws.com/lightsail/2016-11-28/base/query-string-object
  take form query-string-object

form cache-settings, name <CacheSettings>
  note <Describes the cache settings of an Amazon Lightsail content delivery network (CDN) distribution.

These settings apply only to your distribution's `cacheBehaviors` (including the `defaultCacheBehavior`) that have a `behavior` of `cache`.>
  take default-ttl, name <defaultTTL>
    like long
    void take
    note <The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.

The value specified applies only when the origin does not add HTTP headers such as `Cache-Control max-age`, `Cache-Control s-maxage`, and `Expires` to objects.>
  take minimum-ttl, name <minimumTTL>
    like long
    void take
    note <The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.

A value of `0` must be specified for `minimumTTL` if the distribution is configured to forward all headers to the origin.>
  take maximum-ttl, name <maximumTTL>
    like long
    void take
    note <The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.

The value specified applies only when the origin adds HTTP headers such as `Cache-Control max-age`, `Cache-Control s-maxage`, and `Expires` to objects.>
  take allowed-http-methods, name <allowedHTTPMethods>
    like non-empty-string
    void take
    note <The HTTP methods that are processed and forwarded to the distribution's origin.

You can specify the following options:

- `GET,HEAD` - The distribution forwards the `GET` and `HEAD` methods.

- `GET,HEAD,OPTIONS` - The distribution forwards the `GET`, `HEAD`, and `OPTIONS` methods.

- `GET,HEAD,OPTIONS,PUT,PATCH,POST,DELETE` - The distribution forwards the `GET`, `HEAD`, `OPTIONS`, `PUT`, `PATCH`, `POST`, and `DELETE` methods.

If you specify the third option, you might need to restrict access to your distribution's origin so users can't perform operations that you don't want them to. For example, you might not want users to have permission to delete objects from your origin.>
  take cached-http-methods, name <cachedHTTPMethods>
    like non-empty-string
    void take
    note <The HTTP method responses that are cached by your distribution.

You can specify the following options:

- `GET,HEAD` - The distribution caches responses to the `GET` and `HEAD` methods.

- `GET,HEAD,OPTIONS` - The distribution caches responses to the `GET`, `HEAD`, and `OPTIONS` methods.>
  take forwarded-cookies, name <forwardedCookies>
    like cookie-object
    void take
    note <An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded.>
  take forwarded-headers, name <forwardedHeaders>
    like header-object
    void take
    note <An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded.>
  take forwarded-query-strings, name <forwardedQueryStrings>
    like query-string-object
    void take
    note <An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded.>