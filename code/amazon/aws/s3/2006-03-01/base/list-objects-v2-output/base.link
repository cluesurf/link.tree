
load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/bucket-name
  take form bucket-name

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/common-prefix-list
  take form common-prefix-list

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/delimiter
  take form delimiter

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/encoding-type
  take form encoding-type

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/is-truncated
  take form is-truncated

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/key-count
  take form key-count

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/max-keys
  take form max-keys

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/next-token
  take form next-token

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/object-list
  take form object-list

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/prefix
  take form prefix

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/start-after
  take form start-after

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/token
  take form token

form list-objects-v2-output, name <ListObjectsV2Output>
  take is-truncated, name <IsTruncated>
    like is-truncated
    void take
    note <Set to false if all of the results were returned. Set to true if more keys are available to return. If the number of results exceeds that specified by MaxKeys, all of the results might not be returned.>
  take contents, name <Contents>
    like object-list
    void take
    note <Metadata about each object returned.>
  take name, name <Name>
    like bucket-name
    void take
    note <The bucket name.

When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form _AccessPointName_-_AccountId_.s3-accesspoint._Region_.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see [Using access points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html) in the _Amazon S3 User Guide_.

When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form _AccessPointName_-_AccountId_._outpostID_.s3-outposts._Region_.amazonaws.com. When using this action using S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see [Using S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html) in the _Amazon S3 User Guide_.>
  take prefix, name <Prefix>
    like prefix
    void take
    note <Keys that begin with the indicated prefix.>
  take delimiter, name <Delimiter>
    like delimiter
    void take
    note <Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the CommonPrefixes collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the `MaxKeys` value.>
  take max-keys, name <MaxKeys>
    like max-keys
    void take
    note <Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more.>
  take common-prefixes, name <CommonPrefixes>
    like common-prefix-list
    void take
    note <All of the keys (up to 1,000) rolled up into a common prefix count as a single return when calculating the number of returns.

A response can contain `CommonPrefixes` only if you specify a delimiter.

`CommonPrefixes` contains all (if there are any) keys between `Prefix` and the next occurrence of the string specified by a delimiter.

`CommonPrefixes` lists keys that act like subdirectories in the directory specified by `Prefix`.

For example, if the prefix is `notes/` and the delimiter is a slash (`/`) as in `notes/summer/july`, the common prefix is `notes/summer/`. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns.>
  take encoding-type, name <EncodingType>
    like encoding-type
    void take
    note <Encoding type used by Amazon S3 to encode object key names in the XML response.

If you specify the encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:

`Delimiter, Prefix, Key,` and `StartAfter`.>
  take key-count, name <KeyCount>
    like key-count
    void take
    note <KeyCount is the number of keys returned with this request. KeyCount will always be less than or equals to MaxKeys field. Say you ask for 50 keys, your result will include less than equals 50 keys>
  take continuation-token, name <ContinuationToken>
    like token
    void take
    note <If ContinuationToken was sent with the request, it is included in the response.>
  take next-continuation-token, name <NextContinuationToken>
    like next-token
    void take
    note <`NextContinuationToken` is sent when `isTruncated` is true, which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this `NextContinuationToken`. `NextContinuationToken` is obfuscated and is not a real key>
  take start-after, name <StartAfter>
    like start-after
    void take
    note <If StartAfter was sent with the request, it is included in the response.>