
load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/bucket-name
  take form bucket-name

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/common-prefix-list
  take form common-prefix-list

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/delete-markers
  take form delete-markers

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/delimiter
  take form delimiter

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/encoding-type
  take form encoding-type

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/is-truncated
  take form is-truncated

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/key-marker
  take form key-marker

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/max-keys
  take form max-keys

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/next-key-marker
  take form next-key-marker

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/next-version-id-marker
  take form next-version-id-marker

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/object-version-list
  take form object-version-list

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/prefix
  take form prefix

load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/version-id-marker
  take form version-id-marker

form list-object-versions-output, name <ListObjectVersionsOutput>
  take is-truncated, name <IsTruncated>
    like is-truncated
    void take
    note <A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results.>
  take key-marker, name <KeyMarker>
    like key-marker
    void take
    note <Marks the last key returned in a truncated response.>
  take version-id-marker, name <VersionIdMarker>
    like version-id-marker
    void take
    note <Marks the last version of the key returned in a truncated response.>
  take next-key-marker, name <NextKeyMarker>
    like next-key-marker
    void take
    note <When the number of responses exceeds the value of `MaxKeys`, `NextKeyMarker` specifies the first key not returned that satisfies the search criteria. Use this value for the key-marker request parameter in a subsequent request.>
  take next-version-id-marker, name <NextVersionIdMarker>
    like next-version-id-marker
    void take
    note <When the number of responses exceeds the value of `MaxKeys`, `NextVersionIdMarker` specifies the first object version not returned that satisfies the search criteria. Use this value for the version-id-marker request parameter in a subsequent request.>
  take versions, name <Versions>
    like object-version-list
    void take
    note <Container for version information.>
    host xml
      host name, text <Version>
  take delete-markers, name <DeleteMarkers>
    like delete-markers
    void take
    note <Container for an object that is a delete marker.>
    host xml
      host name, text <DeleteMarker>
  take name, name <Name>
    like bucket-name
    void take
    note <The bucket name.>
  take prefix, name <Prefix>
    like prefix
    void take
    note <Selects objects that start with the value supplied by this parameter.>
  take delimiter, name <Delimiter>
    like delimiter
    void take
    note <The delimiter grouping the included keys. A delimiter is a character that you specify to group keys. All keys that contain the same string between the prefix and the first occurrence of the delimiter are grouped under a single result element in `CommonPrefixes`. These groups are counted as one result against the max-keys limitation. These keys are not returned elsewhere in the response.>
  take max-keys, name <MaxKeys>
    like max-keys
    void take
    note <Specifies the maximum number of objects to return.>
  take common-prefixes, name <CommonPrefixes>
    like common-prefix-list
    void take
    note <All of the keys rolled up into a common prefix count as a single return when calculating the number of returns.>
  take encoding-type, name <EncodingType>
    like encoding-type
    void take
    note <Encoding type used by Amazon S3 to encode object key names in the XML response.

If you specify encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:

`KeyMarker, NextKeyMarker, Prefix, Key`, and `Delimiter`.>