
load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/bucket-name
  take form bucket-name

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/common-prefix-list
  take form common-prefix-list

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/delimiter
  take form delimiter

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/encoding-type
  take form encoding-type

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/is-truncated
  take form is-truncated

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/marker
  take form marker

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/max-keys
  take form max-keys

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/next-marker
  take form next-marker

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/object-list
  take form object-list

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/prefix
  take form prefix

form list-objects-output, name <ListObjectsOutput>
  take is-truncated, name <IsTruncated>
    like is-truncated
    void take
    note <A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria.>
  take marker, name <Marker>
    like marker
    void take
    note <Indicates where in the bucket listing begins. Marker is included in the response if it was sent with the request.>
  take next-marker, name <NextMarker>
    like next-marker
    void take
    note <When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMarker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys.>
  take contents, name <Contents>
    like object-list
    void take
    note <Metadata about each object returned.>
  take name, name <Name>
    like bucket-name
    void take
    note <The bucket name.>
  take prefix, name <Prefix>
    like prefix
    void take
    note <Keys that begin with the indicated prefix.>
  take delimiter, name <Delimiter>
    like delimiter
    void take
    note <Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the `CommonPrefixes` collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the `MaxKeys` value.>
  take max-keys, name <MaxKeys>
    like max-keys
    void take
    note <The maximum number of keys returned in the response body.>
  take common-prefixes, name <CommonPrefixes>
    like common-prefix-list
    void take
    note <All of the keys (up to 1,000) rolled up in a common prefix count as a single return when calculating the number of returns.

A response can contain CommonPrefixes only if you specify a delimiter.

CommonPrefixes contains all (if there are any) keys between Prefix and the next occurrence of the string specified by the delimiter.

CommonPrefixes lists keys that act like subdirectories in the directory specified by Prefix.

For example, if the prefix is notes/ and the delimiter is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns.>
  take encoding-type, name <EncodingType>
    like encoding-type
    void take
    note <Encoding type used by Amazon S3 to encode object keys in the response.>