
load @wavebond/snow/base/native-boolean
  take form native-boolean

load @wavebond/snow/base/native-string
  take form native-string

boot delete-bucket-website, name <DeleteBucketWebsite>
  deed delete
  note <This action removes the website configuration for a bucket. Amazon S3 returns a `200 OK` response upon successfully deleting a website configuration on the specified bucket. You will get a `200 OK` response if the website configuration you are trying to delete does not exist on the bucket. Amazon S3 returns a `404` response if the bucket specified in the request does not exist.

This DELETE action requires the `S3:DeleteBucketWebsite` permission. By default, only the bucket owner can delete the website configuration attached to a bucket. However, bucket owners can grant other users permission to delete the website configuration by writing a bucket policy granting them the `S3:DeleteBucketWebsite` permission.

For more information about hosting websites, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).

The following operations are related to `DeleteBucketWebsite`:

- [GetBucketWebsite](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html)

- [PutBucketWebsite](https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html)>

  take bucket
    like native-string
    note <The bucket name for which you want to remove the website configuration.>
  take x-amz-expected-bucket-owner
    like native-string
    note <The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP `403 (Access Denied)` error.>
    void take
  take website
    like native-boolean

  line </{bucket}#website>

  hint <x-amz-expected-bucket-owner>, loan x-amz-expected-bucket-owner

  find <website>, loan website

  loot 204
    note <Success>