
load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/put-bucket-lifecycle-configuration-body
  take form put-bucket-lifecycle-configuration-body

load @nerdbond/snow/base/native-boolean
  take form native-boolean

load @nerdbond/snow/base/native-string
  take form native-string

boot put-bucket-lifecycle-configuration, name <PutBucketLifecycleConfiguration>
  deed put
  note <Creates a new lifecycle configuration for the bucket or replaces an existing lifecycle configuration. For information about lifecycle configuration, see [Managing your storage lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html).

Bucket lifecycle configuration now supports specifying a lifecycle rule using an object key name prefix, one or more object tags, or a combination of both. Accordingly, this section describes the latest API. The previous version of the API supported filtering based only on an object key name prefix, which is supported for backward compatibility. For the related API description, see [PutBucketLifecycle](https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html).

**Rules** You specify the lifecycle configuration in your request body. The lifecycle configuration is specified as XML consisting of one or more rules. Each rule consists of the following:

- Filter identifying a subset of objects to which the rule applies. The filter can be based on a key name prefix, object tags, or a combination of both.

- Status whether the rule is in effect.

- One or more lifecycle transition and expiration actions that you want Amazon S3 to perform on the objects identified by the filter. If the state of your bucket is versioning-enabled or versioning-suspended, you can have many versions of the same object (one current version and zero or more noncurrent versions). Amazon S3 provides predefined actions that you can specify for current and noncurrent object versions.

For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) and [Lifecycle Configuration Elements](https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html).

**Permissions** By default, all Amazon S3 resources are private, including buckets, objects, and related subresources (for example, lifecycle configuration and website configuration). Only the resource owner (that is, the Amazon Web Services account that created it) can access the resource. The resource owner can optionally grant access permissions to others by writing an access policy. For this operation, a user must get the s3:PutLifecycleConfiguration permission.

You can also explicitly deny permissions. Explicit deny also supersedes any other permissions. If you want to block users or accounts from removing or deleting objects from your bucket, you must deny them permissions for the following actions:

- s3:DeleteObject

- s3:DeleteObjectVersion

- s3:PutLifecycleConfiguration

For more information about permissions, see [Managing Access Permissions to Your Amazon S3 Resources](https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html).

The following are related to `PutBucketLifecycleConfiguration`:

- [Examples of Lifecycle Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-configuration-examples.html)

- [GetBucketLifecycleConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html)

- [DeleteBucketLifecycle](https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html)>

  take bucket
    like native-string
    note <The name of the bucket for which to set the configuration.>
  take x-amz-expected-bucket-owner
    like native-string
    note <The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP `403 (Access Denied)` error.>
    void take
  take lifecycle
    like native-boolean
  take put-bucket-lifecycle-configuration-body, like put-bucket-lifecycle-configuration-body

  line </{bucket}#lifecycle>

  hint <x-amz-expected-bucket-owner>, loan x-amz-expected-bucket-owner

  find <lifecycle>, loan lifecycle

  seed xml, loan put-bucket-lifecycle-configuration-body

  loot 200
    note <Success>