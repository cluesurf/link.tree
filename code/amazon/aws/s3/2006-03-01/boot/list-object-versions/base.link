
load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/list-object-versions-output
  take form list-object-versions-output

load @nerdbond/snow/base/native-boolean
  take form native-boolean

load @nerdbond/snow/base/native-integer
  take form native-integer

load @nerdbond/snow/base/native-string
  take form native-string

boot list-object-versions, name <ListObjectVersions>
  deed get
  note <Returns metadata about all versions of the objects in a bucket. You can also use request parameters as selection criteria to return metadata about a subset of all the object versions.

To use this operation, you must have permissions to perform the `s3:ListBucketVersions` action. Be aware of the name difference.

A 200 OK response can contain valid or invalid XML. Make sure to design your application to parse the contents of the response and handle it appropriately.

To use this operation, you must have READ access to the bucket.

This action is not supported by Amazon S3 on Outposts.

The following operations are related to `ListObjectVersions`:

- [ListObjectsV2](https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html)

- [GetObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html)

- [PutObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html)

- [DeleteObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html)>

  take bucket
    like native-string
    note <The bucket name that contains the objects.>
  take x-amz-expected-bucket-owner
    like native-string
    note <The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP `403 (Access Denied)` error.>
    void take
  take delimiter
    like native-string
    note <A delimiter is a character that you specify to group keys. All keys that contain the same string between the `prefix` and the first occurrence of the delimiter are grouped under a single result element in CommonPrefixes. These groups are counted as one result against the max-keys limitation. These keys are not returned elsewhere in the response.>
    void take
  take encoding-type
    like native-string
    void take
  take key-marker
    like native-string
    note <Specifies the key to start with when listing objects in a bucket.>
    void take
  take max-keys
    like native-integer
    note <Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more. If additional keys satisfy the search criteria, but were not returned because max-keys was exceeded, the response contains &lt;isTruncated&gt;true&lt;/isTruncated&gt;. To return the additional keys, see key-marker and version-id-marker.>
    void take
  take prefix
    like native-string
    note <Use this parameter to select only those keys that begin with the specified prefix. You can use prefixes to separate a bucket into different groupings of keys. (You can think of using prefix to make groups in the same way you'd use a folder in a file system.) You can use prefix with delimiter to roll up numerous objects into a single result under CommonPrefixes.>
    void take
  take version-id-marker
    like native-string
    note <Specifies the object version you want to start listing from.>
    void take
  take max-keys
    like native-string
    note <Pagination limit>
    void take
  take key-marker
    like native-string
    note <Pagination token>
    void take
  take version-id-marker
    like native-string
    note <Pagination token>
    void take
  take versions
    like native-boolean

  line </{bucket}#versions>

  hint <x-amz-expected-bucket-owner>, loan x-amz-expected-bucket-owner

  find <delimiter>, loan delimiter
  find <encoding-type>, loan encoding-type
  find <key-marker>, loan key-marker
  find <max-keys>, loan max-keys
  find <prefix>, loan prefix
  find <version-id-marker>, loan version-id-marker
  find <MaxKeys>, loan max-keys
  find <KeyMarker>, loan key-marker
  find <VersionIdMarker>, loan version-id-marker
  find <versions>, loan versions

  loot 200
    seed xml, like list-object-versions-output
    note <Success>