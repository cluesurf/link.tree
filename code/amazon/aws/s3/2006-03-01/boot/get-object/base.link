
load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/get-object-output
  take form get-object-output

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/invalid-object-state
  take form invalid-object-state

load @nerdbond/snow/amazonaws.com/s3/2006-03-01/base/no-such-key
  take form no-such-key

load @nerdbond/snow/base/native-integer
  take form native-integer

load @nerdbond/snow/base/native-string
  take form native-string

boot get-object, name <GetObject>
  deed get
  note <Retrieves objects from Amazon S3. To use `GET`, you must have `READ` access to the object. If you grant `READ` access to the anonymous user, you can return the object without using an authorization header.

An Amazon S3 bucket has no directory hierarchy such as you would find in a typical computer file system. You can, however, create a logical hierarchy by using object key names that imply a folder structure. For example, instead of naming an object `sample.jpg`, you can name it `photos/2006/February/sample.jpg`.

To get an object from such a logical hierarchy, specify the full key name for the object in the `GET` operation. For a virtual hosted-style request example, if you have the object `photos/2006/February/sample.jpg`, specify the resource as `/photos/2006/February/sample.jpg`. For a path-style request example, if you have the object `photos/2006/February/sample.jpg` in the bucket named `examplebucket`, specify the resource as `/examplebucket/photos/2006/February/sample.jpg`. For more information about request types, see [HTTP Host Header Bucket Specification](https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingSpecifyBucket).

To distribute large files to many people, you can save bandwidth costs by using BitTorrent. For more information, see [Amazon S3 Torrent](https://docs.aws.amazon.com/AmazonS3/latest/dev/S3Torrent.html). For more information about returning the ACL of an object, see [GetObjectAcl](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html).

If the object you are retrieving is stored in the S3 Glacier or S3 Glacier Deep Archive storage class, or S3 Intelligent-Tiering Archive or S3 Intelligent-Tiering Deep Archive tiers, before you can retrieve the object you must first restore a copy using [RestoreObject](https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html). Otherwise, this action returns an `InvalidObjectStateError` error. For information about restoring archived objects, see [Restoring Archived Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html).

Encryption request headers, like `x-amz-server-side-encryption`, should not be sent for GET requests if your object uses server-side encryption with KMS keys (SSE-KMS) or server-side encryption with Amazon S3-managed encryption keys (SSE-S3). If your object does use these types of keys, you’ll get an HTTP 400 BadRequest error.

If you encrypt an object by using server-side encryption with customer-provided encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object, you must use the following headers:

- x-amz-server-side-encryption-customer-algorithm

- x-amz-server-side-encryption-customer-key

- x-amz-server-side-encryption-customer-key-MD5

For more information about SSE-C, see [Server-Side Encryption (Using Customer-Provided Encryption Keys)](https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html).

Assuming you have the relevant permission to read object tags, the response also returns the `x-amz-tagging-count` header that provides the count of number of tags associated with the object. You can use [GetObjectTagging](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html) to retrieve the tag set associated with an object.

**Permissions** You need the relevant read object (or version) permission for this operation. For more information, see [Specifying Permissions in a Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html). If the object you request does not exist, the error Amazon S3 returns depends on whether you also have the `s3:ListBucket` permission.

- If you have the `s3:ListBucket` permission on the bucket, Amazon S3 will return an HTTP status code 404 ("no such key") error.

- If you don’t have the `s3:ListBucket` permission, Amazon S3 will return an HTTP status code 403 ("access denied") error.

**Versioning** By default, the GET action returns the current version of an object. To return a different version, use the `versionId` subresource.

- You need the `s3:GetObjectVersion` permission to access a specific version of an object.

- If the current version of the object is a delete marker, Amazon S3 behaves as if the object was deleted and includes `x-amz-delete-marker: true` in the response.

For more information about versioning, see [PutBucketVersioning](https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html).

**Overriding Response Header Values** There are times when you want to override certain response header values in a GET response. For example, you might override the Content-Disposition response header value in your GET request.

You can override values for a set of response headers using the following query parameters. These response header values are sent only on a successful request, that is, when status code 200 OK is returned. The set of headers you can override using these parameters is a subset of the headers that Amazon S3 accepts when you create an object. The response headers that you can override for the GET response are `Content-Type`, `Content-Language`, `Expires`, `Cache-Control`, `Content-Disposition`, and `Content-Encoding`. To override these header values in the GET response, you use the following request parameters.

You must sign the request, either using an Authorization header or a presigned URL, when using these parameters. They cannot be used with an unsigned (anonymous) request.

- `response-content-type`

- `response-content-language`

- `response-expires`

- `response-cache-control`

- `response-content-disposition`

- `response-content-encoding`

**Additional Considerations about Request Headers** If both of the `If-Match` and `If-Unmodified-Since` headers are present in the request as follows: `If-Match` condition evaluates to `true`, and; `If-Unmodified-Since` condition evaluates to `false`; then, S3 returns 200 OK and the data requested.

If both of the `If-None-Match` and `If-Modified-Since` headers are present in the request as follows: `If-None-Match` condition evaluates to `false`, and; `If-Modified-Since` condition evaluates to `true`; then, S3 returns 304 Not Modified response code.

For more information about conditional requests, see [RFC 7232](https://tools.ietf.org/html/rfc7232).

The following operations are related to `GetObject`:

- [ListBuckets](https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html)

- [GetObjectAcl](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html)>

  take bucket
    like native-string
    note <The bucket name containing the object.

When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form _AccessPointName_-_AccountId_.s3-accesspoint._Region_.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see [Using access points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html) in the _Amazon S3 User Guide_.

When using an Object Lambda access point the hostname takes the form _AccessPointName_-_AccountId_.s3-object-lambda._Region_.amazonaws.com.

When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form _AccessPointName_-_AccountId_._outpostID_.s3-outposts._Region_.amazonaws.com. When using this action using S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see [Using S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html) in the _Amazon S3 User Guide_.>
  take key
    like native-string
    note <Key of the object to get.>
  take if-match
    like native-string
    note <Return the object only if its entity tag (ETag) is the same as the one specified, otherwise return a 412 (precondition failed).>
    void take
  take if-modified-since
    like native-string
    note <Return the object only if it has been modified since the specified time, otherwise return a 304 (not modified).>
    void take
  take if-none-match
    like native-string
    note <Return the object only if its entity tag (ETag) is different from the one specified, otherwise return a 304 (not modified).>
    void take
  take if-unmodified-since
    like native-string
    note <Return the object only if it has not been modified since the specified time, otherwise return a 412 (precondition failed).>
    void take
  take range
    like native-string
    note <Downloads the specified range bytes of an object. For more information about the HTTP Range header, see [https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35](https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35).

Amazon S3 doesn't support retrieving multiple ranges of data per `GET` request.>
    void take
  take x-amz-server-side-encryption-customer-algorithm
    like native-string
    note <Specifies the algorithm to use to when decrypting the object (for example, AES256).>
    void take
  take x-amz-server-side-encryption-customer-key
    like native-string
    note <Specifies the customer-provided encryption key for Amazon S3 used to encrypt the data. This value is used to decrypt the object when recovering it and must match the one used when storing the data. The key must be appropriate for use with the algorithm specified in the `x-amz-server-side-encryption-customer-algorithm` header.>
    void take
  take x-amz-server-side-encryption-customer-key-md5
    like native-string
    note <Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses this header for a message integrity check to ensure that the encryption key was transmitted without error.>
    void take
  take x-amz-request-payer
    like native-string
    void take
  take x-amz-expected-bucket-owner
    like native-string
    note <The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP `403 (Access Denied)` error.>
    void take
  take response-cache-control
    like native-string
    note <Sets the `Cache-Control` header of the response.>
    void take
  take response-content-disposition
    like native-string
    note <Sets the `Content-Disposition` header of the response>
    void take
  take response-content-encoding
    like native-string
    note <Sets the `Content-Encoding` header of the response.>
    void take
  take response-content-language
    like native-string
    note <Sets the `Content-Language` header of the response.>
    void take
  take response-content-type
    like native-string
    note <Sets the `Content-Type` header of the response.>
    void take
  take response-expires
    like native-string
    note <Sets the `Expires` header of the response.>
    void take
  take version-id
    like native-string
    note <VersionId used to reference a specific version of the object.>
    void take
  take part-number
    like native-integer
    note <Part number of the object being read. This is a positive integer between 1 and 10,000. Effectively performs a 'ranged' GET request for the part specified. Useful for downloading just a part of an object.>
    void take

  line </{bucket}/{key}>

  hint <If-Match>, loan if-match
  hint <If-Modified-Since>, loan if-modified-since
  hint <If-None-Match>, loan if-none-match
  hint <If-Unmodified-Since>, loan if-unmodified-since
  hint <Range>, loan range
  hint <x-amz-server-side-encryption-customer-algorithm>, loan x-amz-server-side-encryption-customer-algorithm
  hint <x-amz-server-side-encryption-customer-key>, loan x-amz-server-side-encryption-customer-key
  hint <x-amz-server-side-encryption-customer-key-MD5>, loan x-amz-server-side-encryption-customer-key-md5
  hint <x-amz-request-payer>, loan x-amz-request-payer
  hint <x-amz-expected-bucket-owner>, loan x-amz-expected-bucket-owner

  find <response-cache-control>, loan response-cache-control
  find <response-content-disposition>, loan response-content-disposition
  find <response-content-encoding>, loan response-content-encoding
  find <response-content-language>, loan response-content-language
  find <response-content-type>, loan response-content-type
  find <response-expires>, loan response-expires
  find <versionId>, loan version-id
  find <partNumber>, loan part-number

  loot 200
    seed xml, like get-object-output
    note <Success>
  loot 480
    seed xml, like no-such-key
    note <NoSuchKey>
  loot 481
    seed xml, like invalid-object-state
    note <InvalidObjectState>