
load @drumwork/snow/amazonaws.com/s3/2006-03-01/base/put-bucket-policy-body
  take form put-bucket-policy-body

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-string
  take form native-string

boot put-bucket-policy, name <PutBucketPolicy>
  note <Applies an Amazon S3 bucket policy to an Amazon S3 bucket. If you are using an identity other than the root user of the Amazon Web Services account that owns the bucket, the calling identity must have the `PutBucketPolicy` permissions on the specified bucket and belong to the bucket owner's account in order to use this operation.

If you don't have `PutBucketPolicy` permissions, Amazon S3 returns a `403 Access Denied` error. If you have the correct permissions, but you're not using an identity that belongs to the bucket owner's account, Amazon S3 returns a `405 Method Not Allowed` error.

As a security precaution, the root user of the Amazon Web Services account that owns a bucket can always use this operation, even if the policy explicitly denies the root user the ability to perform this action.

For more information, see [Bucket policy examples](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html).

The following operations are related to `PutBucketPolicy`:

- [CreateBucket](https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html)

- [DeleteBucket](https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html)>

  take bucket
    like native-string
    note <The name of the bucket.>
  take content-md5
    like native-string
    note <The MD5 hash of the request body.

For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.>
    void take
  take x-amz-confirm-remove-self-bucket-access
    like native-boolean
    note <Set this parameter to true to confirm that you want to remove your permissions to change this bucket policy in the future.>
    void take
  take x-amz-expected-bucket-owner
    like native-string
    note <The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP `403 (Access Denied)` error.>
    void take
  take policy
    like native-boolean
  take put-bucket-policy-body, like put-bucket-policy-body

  line </{bucket}#policy>

  hint <Content-MD5>, loan content-md5
  hint <x-amz-confirm-remove-self-bucket-access>, loan x-amz-confirm-remove-self-bucket-access
  hint <x-amz-expected-bucket-owner>, loan x-amz-expected-bucket-owner

  find <policy>, loan policy

  seed xml, loan put-bucket-policy-body

  loot 200
    note <Success>