
load @textsurf/snow/amazonaws.com/s3/2006-03-01/base/abort-multipart-upload-output
  take form abort-multipart-upload-output

load @textsurf/snow/amazonaws.com/s3/2006-03-01/base/no-such-upload
  take form no-such-upload

load @textsurf/snow/base/native-string
  take form native-string

boot abort-multipart-upload, name <AbortMultipartUpload>
  deed delete
  note <This action aborts a multipart upload. After a multipart upload is aborted, no additional parts can be uploaded using that upload ID. The storage consumed by any previously uploaded parts will be freed. However, if any part uploads are currently in progress, those part uploads might or might not succeed. As a result, it might be necessary to abort a given multipart upload multiple times in order to completely free all storage consumed by all parts.

To verify that all parts have been removed, so you don't get charged for the part storage, you should call the [ListParts](https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html) action and ensure that the parts list is empty.

For information about permissions required to use the multipart upload, see [Multipart Upload and Permissions](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html).

The following operations are related to `AbortMultipartUpload`:

- [CreateMultipartUpload](https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html)

- [UploadPart](https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html)

- [CompleteMultipartUpload](https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html)

- [ListParts](https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html)

- [ListMultipartUploads](https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html)>

  take bucket
    like native-string
    note <The bucket name to which the upload was taking place.

When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form _AccessPointName_-_AccountId_.s3-accesspoint._Region_.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see [Using access points](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html) in the _Amazon S3 User Guide_.

When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form _AccessPointName_-_AccountId_._outpostID_.s3-outposts._Region_.amazonaws.com. When using this action using S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see [Using S3 on Outposts](https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html) in the _Amazon S3 User Guide_.>
  take key
    like native-string
    note <Key of the object for which the multipart upload was initiated.>
  take x-amz-request-payer
    like native-string
    void take
  take x-amz-expected-bucket-owner
    like native-string
    note <The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP `403 (Access Denied)` error.>
    void take
  take upload-id
    like native-string
    note <Upload ID that identifies the multipart upload.>

  line </{bucket}/{key}#uploadId>

  hint <x-amz-request-payer>, loan x-amz-request-payer
  hint <x-amz-expected-bucket-owner>, loan x-amz-expected-bucket-owner

  find <uploadId>, loan upload-id

  loot 204
    seed xml, like abort-multipart-upload-output
    note <Success>
  loot 480
    seed xml, like no-such-upload
    note <NoSuchUpload>