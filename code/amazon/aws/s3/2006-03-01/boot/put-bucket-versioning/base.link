
load @treesurf/snow/amazonaws.com/s3/2006-03-01/base/put-bucket-versioning-body
  take form put-bucket-versioning-body

load @treesurf/snow/base/native-boolean
  take form native-boolean

load @treesurf/snow/base/native-string
  take form native-string

boot put-bucket-versioning, name <PutBucketVersioning>
  deed put
  note <Sets the versioning state of an existing bucket. To set the versioning state, you must be the bucket owner.

You can set the versioning state with one of the following values:

**Enabled**—Enables versioning for the objects in the bucket. All objects added to the bucket receive a unique version ID.

**Suspended**—Disables versioning for the objects in the bucket. All objects added to the bucket receive the version ID null.

If the versioning state has never been set on a bucket, it has no versioning state; a [GetBucketVersioning](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html) request does not return a versioning state value.

If the bucket owner enables MFA Delete in the bucket versioning configuration, the bucket owner must include the `x-amz-mfa request` header and the `Status` and the `MfaDelete` request elements in a request to set the versioning state of the bucket.

If you have an object expiration lifecycle policy in your non-versioned bucket and you want to maintain the same permanent delete behavior when you enable versioning, you must add a noncurrent expiration policy. The noncurrent expiration lifecycle policy will manage the deletes of the noncurrent object versions in the version-enabled bucket. (A version-enabled bucket maintains one current and zero or more noncurrent object versions.) For more information, see [Lifecycle and Versioning](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html#lifecycle-and-other-bucket-config).

**Related Resources** - [CreateBucket](https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html)

- [DeleteBucket](https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html)

- [GetBucketVersioning](https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html)>

  take bucket
    like native-string
    note <The bucket name.>
  take content-md5
    like native-string
    note <&gt;The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message integrity check to verify that the request body was not corrupted in transit. For more information, see [RFC 1864](http://www.ietf.org/rfc/rfc1864.txt).

For requests made using the Amazon Web Services Command Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated automatically.>
    void take
  take x-amz-mfa
    like native-string
    note <The concatenation of the authentication device's serial number, a space, and the value that is displayed on your authentication device.>
    void take
  take x-amz-expected-bucket-owner
    like native-string
    note <The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP `403 (Access Denied)` error.>
    void take
  take versioning
    like native-boolean
  take put-bucket-versioning-body, like put-bucket-versioning-body

  line </{bucket}#versioning>

  hint <Content-MD5>, loan content-md5
  hint <x-amz-mfa>, loan x-amz-mfa
  hint <x-amz-expected-bucket-owner>, loan x-amz-expected-bucket-owner

  find <versioning>, loan versioning

  seed xml, loan put-bucket-versioning-body

  loot 200
    note <Success>