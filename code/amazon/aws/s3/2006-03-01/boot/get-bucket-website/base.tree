
load @termsurf/snow/amazonaws.com/s3/2006-03-01/base/get-bucket-website-output
  take form get-bucket-website-output

load @termsurf/snow/base/native-boolean
  take form native-boolean

load @termsurf/snow/base/native-string
  take form native-string

boot get-bucket-website, name <GetBucketWebsite>
  deed get
  note <Returns the website configuration for a bucket. To host website on Amazon S3, you can configure a bucket as website by adding a website configuration. For more information about hosting websites, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).

This GET action requires the `S3:GetBucketWebsite` permission. By default, only the bucket owner can read the bucket website configuration. However, bucket owners can allow other users to read the website configuration by writing a bucket policy granting them the `S3:GetBucketWebsite` permission.

The following operations are related to `DeleteBucketWebsite`:

- [DeleteBucketWebsite](https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketWebsite.html)

- [PutBucketWebsite](https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html)>

  take bucket
    like native-string
    note <The bucket name for which to get the website configuration.>
  take x-amz-expected-bucket-owner
    like native-string
    note <The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP `403 (Access Denied)` error.>
    void take
  take website
    like native-boolean

  line </{bucket}#website>

  hint <x-amz-expected-bucket-owner>, loan x-amz-expected-bucket-owner

  find <website>, loan website

  loot 200
    seed xml, like get-bucket-website-output
    note <Success>