
load @tunebond/snow/amazonaws.com/mediastore/2017-09-01/base/allowed-headers
  take form allowed-headers

load @tunebond/snow/amazonaws.com/mediastore/2017-09-01/base/allowed-methods
  take form allowed-methods

load @tunebond/snow/amazonaws.com/mediastore/2017-09-01/base/allowed-origins
  take form allowed-origins

load @tunebond/snow/amazonaws.com/mediastore/2017-09-01/base/expose-headers
  take form expose-headers

load @tunebond/snow/amazonaws.com/mediastore/2017-09-01/base/max-age-seconds
  take form max-age-seconds

form cors-rule, name <CorsRule>
  note <A rule for a CORS policy. You can add up to 100 rules to a CORS policy. If more than one rule applies, the service uses the first applicable rule listed.>
  take allowed-origins, name <AllowedOrigins>
    like allowed-origins
    note <One or more response headers that you want users to be able to access from their applications (for example, from a JavaScript `XMLHttpRequest` object).

Each CORS rule must have at least one `AllowedOrigins` element. The string value can include only one wildcard character (*), for example, http://*.example.com. Additionally, you can specify only one wildcard character to allow cross-origin access for all origins.>
  take allowed-methods, name <AllowedMethods>
    like allowed-methods
    void take
    note <Identifies an HTTP method that the origin that is specified in the rule is allowed to execute.

Each CORS rule must contain at least one `AllowedMethods` and one `AllowedOrigins` element.>
  take allowed-headers, name <AllowedHeaders>
    like allowed-headers
    note <Specifies which headers are allowed in a preflight `OPTIONS` request through the `Access-Control-Request-Headers` header. Each header name that is specified in `Access-Control-Request-Headers` must have a corresponding entry in the rule. Only the headers that were requested are sent back.

This element can contain only one wildcard character (*).>
  take max-age-seconds, name <MaxAgeSeconds>
    like max-age-seconds
    void take
    note <The time in seconds that your browser caches the preflight response for the specified resource.

A CORS rule can have only one `MaxAgeSeconds` element.>
  take expose-headers, name <ExposeHeaders>
    like expose-headers
    void take
    note <One or more headers in the response that you want users to be able to access from their applications (for example, from a JavaScript `XMLHttpRequest` object).

This element is optional for each rule.>