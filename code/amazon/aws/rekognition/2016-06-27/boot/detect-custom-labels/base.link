
load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/access-denied-exception
  take form access-denied-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/detect-custom-labels-response
  take form detect-custom-labels-response

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/image-too-large-exception
  take form image-too-large-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/internal-server-error
  take form internal-server-error

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-image-format-exception
  take form invalid-image-format-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-s3-object-exception
  take form invalid-s3-object-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/provisioned-throughput-exceeded-exception
  take form provisioned-throughput-exceeded-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/resource-not-found-exception
  take form resource-not-found-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/resource-not-ready-exception
  take form resource-not-ready-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/throttling-exception
  take form throttling-exception

load @drumwork/snow/base/native-string
  take form native-string

boot detect-custom-labels, name <DetectCustomLabels>
  deed post
  note <Detects custom labels in a supplied image by using an Amazon Rekognition Custom Labels model.

You specify which version of a model version to use by using the `ProjectVersionArn` input parameter.

You pass the input image as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file.

For each object that the model version detects on an image, the API returns a (`CustomLabel`) object in an array (`CustomLabels`). Each `CustomLabel` object provides the label name (`Name`), the level of confidence that the image contains the object (`Confidence`), and object location information, if it exists, for the label on the image (`Geometry`).

To filter labels that are returned, specify a value for `MinConfidence`. `DetectCustomLabelsLabels` only returns labels with a confidence that's higher than the specified value. The value of `MinConfidence` maps to the assumed threshold values created during training. For more information, see _Assumed threshold_ in the Amazon Rekognition Custom Labels Developer Guide. Amazon Rekognition Custom Labels metrics expresses an assumed threshold as a floating point value between 0-1. The range of `MinConfidence` normalizes the threshold value to a percentage value (0-100). Confidence responses from `DetectCustomLabels` are also returned as a percentage. You can use `MinConfidence` to change the precision and recall or your model. For more information, see _Analyzing an image_ in the Amazon Rekognition Custom Labels Developer Guide.

If you don't specify a value for `MinConfidence`, `DetectCustomLabels` returns labels based on the assumed threshold of each label.

This is a stateless API operation. That is, the operation does not persist any data.

This operation requires permissions to perform the `rekognition:DetectCustomLabels` action.

For more information, see _Analyzing an image_ in the Amazon Rekognition Custom Labels Developer Guide.>

  take x-amz-target
    like native-string
  take detect-custom-labels-request, like detect-custom-labels-request

  line </#X-Amz-Target=RekognitionService.DetectCustomLabels>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan detect-custom-labels-request

  loot 200
    seed json, like detect-custom-labels-response
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like resource-not-ready-exception
    note <ResourceNotReadyException>
  loot 482
    seed json, like invalid-s3-object-exception
    note <InvalidS3ObjectException>
  loot 483
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 484
    seed json, like image-too-large-exception
    note <ImageTooLargeException>
  loot 485
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 486
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 487
    seed json, like internal-server-error
    note <InternalServerError>
  loot 488
    seed json, like throttling-exception
    note <ThrottlingException>
  loot 489
    seed json, like provisioned-throughput-exceeded-exception
    note <ProvisionedThroughputExceededException>
  loot 490
    seed json, like invalid-image-format-exception
    note <InvalidImageFormatException>