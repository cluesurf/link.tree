
load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/access-denied-exception
  take form access-denied-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/detect-faces-response
  take form detect-faces-response

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/image-too-large-exception
  take form image-too-large-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/internal-server-error
  take form internal-server-error

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-image-format-exception
  take form invalid-image-format-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-s3-object-exception
  take form invalid-s3-object-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/provisioned-throughput-exceeded-exception
  take form provisioned-throughput-exceeded-exception

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/throttling-exception
  take form throttling-exception

load @drumwork/snow/base/native-string
  take form native-string

boot detect-faces, name <DetectFaces>
  deed post
  note <Detects faces within an image that is provided as input.

`DetectFaces` detects the 100 largest faces in the image. For each face detected, the operation returns face details. These details include a bounding box of the face, a confidence value (that the bounding box contains a face), and a fixed set of attributes such as facial landmarks (for example, coordinates of eye and mouth), presence of beard, sunglasses, and so on.

The face-detection algorithm is most effective on frontal faces. For non-frontal or obscured faces, the algorithm might not detect the faces or might detect faces with lower confidence.

You pass the input image either as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file.

This is a stateless API operation. That is, the operation does not persist any data.

This operation requires permissions to perform the `rekognition:DetectFaces` action.>

  take x-amz-target
    like native-string
  take detect-faces-request, like detect-faces-request

  line </#X-Amz-Target=RekognitionService.DetectFaces>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan detect-faces-request

  loot 200
    seed json, like detect-faces-response
    note <Success>
  loot 480
    seed json, like invalid-s3-object-exception
    note <InvalidS3ObjectException>
  loot 481
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 482
    seed json, like image-too-large-exception
    note <ImageTooLargeException>
  loot 483
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 484
    seed json, like internal-server-error
    note <InternalServerError>
  loot 485
    seed json, like throttling-exception
    note <ThrottlingException>
  loot 486
    seed json, like provisioned-throughput-exceeded-exception
    note <ProvisionedThroughputExceededException>
  loot 487
    seed json, like invalid-image-format-exception
    note <InvalidImageFormatException>