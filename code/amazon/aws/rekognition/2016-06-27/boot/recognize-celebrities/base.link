
load @nerdbond/snow/amazonaws.com/rekognition/2016-06-27/base/access-denied-exception
  take form access-denied-exception

load @nerdbond/snow/amazonaws.com/rekognition/2016-06-27/base/image-too-large-exception
  take form image-too-large-exception

load @nerdbond/snow/amazonaws.com/rekognition/2016-06-27/base/internal-server-error
  take form internal-server-error

load @nerdbond/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-image-format-exception
  take form invalid-image-format-exception

load @nerdbond/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @nerdbond/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-s3-object-exception
  take form invalid-s3-object-exception

load @nerdbond/snow/amazonaws.com/rekognition/2016-06-27/base/provisioned-throughput-exceeded-exception
  take form provisioned-throughput-exceeded-exception

load @nerdbond/snow/amazonaws.com/rekognition/2016-06-27/base/recognize-celebrities-response
  take form recognize-celebrities-response

load @nerdbond/snow/amazonaws.com/rekognition/2016-06-27/base/throttling-exception
  take form throttling-exception

load @nerdbond/snow/base/native-string
  take form native-string

boot recognize-celebrities, name <RecognizeCelebrities>
  deed post
  note <Returns an array of celebrities recognized in the input image. For more information, see Recognizing Celebrities in the Amazon Rekognition Developer Guide.

`RecognizeCelebrities` returns the 64 largest faces in the image. It lists recognized celebrities in the `CelebrityFaces` array and unrecognized faces in the `UnrecognizedFaces` array. `RecognizeCelebrities` doesn't return celebrities whose faces aren't among the largest 64 faces in the image.

For each celebrity recognized, `RecognizeCelebrities` returns a `Celebrity` object. The `Celebrity` object contains the celebrity name, ID, URL links to additional information, match confidence, and a `ComparedFace` object that you can use to locate the celebrity's face on the image.

Amazon Rekognition doesn't retain information about which images a celebrity has been recognized in. Your application must store this information and use the `Celebrity` ID property as a unique identifier for the celebrity. If you don't store the celebrity name or additional information URLs returned by `RecognizeCelebrities`, you will need the ID to identify the celebrity in a call to the GetCelebrityInfo operation.

You pass the input image either as base64-encoded image bytes or as a reference to an image in an Amazon S3 bucket. If you use the AWS CLI to call Amazon Rekognition operations, passing image bytes is not supported. The image must be either a PNG or JPEG formatted file.

For an example, see Recognizing Celebrities in an Image in the Amazon Rekognition Developer Guide.

This operation requires permissions to perform the `rekognition:RecognizeCelebrities` operation.>

  take x-amz-target
    like native-string
  take recognize-celebrities-request, like recognize-celebrities-request

  line </#X-Amz-Target=RekognitionService.RecognizeCelebrities>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan recognize-celebrities-request

  loot 200
    seed json, like recognize-celebrities-response
    note <Success>
  loot 480
    seed json, like invalid-s3-object-exception
    note <InvalidS3ObjectException>
  loot 481
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 482
    seed json, like invalid-image-format-exception
    note <InvalidImageFormatException>
  loot 483
    seed json, like image-too-large-exception
    note <ImageTooLargeException>
  loot 484
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 485
    seed json, like internal-server-error
    note <InternalServerError>
  loot 486
    seed json, like throttling-exception
    note <ThrottlingException>
  loot 487
    seed json, like provisioned-throughput-exceeded-exception
    note <ProvisionedThroughputExceededException>
  loot 488
    seed json, like invalid-image-format-exception
    note <InvalidImageFormatException>