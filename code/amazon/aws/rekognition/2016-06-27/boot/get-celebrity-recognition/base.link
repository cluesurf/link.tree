
load @textsurf/snow/amazonaws.com/rekognition/2016-06-27/base/access-denied-exception
  take form access-denied-exception

load @textsurf/snow/amazonaws.com/rekognition/2016-06-27/base/get-celebrity-recognition-response
  take form get-celebrity-recognition-response

load @textsurf/snow/amazonaws.com/rekognition/2016-06-27/base/internal-server-error
  take form internal-server-error

load @textsurf/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-pagination-token-exception
  take form invalid-pagination-token-exception

load @textsurf/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @textsurf/snow/amazonaws.com/rekognition/2016-06-27/base/provisioned-throughput-exceeded-exception
  take form provisioned-throughput-exceeded-exception

load @textsurf/snow/amazonaws.com/rekognition/2016-06-27/base/resource-not-found-exception
  take form resource-not-found-exception

load @textsurf/snow/amazonaws.com/rekognition/2016-06-27/base/throttling-exception
  take form throttling-exception

load @textsurf/snow/base/native-string
  take form native-string

boot get-celebrity-recognition, name <GetCelebrityRecognition>
  deed post
  note <Gets the celebrity recognition results for a Amazon Rekognition Video analysis started by StartCelebrityRecognition.

Celebrity recognition in a video is an asynchronous operation. Analysis is started by a call to StartCelebrityRecognition which returns a job identifier (`JobId`). When the celebrity recognition operation finishes, Amazon Rekognition Video publishes a completion status to the Amazon Simple Notification Service topic registered in the initial call to `StartCelebrityRecognition`. To get the results of the celebrity recognition analysis, first check that the status value published to the Amazon SNS topic is `SUCCEEDED`. If so, call `GetCelebrityDetection` and pass the job identifier (`JobId`) from the initial call to `StartCelebrityDetection`.

For more information, see Working With Stored Videos in the Amazon Rekognition Developer Guide.

`GetCelebrityRecognition` returns detected celebrities and the time(s) they are detected in an array (`Celebrities`) of CelebrityRecognition objects. Each `CelebrityRecognition` contains information about the celebrity in a CelebrityDetail object and the time, `Timestamp`, the celebrity was detected.

`GetCelebrityRecognition` only returns the default facial attributes (`BoundingBox`, `Confidence`, `Landmarks`, `Pose`, and `Quality`). The other facial attributes listed in the `Face` object of the following response syntax are not returned. For more information, see FaceDetail in the Amazon Rekognition Developer Guide.

By default, the `Celebrities` array is sorted by time (milliseconds from the start of the video). You can also sort the array by celebrity by specifying the value `ID` in the `SortBy` input parameter.

The `CelebrityDetail` object includes the celebrity identifer and additional information urls. If you don't store the additional information urls, you can get them later by calling GetCelebrityInfo with the celebrity identifer.

No information is returned for faces not recognized as celebrities.

Use MaxResults parameter to limit the number of labels returned. If there are more results than specified in `MaxResults`, the value of `NextToken` in the operation response contains a pagination token for getting the next set of results. To get the next page of results, call `GetCelebrityDetection` and populate the `NextToken` request parameter with the token value returned from the previous call to `GetCelebrityRecognition`.>

  take x-amz-target
    like native-string
  take max-results
    like native-string
    note <Pagination limit>
    void take
  take next-token
    like native-string
    note <Pagination token>
    void take
  take get-celebrity-recognition-request, like get-celebrity-recognition-request

  line </#X-Amz-Target=RekognitionService.GetCelebrityRecognition>

  hint <X-Amz-Target>, loan x-amz-target

  find <MaxResults>, loan max-results
  find <NextToken>, loan next-token

  seed json, loan get-celebrity-recognition-request

  loot 200
    seed json, like get-celebrity-recognition-response
    note <Success>
  loot 480
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 481
    seed json, like internal-server-error
    note <InternalServerError>
  loot 482
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 483
    seed json, like invalid-pagination-token-exception
    note <InvalidPaginationTokenException>
  loot 484
    seed json, like provisioned-throughput-exceeded-exception
    note <ProvisionedThroughputExceededException>
  loot 485
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 486
    seed json, like throttling-exception
    note <ThrottlingException>