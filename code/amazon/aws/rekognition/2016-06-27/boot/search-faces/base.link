
load @wavebond/snow/amazonaws.com/rekognition/2016-06-27/base/access-denied-exception
  take form access-denied-exception

load @wavebond/snow/amazonaws.com/rekognition/2016-06-27/base/internal-server-error
  take form internal-server-error

load @wavebond/snow/amazonaws.com/rekognition/2016-06-27/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @wavebond/snow/amazonaws.com/rekognition/2016-06-27/base/provisioned-throughput-exceeded-exception
  take form provisioned-throughput-exceeded-exception

load @wavebond/snow/amazonaws.com/rekognition/2016-06-27/base/resource-not-found-exception
  take form resource-not-found-exception

load @wavebond/snow/amazonaws.com/rekognition/2016-06-27/base/search-faces-response
  take form search-faces-response

load @wavebond/snow/amazonaws.com/rekognition/2016-06-27/base/throttling-exception
  take form throttling-exception

load @wavebond/snow/base/native-string
  take form native-string

boot search-faces, name <SearchFaces>
  deed post
  note <For a given input face ID, searches for matching faces in the collection the face belongs to. You get a face ID when you add a face to the collection using the IndexFaces operation. The operation compares the features of the input face with faces in the specified collection.

You can also search faces without indexing faces by using the `SearchFacesByImage` operation.

The operation response returns an array of faces that match, ordered by similarity score with the highest similarity first. More specifically, it is an array of metadata for each face match that is found. Along with the metadata, the response also includes a `confidence` value for each face match, indicating the confidence that the specific face matches the input face.

For an example, see Searching for a Face Using Its Face ID in the Amazon Rekognition Developer Guide.

This operation requires permissions to perform the `rekognition:SearchFaces` action.>

  take x-amz-target
    like native-string
  take search-faces-request, like search-faces-request

  line </#X-Amz-Target=RekognitionService.SearchFaces>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan search-faces-request

  loot 200
    seed json, like search-faces-response
    note <Success>
  loot 480
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 481
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 482
    seed json, like internal-server-error
    note <InternalServerError>
  loot 483
    seed json, like throttling-exception
    note <ThrottlingException>
  loot 484
    seed json, like provisioned-throughput-exceeded-exception
    note <ProvisionedThroughputExceededException>
  loot 485
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>