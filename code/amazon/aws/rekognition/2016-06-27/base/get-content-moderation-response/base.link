
load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/content-moderation-detections
  take form content-moderation-detections

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/pagination-token
  take form pagination-token

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/status-message
  take form status-message

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/video-job-status
  take form video-job-status

load @drumwork/snow/amazonaws.com/rekognition/2016-06-27/base/video-metadata
  take form video-metadata

load @drumwork/snow/base/string
  take form string

form get-content-moderation-response, name <GetContentModerationResponse>
  take job-status, name <JobStatus>
    like video-job-status
    void take
    note <The current status of the content moderation analysis job.>
  take status-message, name <StatusMessage>
    like status-message
    void take
    note <If the job fails, `StatusMessage` provides a descriptive error message.>
  take video-metadata, name <VideoMetadata>
    like video-metadata
    void take
    note <Information about a video that Amazon Rekognition analyzed. `Videometadata` is returned in every page of paginated responses from `GetContentModeration`.>
  take moderation-labels, name <ModerationLabels>
    like content-moderation-detections
    void take
    note <The detected inappropriate, unwanted, or offensive content moderation labels and the time(s) they were detected.>
  take next-token, name <NextToken>
    like pagination-token
    void take
    note <If the response is truncated, Amazon Rekognition Video returns this token that you can use in the subsequent request to retrieve the next set of content moderation labels.>
  take moderation-model-version, name <ModerationModelVersion>
    like string
    void take
    note <Version number of the moderation detection model that was used to detect inappropriate, unwanted, or offensive content.>