
load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/date-time
  take form date-time

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/evaluation-result
  take form evaluation-result

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/ground-truth-manifest
  take form ground-truth-manifest

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/inference-units
  take form inference-units

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/kms-key-id
  take form kms-key-id

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/output-config
  take form output-config

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/project-version-arn
  take form project-version-arn

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/project-version-status
  take form project-version-status

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/status-message
  take form status-message

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/testing-data-result
  take form testing-data-result

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/training-data-result
  take form training-data-result

load @termsurf/snow/amazonaws.com/rekognition/2016-06-27/base/u-long
  take form u-long

form project-version-description, name <ProjectVersionDescription>
  note <The description of a version of a model.>
  take project-version-arn, name <ProjectVersionArn>
    like project-version-arn
    void take
    note <The Amazon Resource Name (ARN) of the model version.>
  take creation-timestamp, name <CreationTimestamp>
    like date-time
    void take
    note <The Unix datetime for the date and time that training started.>
  take min-inference-units, name <MinInferenceUnits>
    like inference-units
    void take
    note <The minimum number of inference units used by the model. For more information, see StartProjectVersion.>
  take status, name <Status>
    like project-version-status
    void take
    note <The current status of the model version.>
  take status-message, name <StatusMessage>
    like status-message
    void take
    note <A descriptive message for an error or warning that occurred.>
  take billable-training-time-in-seconds, name <BillableTrainingTimeInSeconds>
    like u-long
    void take
    note <The duration, in seconds, that the model version has been billed for training. This value is only returned if the model version has been successfully trained.>
  take training-end-timestamp, name <TrainingEndTimestamp>
    like date-time
    void take
    note <The Unix date and time that training of the model ended.>
  take output-config, name <OutputConfig>
    like output-config
    void take
    note <The location where training results are saved.>
  take training-data-result, name <TrainingDataResult>
    like training-data-result
    void take
    note <Contains information about the training results.>
  take testing-data-result, name <TestingDataResult>
    like testing-data-result
    void take
    note <Contains information about the testing results.>
  take evaluation-result, name <EvaluationResult>
    like evaluation-result
    void take
    note <The training results. `EvaluationResult` is only returned if training is successful.>
  take manifest-summary, name <ManifestSummary>
    like ground-truth-manifest
    void take
    note <The location of the summary manifest. The summary manifest provides aggregate data validation results for the training and test datasets.>
  take kms-key-id, name <KmsKeyId>
    like kms-key-id
    void take
    note <The identifer for the AWS Key Management Service (AWS KMS) customer master key that was used to encrypt the model during training.>