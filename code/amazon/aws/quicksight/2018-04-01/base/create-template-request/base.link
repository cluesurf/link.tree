
load @textsurf/snow/amazonaws.com/quicksight/2018-04-01/base/resource-permission-list
  take form resource-permission-list

load @textsurf/snow/amazonaws.com/quicksight/2018-04-01/base/tag-list
  take form tag-list

load @textsurf/snow/amazonaws.com/quicksight/2018-04-01/base/template-name
  take form template-name

load @textsurf/snow/amazonaws.com/quicksight/2018-04-01/base/template-source-entity
  take form template-source-entity

load @textsurf/snow/amazonaws.com/quicksight/2018-04-01/base/version-description
  take form version-description

form create-template-request, name <CreateTemplateRequest>
  take name, name <Name>
    like template-name
    void take
    note <A display name for the template.>
  take permissions, name <Permissions>
    like resource-permission-list
    void take
    note <A list of resource permissions to be set on the template.>
  take source-entity, name <SourceEntity>
    like template-source-entity
    note <The entity that you are using as a source when you create the template. In `SourceEntity`, you specify the type of object you're using as source: `SourceTemplate` for a template or `SourceAnalysis` for an analysis. Both of these require an Amazon Resource Name (ARN). For `SourceTemplate`, specify the ARN of the source template. For `SourceAnalysis`, specify the ARN of the source analysis. The `SourceTemplate` ARN can contain any Amazon Web Services account and any Amazon QuickSight-supported Amazon Web Services Region;.

Use the `DataSetReferences` entity within `SourceTemplate` or `SourceAnalysis` to list the replacement datasets for the placeholders listed in the original. The schema in each dataset must match its placeholder.>
  take tags, name <Tags>
    like tag-list
    void take
    note <Contains a map of the key-value pairs for the resource tag or tags assigned to the resource.>
  take version-description, name <VersionDescription>
    like version-description
    void take
    note <A description of the current template version being created. This API operation creates the first version of the template. Every time `UpdateTemplate` is called, a new version is created. Each version of the template maintains a description of the version in the `VersionDescription` field.>