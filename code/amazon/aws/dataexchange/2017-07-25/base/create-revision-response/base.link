
load @treesurf/snow/amazonaws.com/dataexchange/2017-07-25/base/arn
  take form arn

load @treesurf/snow/amazonaws.com/dataexchange/2017-07-25/base/id
  take form id

load @treesurf/snow/amazonaws.com/dataexchange/2017-07-25/base/map-of-string
  take form map-of-string

load @treesurf/snow/amazonaws.com/dataexchange/2017-07-25/base/string-min0-max16384
  take form string-min0-max16384

load @treesurf/snow/amazonaws.com/dataexchange/2017-07-25/base/timestamp
  take form timestamp

load @treesurf/snow/base/boolean
  take form boolean

form create-revision-response, name <CreateRevisionResponse>
  take arn, name <Arn>
    like arn
    void take
    note <The ARN for the revision>
  take comment, name <Comment>
    like string-min0-max16384
    void take
    note <An optional comment about the revision.>
  take created-at, name <CreatedAt>
    like timestamp
    void take
    note <The date and time that the revision was created, in ISO 8601 format.>
  take data-set-id, name <DataSetId>
    like id
    void take
    note <The unique identifier for the data set associated with this revision.>
  take finalized, name <Finalized>
    like boolean
    void take
    note <To publish a revision to a data set in a product, the revision must first be finalized. Finalizing a revision tells AWS Data Exchange that your changes to the assets in the revision are complete. After it's in this read-only state, you can publish the revision to your products.

Finalized revisions can be published through the AWS Data Exchange console or the AWS Marketplace Catalog API, using the StartChangeSet AWS Marketplace Catalog API action. When using the API, revisions are uniquely identified by their ARN.>
  take id, name <Id>
    like id
    void take
    note <The unique identifier for the revision.>
  take source-id, name <SourceId>
    like id
    void take
    note <The revision ID of the owned revision corresponding to the entitled revision being viewed. This parameter is returned when a revision owner is viewing the entitled copy of its owned revision.>
  take tags, name <Tags>
    like map-of-string
    void take
    note <The tags for the revision.>
  take updated-at, name <UpdatedAt>
    like timestamp
    void take
    note <The date and time that the revision was last updated, in ISO 8601 format.>