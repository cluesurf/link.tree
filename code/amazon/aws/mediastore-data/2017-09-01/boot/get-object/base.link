
load @drumwork/snow/amazonaws.com/mediastore-data/2017-09-01/base/container-not-found-exception
  take form container-not-found-exception

load @drumwork/snow/amazonaws.com/mediastore-data/2017-09-01/base/get-object-response
  take form get-object-response

load @drumwork/snow/amazonaws.com/mediastore-data/2017-09-01/base/internal-server-error
  take form internal-server-error

load @drumwork/snow/amazonaws.com/mediastore-data/2017-09-01/base/object-not-found-exception
  take form object-not-found-exception

load @drumwork/snow/amazonaws.com/mediastore-data/2017-09-01/base/requested-range-not-satisfiable-exception
  take form requested-range-not-satisfiable-exception

load @drumwork/snow/base/native-string
  take form native-string

boot get-object, name <GetObject>
  deed get
  note <Downloads the object at the specified path. If the object’s upload availability is set to `streaming`, AWS Elemental MediaStore downloads the object even if it’s still uploading the object.>

  take path
    like native-string
    note <The path (including the file name) where the object is stored in the container. Format: &lt;folder name&gt;/&lt;folder name&gt;/&lt;file name&gt;

For example, to upload the file `mlaw.avi` to the folder path `premium\canada` in the container `movies`, enter the path `premium/canada/mlaw.avi`.

Do not include the container name in this path.

If the path includes any folders that don't exist yet, the service creates them. For example, suppose you have an existing `premium/usa` subfolder. If you specify `premium/canada`, the service creates a `canada` subfolder in the `premium` folder. You then have two subfolders, `usa` and `canada`, in the `premium` folder.

There is no correlation between the path to the source and the path (folders) in the container in AWS Elemental MediaStore.

For more information about folders and how they exist in a container, see the [AWS Elemental MediaStore User Guide](http://docs.aws.amazon.com/mediastore/latest/ug/).

The file name is the name that is assigned to the file that you upload. The file can have the same name inside and outside of AWS Elemental MediaStore, or it can have the same name. The file name can include or omit an extension.>
  take range
    like native-string
    note <The range bytes of an object to retrieve. For more information about the `Range` header, see [http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35). AWS Elemental MediaStore ignores this header for partially uploaded objects that have streaming upload availability.>
    void take

  line </{path}>

  hint <Range>, loan range

  loot 200
    seed json, like get-object-response
    note <Success>
  loot 480
    seed json, like container-not-found-exception
    note <ContainerNotFoundException>
  loot 481
    seed json, like object-not-found-exception
    note <ObjectNotFoundException>
  loot 482
    seed json, like requested-range-not-satisfiable-exception
    note <RequestedRangeNotSatisfiableException>
  loot 483
    seed json, like internal-server-error
    note <InternalServerError>