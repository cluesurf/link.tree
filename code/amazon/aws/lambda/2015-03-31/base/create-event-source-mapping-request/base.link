
load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/arn
  take form arn

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/batch-size
  take form batch-size

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/bisect-batch-on-function-error
  take form bisect-batch-on-function-error

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/date
  take form date

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/destination-config
  take form destination-config

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/enabled
  take form enabled

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/event-source-position
  take form event-source-position

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/function-name
  take form function-name

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/function-response-type-list
  take form function-response-type-list

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/maximum-batching-window-in-seconds
  take form maximum-batching-window-in-seconds

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/maximum-record-age-in-seconds
  take form maximum-record-age-in-seconds

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/maximum-retry-attempts-event-source-mapping
  take form maximum-retry-attempts-event-source-mapping

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/parallelization-factor
  take form parallelization-factor

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/queues
  take form queues

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/self-managed-event-source
  take form self-managed-event-source

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/source-access-configurations
  take form source-access-configurations

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/topics
  take form topics

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/tumbling-window-in-seconds
  take form tumbling-window-in-seconds

form create-event-source-mapping-request, name <CreateEventSourceMappingRequest>
  take event-source-arn, name <EventSourceArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the event source.

- **Amazon Kinesis** - The ARN of the data stream or a stream consumer.

- **Amazon DynamoDB Streams** - The ARN of the stream.

- **Amazon Simple Queue Service** - The ARN of the queue.

- **Amazon Managed Streaming for Apache Kafka** - The ARN of the cluster.>
  take function-name, name <FunctionName>
    like function-name
    note <The name of the Lambda function.

**Name formats** - **Function name** - `MyFunction`.

- **Function ARN** - `arn:aws:lambda:us-west-2:123456789012:function:MyFunction`.

- **Version or Alias ARN** - `arn:aws:lambda:us-west-2:123456789012:function:MyFunction:PROD`.

- **Partial ARN** - `123456789012:function:MyFunction`.

The length constraint applies only to the full ARN. If you specify only the function name, it's limited to 64 characters in length.>
  take enabled, name <Enabled>
    like enabled
    void take
    note <If true, the event source mapping is active. Set to false to pause polling and invocation.>
  take batch-size, name <BatchSize>
    like batch-size
    void take
    note <The maximum number of items to retrieve in a single batch.

- **Amazon Kinesis** - Default 100. Max 10,000.

- **Amazon DynamoDB Streams** - Default 100. Max 1,000.

- **Amazon Simple Queue Service** - Default 10. For standard queues the max is 10,000. For FIFO queues the max is 10.

- **Amazon Managed Streaming for Apache Kafka** - Default 100. Max 10,000.

- **Self-Managed Apache Kafka** - Default 100. Max 10,000.>
  take maximum-batching-window-in-seconds, name <MaximumBatchingWindowInSeconds>
    like maximum-batching-window-in-seconds
    void take
    note <(Streams and SQS standard queues) The maximum amount of time to gather records before invoking the function, in seconds.>
  take parallelization-factor, name <ParallelizationFactor>
    like parallelization-factor
    void take
    note <(Streams only) The number of batches to process from each shard concurrently.>
  take starting-position, name <StartingPosition>
    like event-source-position
    void take
    note <The position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK Streams sources. `AT_TIMESTAMP` is only supported for Amazon Kinesis streams.>
  take starting-position-timestamp, name <StartingPositionTimestamp>
    like date
    void take
    note <With `StartingPosition` set to `AT_TIMESTAMP`, the time from which to start reading.>
  take destination-config, name <DestinationConfig>
    like destination-config
    void take
    note <(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.>
  take maximum-record-age-in-seconds, name <MaximumRecordAgeInSeconds>
    like maximum-record-age-in-seconds
    void take
    note <(Streams only) Discard records older than the specified age. The default value is infinite (-1).>
  take bisect-batch-on-function-error, name <BisectBatchOnFunctionError>
    like bisect-batch-on-function-error
    void take
    note <(Streams only) If the function returns an error, split the batch in two and retry.>
  take maximum-retry-attempts, name <MaximumRetryAttempts>
    like maximum-retry-attempts-event-source-mapping
    void take
    note <(Streams only) Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records will be retried until the record expires.>
  take tumbling-window-in-seconds, name <TumblingWindowInSeconds>
    like tumbling-window-in-seconds
    void take
    note <(Streams only) The duration in seconds of a processing window. The range is between 1 second up to 900 seconds.>
  take topics, name <Topics>
    like topics
    void take
    note <The name of the Kafka topic.>
  take queues, name <Queues>
    like queues
    void take
    note <(MQ) The name of the Amazon MQ broker destination queue to consume.>
  take source-access-configurations, name <SourceAccessConfigurations>
    like source-access-configurations
    void take
    note <An array of authentication protocols or VPC components required to secure your event source.>
  take self-managed-event-source, name <SelfManagedEventSource>
    like self-managed-event-source
    void take
    note <The Self-Managed Apache Kafka cluster to send records.>
  take function-response-types, name <FunctionResponseTypes>
    like function-response-type-list
    void take
    note <(Streams only) A list of current response type enums applied to the event source mapping.>