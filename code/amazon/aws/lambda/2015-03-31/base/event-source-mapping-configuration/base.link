
load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/arn
  take form arn

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/batch-size
  take form batch-size

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/bisect-batch-on-function-error
  take form bisect-batch-on-function-error

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/date
  take form date

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/destination-config
  take form destination-config

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/event-source-position
  take form event-source-position

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/function-arn
  take form function-arn

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/function-response-type-list
  take form function-response-type-list

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/maximum-batching-window-in-seconds
  take form maximum-batching-window-in-seconds

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/maximum-record-age-in-seconds
  take form maximum-record-age-in-seconds

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/maximum-retry-attempts-event-source-mapping
  take form maximum-retry-attempts-event-source-mapping

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/parallelization-factor
  take form parallelization-factor

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/queues
  take form queues

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/self-managed-event-source
  take form self-managed-event-source

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/source-access-configurations
  take form source-access-configurations

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/topics
  take form topics

load @treesurf/snow/amazonaws.com/lambda/2015-03-31/base/tumbling-window-in-seconds
  take form tumbling-window-in-seconds

load @treesurf/snow/base/string
  take form string

form event-source-mapping-configuration, name <EventSourceMappingConfiguration>
  note <A mapping between an Amazon Web Services resource and a Lambda function. For details, see CreateEventSourceMapping.>
  take uuid, name <UUID>
    like string
    void take
    note <The identifier of the event source mapping.>
  take starting-position, name <StartingPosition>
    like event-source-position
    void take
    note <The position in a stream from which to start reading. Required for Amazon Kinesis, Amazon DynamoDB, and Amazon MSK stream sources. `AT_TIMESTAMP` is supported only for Amazon Kinesis streams.>
  take starting-position-timestamp, name <StartingPositionTimestamp>
    like date
    void take
    note <With `StartingPosition` set to `AT_TIMESTAMP`, the time from which to start reading.>
  take batch-size, name <BatchSize>
    like batch-size
    void take
    note <The maximum number of items to retrieve in a single batch.>
  take maximum-batching-window-in-seconds, name <MaximumBatchingWindowInSeconds>
    like maximum-batching-window-in-seconds
    void take
    note <(Streams and Amazon SQS standard queues) The maximum amount of time to gather records before invoking the function, in seconds. The default value is zero.>
  take parallelization-factor, name <ParallelizationFactor>
    like parallelization-factor
    void take
    note <(Streams only) The number of batches to process concurrently from each shard. The default value is 1.>
  take event-source-arn, name <EventSourceArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the event source.>
  take function-arn, name <FunctionArn>
    like function-arn
    void take
    note <The ARN of the Lambda function.>
  take last-modified, name <LastModified>
    like date
    void take
    note <The date that the event source mapping was last updated or that its state changed.>
  take last-processing-result, name <LastProcessingResult>
    like string
    void take
    note <The result of the last Lambda invocation of your function.>
  take state, name <State>
    like string
    void take
    note <The state of the event source mapping. It can be one of the following: `Creating`, `Enabling`, `Enabled`, `Disabling`, `Disabled`, `Updating`, or `Deleting`.>
  take state-transition-reason, name <StateTransitionReason>
    like string
    void take
    note <Indicates whether a user or Lambda made the last change to the event source mapping.>
  take destination-config, name <DestinationConfig>
    like destination-config
    void take
    note <(Streams only) An Amazon SQS queue or Amazon SNS topic destination for discarded records.>
  take topics, name <Topics>
    like topics
    void take
    note <The name of the Kafka topic.>
  take queues, name <Queues>
    like queues
    void take
    note <(Amazon MQ) The name of the Amazon MQ broker destination queue to consume.>
  take source-access-configurations, name <SourceAccessConfigurations>
    like source-access-configurations
    void take
    note <An array of the authentication protocol, VPC components, or virtual host to secure and define your event source.>
  take self-managed-event-source, name <SelfManagedEventSource>
    like self-managed-event-source
    void take
    note <The self-managed Apache Kafka cluster for your event source.>
  take maximum-record-age-in-seconds, name <MaximumRecordAgeInSeconds>
    like maximum-record-age-in-seconds
    void take
    note <(Streams only) Discard records older than the specified age. The default value is -1, which sets the maximum age to infinite. When the value is set to infinite, Lambda never discards old records.>
  take bisect-batch-on-function-error, name <BisectBatchOnFunctionError>
    like bisect-batch-on-function-error
    void take
    note <(Streams only) If the function returns an error, split the batch in two and retry. The default value is false.>
  take maximum-retry-attempts, name <MaximumRetryAttempts>
    like maximum-retry-attempts-event-source-mapping
    void take
    note <(Streams only) Discard records after the specified number of retries. The default value is -1, which sets the maximum number of retries to infinite. When MaximumRetryAttempts is infinite, Lambda retries failed records until the record expires in the event source.>
  take tumbling-window-in-seconds, name <TumblingWindowInSeconds>
    like tumbling-window-in-seconds
    void take
    note <(Streams only) The duration in seconds of a processing window. The range is 1-900 seconds.>
  take function-response-types, name <FunctionResponseTypes>
    like function-response-type-list
    void take
    note <(Streams only) A list of current response type enums applied to the event source mapping.>