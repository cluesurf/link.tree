
load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/action
  take form action

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/arn
  take form arn

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/event-source-token
  take form event-source-token

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/principal
  take form principal

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/source-owner
  take form source-owner

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/statement-id
  take form statement-id

load @tunebond/snow/base/string
  take form string

form add-permission-request, name <AddPermissionRequest>
  take statement-id, name <StatementId>
    like statement-id
    note <A statement identifier that differentiates the statement from others in the same policy.>
  take action, name <Action>
    like action
    note <The action that the principal can use on the function. For example, `lambda:InvokeFunction` or `lambda:GetFunction`.>
  take principal, name <Principal>
    like principal
    note <The Amazon Web Services service or account that invokes the function. If you specify a service, use `SourceArn` or `SourceAccount` to limit who can invoke the function through that service.>
  take source-arn, name <SourceArn>
    like arn
    void take
    note <For Amazon Web Services services, the ARN of the Amazon Web Services resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.>
  take source-account, name <SourceAccount>
    like source-owner
    void take
    note <For Amazon S3, the ID of the account that owns the resource. Use this together with `SourceArn` to ensure that the resource is owned by the specified account. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.>
  take event-source-token, name <EventSourceToken>
    like event-source-token
    void take
    note <For Alexa Smart Home functions, a token that must be supplied by the invoker.>
  take revision-id, name <RevisionId>
    like string
    void take
    note <Only update the policy if the revision ID matches the ID that's specified. Use this option to avoid modifying a policy that has changed since you last read it.>