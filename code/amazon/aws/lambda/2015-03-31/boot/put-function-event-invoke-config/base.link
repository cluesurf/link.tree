
load @drumwork/snow/amazonaws.com/lambda/2015-03-31/base/function-event-invoke-config
  take form function-event-invoke-config

load @drumwork/snow/amazonaws.com/lambda/2015-03-31/base/invalid-parameter-value-exception
  take form invalid-parameter-value-exception

load @drumwork/snow/amazonaws.com/lambda/2015-03-31/base/put-function-event-invoke-config-body
  take form put-function-event-invoke-config-body

load @drumwork/snow/amazonaws.com/lambda/2015-03-31/base/resource-conflict-exception
  take form resource-conflict-exception

load @drumwork/snow/amazonaws.com/lambda/2015-03-31/base/resource-not-found-exception
  take form resource-not-found-exception

load @drumwork/snow/amazonaws.com/lambda/2015-03-31/base/service-exception
  take form service-exception

load @drumwork/snow/amazonaws.com/lambda/2015-03-31/base/too-many-requests-exception
  take form too-many-requests-exception

load @drumwork/snow/base/native-string
  take form native-string

boot put-function-event-invoke-config, name <PutFunctionEventInvokeConfig>
  deed put
  note <Configures options for [asynchronous invocation](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html) on a function, version, or alias. If a configuration already exists for a function, version, or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without affecting existing settings for other options, use UpdateFunctionEventInvokeConfig.

By default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with UpdateFunctionConfiguration.

To send an invocation record to a queue, topic, function, or event bus, specify a [destination](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations). You can configure separate destinations for successful invocations (on-success) and events that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a dead-letter queue.>

  take function-name
    like native-string
    note <The name of the Lambda function, version, or alias.

**Name formats** - **Function name** - `my-function` (name-only), `my-function:v1` (with alias).

- **Function ARN** - `arn:aws:lambda:us-west-2:123456789012:function:my-function`.

- **Partial ARN** - `123456789012:function:my-function`.

You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.>
  take qualifier
    like native-string
    note <A version number or alias name.>
    void take
  take put-function-event-invoke-config-body, like put-function-event-invoke-config-body

  line </2019-09-25/functions/{function-name}/event-invoke-config>

  find <Qualifier>, loan qualifier

  seed json, loan put-function-event-invoke-config-body

  loot 200
    seed json, like function-event-invoke-config
    note <Success>
  loot 480
    seed json, like service-exception
    note <ServiceException>
  loot 481
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 482
    seed json, like invalid-parameter-value-exception
    note <InvalidParameterValueException>
  loot 483
    seed json, like too-many-requests-exception
    note <TooManyRequestsException>
  loot 484
    seed json, like resource-conflict-exception
    note <ResourceConflictException>