
load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/ec2-access-denied-exception
  take form ec2-access-denied-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/ec2-throttled-exception
  take form ec2-throttled-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/ec2-unexpected-exception
  take form ec2-unexpected-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/efs-mount-connectivity-exception
  take form efs-mount-connectivity-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/efs-mount-failure-exception
  take form efs-mount-failure-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/efs-mount-timeout-exception
  take form efs-mount-timeout-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/efsio-exception
  take form efsio-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/eni-limit-reached-exception
  take form eni-limit-reached-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/invalid-parameter-value-exception
  take form invalid-parameter-value-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/invalid-request-content-exception
  take form invalid-request-content-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/invalid-runtime-exception
  take form invalid-runtime-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/invalid-security-group-id-exception
  take form invalid-security-group-id-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/invalid-subnet-id-exception
  take form invalid-subnet-id-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/invalid-zip-file-exception
  take form invalid-zip-file-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/invocation-response
  take form invocation-response

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/invoke-body
  take form invoke-body

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/kms-access-denied-exception
  take form kms-access-denied-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/kms-disabled-exception
  take form kms-disabled-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/kms-invalid-state-exception
  take form kms-invalid-state-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/kms-not-found-exception
  take form kms-not-found-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/request-too-large-exception
  take form request-too-large-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/resource-conflict-exception
  take form resource-conflict-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/resource-not-found-exception
  take form resource-not-found-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/resource-not-ready-exception
  take form resource-not-ready-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/service-exception
  take form service-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/subnet-ip-address-limit-reached-exception
  take form subnet-ip-address-limit-reached-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/too-many-requests-exception
  take form too-many-requests-exception

load @tunebond/snow/amazonaws.com/lambda/2015-03-31/base/unsupported-media-type-exception
  take form unsupported-media-type-exception

load @tunebond/snow/base/native-string
  take form native-string

boot invoke, name <Invoke>
  deed post
  note <Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or asynchronously. To invoke a function asynchronously, set `InvocationType` to `Event`.

For [synchronous invocation](https://docs.aws.amazon.com/lambda/latest/dg/invocation-sync.html), details about the function response, including errors, are included in the response body and headers. For either invocation type, you can find more information in the [execution log](https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html) and [trace](https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html).

When an error occurs, your function may be invoked multiple times. Retry behavior varies by error type, client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an error, Lambda executes the function up to two more times. For more information, see [Retry Behavior](https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html).

For [asynchronous invocation](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html), Lambda adds events to a queue before sending them to your function. If your function does not have enough capacity to keep up with the queue, events may be lost. Occasionally, your function may receive the same event multiple times, even if no error occurs. To retain events that were not processed, configure your function with a [dead-letter queue](https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq).

The status code in the API response doesn't reflect function errors. Error codes are reserved for errors that prevent your function from executing, such as permissions errors, [limit errors](https://docs.aws.amazon.com/lambda/latest/dg/limits.html), or issues with your function's code and configuration. For example, Lambda returns `TooManyRequestsException` if executing the function would cause you to exceed a concurrency limit at either the account level (`ConcurrentInvocationLimitExceeded`) or function level (`ReservedFunctionConcurrentInvocationLimitExceeded`).

For functions with a long timeout, your client might be disconnected during synchronous invocation while it waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long connections with timeout or keep-alive settings.

This operation requires permission for the [lambda:InvokeFunction](https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html) action.>

  take function-name
    like native-string
    note <The name of the Lambda function, version, or alias.

**Name formats** - **Function name** - `my-function` (name-only), `my-function:v1` (with alias).

- **Function ARN** - `arn:aws:lambda:us-west-2:123456789012:function:my-function`.

- **Partial ARN** - `123456789012:function:my-function`.

You can append a version number or alias to any of the formats. The length constraint applies only to the full ARN. If you specify only the function name, it is limited to 64 characters in length.>
  take x-amz-invocation-type
    like native-string
    note <Choose from the following options.

- `RequestResponse` (default) - Invoke the function synchronously. Keep the connection open until the function returns a response or times out. The API response includes the function response and additional data.

- `Event` - Invoke the function asynchronously. Send events that fail multiple times to the function's dead-letter queue (if it's configured). The API response only includes a status code.

- `DryRun` - Validate parameter values and verify that the user or role has permission to invoke the function.>
    void take
  take x-amz-log-type
    like native-string
    note <Set to `Tail` to include the execution log in the response.>
    void take
  take x-amz-client-context
    like native-string
    note <Up to 3583 bytes of base64-encoded data about the invoking client to pass to the function in the context object.>
    void take
  take qualifier
    like native-string
    note <Specify a version or alias to invoke a published version of the function.>
    void take
  take invoke-body, like invoke-body

  line </2015-03-31/functions/{function-name}/invocations>

  hint <X-Amz-Invocation-Type>, loan x-amz-invocation-type
  hint <X-Amz-Log-Type>, loan x-amz-log-type
  hint <X-Amz-Client-Context>, loan x-amz-client-context

  find <Qualifier>, loan qualifier

  seed json, loan invoke-body

  loot 200
    seed json, like invocation-response
    note <Success>
  loot 480
    seed json, like service-exception
    note <ServiceException>
  loot 481
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 482
    seed json, like invalid-request-content-exception
    note <InvalidRequestContentException>
  loot 483
    seed json, like request-too-large-exception
    note <RequestTooLargeException>
  loot 484
    seed json, like unsupported-media-type-exception
    note <UnsupportedMediaTypeException>
  loot 485
    seed json, like too-many-requests-exception
    note <TooManyRequestsException>
  loot 486
    seed json, like invalid-parameter-value-exception
    note <InvalidParameterValueException>
  loot 487
    seed json, like ec2-unexpected-exception
    note <EC2UnexpectedException>
  loot 488
    seed json, like subnet-ip-address-limit-reached-exception
    note <SubnetIPAddressLimitReachedException>
  loot 489
    seed json, like eni-limit-reached-exception
    note <ENILimitReachedException>
  loot 490
    seed json, like efs-mount-connectivity-exception
    note <EFSMountConnectivityException>
  loot 491
    seed json, like efs-mount-failure-exception
    note <EFSMountFailureException>
  loot 492
    seed json, like efs-mount-timeout-exception
    note <EFSMountTimeoutException>
  loot 493
    seed json, like efsio-exception
    note <EFSIOException>
  loot 494
    seed json, like ec2-throttled-exception
    note <EC2ThrottledException>
  loot 495
    seed json, like ec2-access-denied-exception
    note <EC2AccessDeniedException>
  loot 496
    seed json, like invalid-subnet-id-exception
    note <InvalidSubnetIDException>
  loot 497
    seed json, like invalid-security-group-id-exception
    note <InvalidSecurityGroupIDException>
  loot 498
    seed json, like invalid-zip-file-exception
    note <InvalidZipFileException>
  loot 499
    seed json, like kms-disabled-exception
    note <KMSDisabledException>
  loot 500
    seed json, like kms-invalid-state-exception
    note <KMSInvalidStateException>
  loot 501
    seed json, like kms-access-denied-exception
    note <KMSAccessDeniedException>
  loot 502
    seed json, like kms-not-found-exception
    note <KMSNotFoundException>
  loot 503
    seed json, like invalid-runtime-exception
    note <InvalidRuntimeException>
  loot 504
    seed json, like resource-conflict-exception
    note <ResourceConflictException>
  loot 505
    seed json, like resource-not-ready-exception
    note <ResourceNotReadyException>