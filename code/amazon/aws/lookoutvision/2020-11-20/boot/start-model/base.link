
load @nerdbond/snow/amazonaws.com/lookoutvision/2020-11-20/base/access-denied-exception
  take form access-denied-exception

load @nerdbond/snow/amazonaws.com/lookoutvision/2020-11-20/base/conflict-exception
  take form conflict-exception

load @nerdbond/snow/amazonaws.com/lookoutvision/2020-11-20/base/internal-server-exception
  take form internal-server-exception

load @nerdbond/snow/amazonaws.com/lookoutvision/2020-11-20/base/resource-not-found-exception
  take form resource-not-found-exception

load @nerdbond/snow/amazonaws.com/lookoutvision/2020-11-20/base/service-quota-exceeded-exception
  take form service-quota-exceeded-exception

load @nerdbond/snow/amazonaws.com/lookoutvision/2020-11-20/base/start-model-body
  take form start-model-body

load @nerdbond/snow/amazonaws.com/lookoutvision/2020-11-20/base/start-model-response
  take form start-model-response

load @nerdbond/snow/amazonaws.com/lookoutvision/2020-11-20/base/throttling-exception
  take form throttling-exception

load @nerdbond/snow/amazonaws.com/lookoutvision/2020-11-20/base/validation-exception
  take form validation-exception

load @nerdbond/snow/base/native-string
  take form native-string

boot start-model, name <StartModel>
  deed post
  note <Starts the running of the version of an Amazon Lookout for Vision model. Starting a model takes a while to complete. To check the current state of the model, use DescribeModel.

A model is ready to use when its status is `HOSTED`.

Once the model is running, you can detect custom labels in new images by calling DetectAnomalies.

You are charged for the amount of time that the model is running. To stop a running model, call StopModel.

This operation requires permissions to perform the `lookoutvision:StartModel` operation.>

  take project-name
    like native-string
    note <The name of the project that contains the model that you want to start.>
  take model-version
    like native-string
    note <The version of the model that you want to start.>
  take x-amzn-client-token
    like native-string
    note <ClientToken is an idempotency token that ensures a call to `StartModel` completes only once. You choose the value to pass. For example, An issue, such as an network outage, might prevent you from getting a response from `StartModel`. In this case, safely retry your call to `StartModel` by using the same `ClientToken` parameter value. An error occurs if the other input parameters are not the same as in the first request. Using a different value for `ClientToken` is considered a new call to `StartModel`. An idempotency token is active for 8 hours.>
    void take
  take start-model-body, like start-model-body

  line </2020-11-20/projects/{project-name}/models/{model-version}/start>

  hint <X-Amzn-Client-Token>, loan x-amzn-client-token

  seed json, loan start-model-body

  loot 202
    seed json, like start-model-response
    note <Success>
  loot 480
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 481
    seed json, like internal-server-exception
    note <InternalServerException>
  loot 482
    seed json, like validation-exception
    note <ValidationException>
  loot 483
    seed json, like conflict-exception
    note <ConflictException>
  loot 484
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 485
    seed json, like throttling-exception
    note <ThrottlingException>
  loot 486
    seed json, like service-quota-exceeded-exception
    note <ServiceQuotaExceededException>