
load @treesurf/snow/amazonaws.com/lookoutvision/2020-11-20/base/access-denied-exception
  take form access-denied-exception

load @treesurf/snow/amazonaws.com/lookoutvision/2020-11-20/base/conflict-exception
  take form conflict-exception

load @treesurf/snow/amazonaws.com/lookoutvision/2020-11-20/base/internal-server-exception
  take form internal-server-exception

load @treesurf/snow/amazonaws.com/lookoutvision/2020-11-20/base/list-dataset-entries-response
  take form list-dataset-entries-response

load @treesurf/snow/amazonaws.com/lookoutvision/2020-11-20/base/resource-not-found-exception
  take form resource-not-found-exception

load @treesurf/snow/amazonaws.com/lookoutvision/2020-11-20/base/throttling-exception
  take form throttling-exception

load @treesurf/snow/amazonaws.com/lookoutvision/2020-11-20/base/validation-exception
  take form validation-exception

load @treesurf/snow/base/native-boolean
  take form native-boolean

load @treesurf/snow/base/native-integer
  take form native-integer

load @treesurf/snow/base/native-string
  take form native-string

boot list-dataset-entries, name <ListDatasetEntries>
  deed get
  note <Lists the JSON Lines within a dataset. An Amazon Lookout for Vision JSON Line contains the anomaly information for a single image, including the image location and the assigned label.

This operation requires permissions to perform the `lookoutvision:ListDatasetEntries` operation.>

  take project-name
    like native-string
    note <The name of the project that contains the dataset that you want to list.>
  take dataset-type
    like native-string
    note <The type of the dataset that you want to list. Specify `train` to list the training dataset. Specify `test` to list the test dataset. If you have a single dataset project, specify `train`.>
  take labeled
    like native-boolean
    note <Specify `true` to include labeled entries, otherwise specify `false`. If you don't specify a value, Lookout for Vision returns all entries.>
    void take
  take anomaly-class
    like native-string
    note <Specify `normal` to include only normal images. Specify `anomaly` to only include anomalous entries. If you don't specify a value, Amazon Lookout for Vision returns normal and anomalous images.>
    void take
  take created-before
    like native-string
    note <Only includes entries before the specified date in the response. For example, `2020-06-23T00:00:00`.>
    void take
  take created-after
    like native-string
    note <Only includes entries after the specified date in the response. For example, `2020-06-23T00:00:00`.>
    void take
  take next-token
    like native-string
    note <If the previous response was incomplete (because there is more data to retrieve), Amazon Lookout for Vision returns a pagination token in the response. You can use this pagination token to retrieve the next set of dataset entries.>
    void take
  take max-results
    like native-integer
    note <The maximum number of results to return per paginated call. The largest value you can specify is 100. If you specify a value greater than 100, a ValidationException error occurs. The default value is 100.>
    void take
  take source-ref-contains
    like native-string
    note <Perform a "contains" search on the values of the `source-ref` key within the dataset. For example a value of "IMG_17" returns all JSON Lines where the `source-ref` key value matches _*IMG_17*_.>
    void take
  take max-results
    like native-string
    note <Pagination limit>
    void take
  take next-token
    like native-string
    note <Pagination token>
    void take

  line </2020-11-20/projects/{project-name}/datasets/{dataset-type}/entries>

  find <labeled>, loan labeled
  find <anomalyClass>, loan anomaly-class
  find <createdBefore>, loan created-before
  find <createdAfter>, loan created-after
  find <nextToken>, loan next-token
  find <maxResults>, loan max-results
  find <sourceRefContains>, loan source-ref-contains
  find <MaxResults>, loan max-results
  find <NextToken>, loan next-token

  loot 200
    seed json, like list-dataset-entries-response
    note <Success>
  loot 480
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 481
    seed json, like internal-server-exception
    note <InternalServerException>
  loot 482
    seed json, like validation-exception
    note <ValidationException>
  loot 483
    seed json, like conflict-exception
    note <ConflictException>
  loot 484
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 485
    seed json, like throttling-exception
    note <ThrottlingException>