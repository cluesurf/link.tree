
load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/arn
  take form arn

load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/home-directory
  take form home-directory

load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/home-directory-mappings
  take form home-directory-mappings

load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/home-directory-type
  take form home-directory-type

load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/policy
  take form policy

load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/posix-profile
  take form posix-profile

load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/role
  take form role

load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/ssh-public-keys
  take form ssh-public-keys

load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/tags
  take form tags

load @wavebond/snow/amazonaws.com/transfer/2018-11-05/base/user-name
  take form user-name

form described-user, name <DescribedUser>
  note <Describes the properties of a user that was specified.>
  take arn, name <Arn>
    like arn
    note <Specifies the unique Amazon Resource Name (ARN) for the user that was requested to be described.>
  take home-directory, name <HomeDirectory>
    like home-directory
    void take
    note <The landing directory (folder) for a user when they log in to the server using the client.

A `HomeDirectory` example is `/bucket_name/home/mydirectory`.>
  take home-directory-mappings, name <HomeDirectoryMappings>
    like home-directory-mappings
    void take
    note <Logical directory mappings that specify what Amazon S3 or Amazon EFS paths and keys should be visible to your user and how you want to make them visible. You must specify the `Entry` and `Target` pair, where `Entry` shows how the path is made visible and `Target` is the actual Amazon S3 or Amazon EFS path. If you only specify a target, it is displayed as is. You also must ensure that your Amazon Web Services Identity and Access Management (IAM) role provides access to paths in `Target`. This value can only be set when `HomeDirectoryType` is set to _LOGICAL_.

In most cases, you can use this value instead of the session policy to lock your user down to the designated home directory ("`chroot`"). To do this, you can set `Entry` to '/' and set `Target` to the HomeDirectory parameter value.>
  take home-directory-type, name <HomeDirectoryType>
    like home-directory-type
    void take
    note <The type of landing directory (folder) you want your users' home directory to be when they log into the server. If you set it to `PATH`, the user will see the absolute Amazon S3 bucket or EFS paths as is in their file transfer protocol clients. If you set it `LOGICAL`, you need to provide mappings in the `HomeDirectoryMappings` for how you want to make Amazon S3 or EFS paths visible to your users.>
  take policy, name <Policy>
    like policy
    void take
    note <A session policy for your user so that you can use the same IAM role across multiple users. This policy scopes down user access to portions of their Amazon S3 bucket. Variables that you can use inside this policy include `${Transfer:UserName}`, `${Transfer:HomeDirectory}`, and `${Transfer:HomeBucket}`.>
  take posix-profile, name <PosixProfile>
    like posix-profile
    void take
    note <Specifies the full POSIX identity, including user ID (`Uid`), group ID (`Gid`), and any secondary groups IDs (`SecondaryGids`), that controls your users' access to your Amazon Elastic File System (Amazon EFS) file systems. The POSIX permissions that are set on files and directories in your file system determine the level of access your users get when transferring files into and out of your Amazon EFS file systems.>
  take role, name <Role>
    like role
    void take
    note <Specifies the Amazon Resource Name (ARN) of the IAM role that controls your users' access to your Amazon S3 bucket or EFS file system. The policies attached to this role determine the level of access that you want to provide your users when transferring files into and out of your Amazon S3 bucket or EFS file system. The IAM role should also contain a trust relationship that allows the server to access your resources when servicing your users' transfer requests.>
  take ssh-public-keys, name <SshPublicKeys>
    like ssh-public-keys
    void take
    note <Specifies the public key portion of the Secure Shell (SSH) keys stored for the described user.>
  take tags, name <Tags>
    like tags
    void take
    note <Specifies the key-value pairs for the user requested. Tag can be used to search for and group users for a variety of purposes.>
  take user-name, name <UserName>
    like user-name
    void take
    note <Specifies the name of the user that was requested to be described. User names are used for authentication purposes. This is the string that will be used by your user when they log in to your server.>