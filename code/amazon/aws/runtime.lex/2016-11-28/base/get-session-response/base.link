
load @textsurf/snow/amazonaws.com/runtime.lex/2016-11-28/base/active-contexts-list
  take form active-contexts-list

load @textsurf/snow/amazonaws.com/runtime.lex/2016-11-28/base/dialog-action
  take form dialog-action

load @textsurf/snow/amazonaws.com/runtime.lex/2016-11-28/base/intent-summary-list
  take form intent-summary-list

load @textsurf/snow/amazonaws.com/runtime.lex/2016-11-28/base/string-map
  take form string-map

load @textsurf/snow/base/string
  take form string

form get-session-response, name <GetSessionResponse>
  take recent-intent-summary-view, name <recentIntentSummaryView>
    like intent-summary-list
    void take
    note <An array of information about the intents used in the session. The array can contain a maximum of three summaries. If more than three intents are used in the session, the `recentIntentSummaryView` operation contains information about the last three intents used.

If you set the `checkpointLabelFilter` parameter in the request, the array contains only the intents with the specified label.>
  take session-attributes, name <sessionAttributes>
    like string-map
    void take
    note <Map of key/value pairs representing the session-specific context information. It contains application information passed between Amazon Lex and a client application.>
  take session-id, name <sessionId>
    like string
    void take
    note <A unique identifier for the session.>
  take dialog-action, name <dialogAction>
    like dialog-action
    void take
    note <Describes the current state of the bot.>
  take active-contexts, name <activeContexts>
    like active-contexts-list
    void take
    note <A list of active contexts for the session. A context can be set when an intent is fulfilled or by calling the `PostContent`, `PostText`, or `PutSession` operation.

You can use a context to control the intents that can follow up an intent, or to modify the operation of your application.>