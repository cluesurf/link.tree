
load @termsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/client-token-string
  take form client-token-string

load @termsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/lambda-function-recipe-source
  take form lambda-function-recipe-source

load @termsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/recipe-blob
  take form recipe-blob

load @termsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/tag-map
  take form tag-map

form create-component-version-request, name <CreateComponentVersionRequest>
  take inline-recipe, name <inlineRecipe>
    like recipe-blob
    void take
    note <The recipe to use to create the component. The recipe defines the component's metadata, parameters, dependencies, lifecycle, artifacts, and platform compatibility.

You must specify either `inlineRecipe` or `lambdaFunction`.>
  take lambda-function, name <lambdaFunction>
    like lambda-function-recipe-source
    void take
    note <The parameters to create a component from a Lambda function.

You must specify either `inlineRecipe` or `lambdaFunction`.>
  take tags, name <tags>
    like tag-map
    void take
    note <A list of key-value pairs that contain metadata for the resource. For more information, see [Tag your resources](https://docs.aws.amazon.com/greengrass/v2/developerguide/tag-resources.html) in the _IoT Greengrass V2 Developer Guide_.>
  take client-token, name <clientToken>
    like client-token-string
    void take
    note <A unique, case-sensitive identifier that you can provide to ensure that the request is idempotent. Idempotency means that the request is successfully processed only once, even if you send the request multiple times. When a request succeeds, and you specify the same client token for subsequent successful requests, the IoT Greengrass V2 service returns the successful response that it caches from the previous request. IoT Greengrass V2 caches successful responses for idempotent requests for up to 8 hours.>