
load @textsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/access-denied-exception
  take form access-denied-exception

load @textsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/conflict-exception
  take form conflict-exception

load @textsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/create-component-version-body
  take form create-component-version-body

load @textsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/create-component-version-response
  take form create-component-version-response

load @textsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/internal-server-exception
  take form internal-server-exception

load @textsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/request-already-in-progress-exception
  take form request-already-in-progress-exception

load @textsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/service-quota-exceeded-exception
  take form service-quota-exceeded-exception

load @textsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/throttling-exception
  take form throttling-exception

load @textsurf/snow/amazonaws.com/greengrassv2/2020-11-30/base/validation-exception
  take form validation-exception

boot create-component-version, name <CreateComponentVersion>
  deed post
  note <Creates a component. Components are software that run on Greengrass core devices. After you develop and test a component on your core device, you can use this operation to upload your component to IoT Greengrass. Then, you can deploy the component to other core devices.

You can use this operation to do the following:

- **Create components from recipes** Create a component from a recipe, which is a file that defines the component's metadata, parameters, dependencies, lifecycle, artifacts, and platform capability. For more information, see [IoT Greengrass component recipe reference](https://docs.aws.amazon.com/greengrass/v2/developerguide/component-recipe-reference.html) in the _IoT Greengrass V2 Developer Guide_.

  To create a component from a recipe, specify `inlineRecipe` when you call this operation.

- **Create components from Lambda functions** Create a component from an Lambda function that runs on IoT Greengrass. This creates a recipe and artifacts from the Lambda function's deployment package. You can use this operation to migrate Lambda functions from IoT Greengrass V1 to IoT Greengrass V2.

  This function only accepts Lambda functions that use the following runtimes:

  - Python 2.7 - `python2.7`

  - Python 3.7 - `python3.7`

  - Python 3.8 - `python3.8`

  - Java 8 - `java8`

  - Node.js 10 - `nodejs10.x`

  - Node.js 12 - `nodejs12.x`

  To create a component from a Lambda function, specify `lambdaFunction` when you call this operation.>

  take create-component-version-body, like create-component-version-body

  line </greengrass/v2/createComponentVersion>

  seed json, loan create-component-version-body

  loot 201
    seed json, like create-component-version-response
    note <Success>
  loot 480
    seed json, like validation-exception
    note <ValidationException>
  loot 481
    seed json, like service-quota-exceeded-exception
    note <ServiceQuotaExceededException>
  loot 482
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 483
    seed json, like conflict-exception
    note <ConflictException>
  loot 484
    seed json, like throttling-exception
    note <ThrottlingException>
  loot 485
    seed json, like internal-server-exception
    note <InternalServerException>
  loot 486
    seed json, like request-already-in-progress-exception
    note <RequestAlreadyInProgressException>