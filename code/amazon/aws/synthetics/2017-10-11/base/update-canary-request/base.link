
load @tunebond/snow/amazonaws.com/synthetics/2017-10-11/base/canary-code-input
  take form canary-code-input

load @tunebond/snow/amazonaws.com/synthetics/2017-10-11/base/canary-run-config-input
  take form canary-run-config-input

load @tunebond/snow/amazonaws.com/synthetics/2017-10-11/base/canary-schedule-input
  take form canary-schedule-input

load @tunebond/snow/amazonaws.com/synthetics/2017-10-11/base/max-size1024
  take form max-size1024

load @tunebond/snow/amazonaws.com/synthetics/2017-10-11/base/role-arn
  take form role-arn

load @tunebond/snow/amazonaws.com/synthetics/2017-10-11/base/visual-reference-input
  take form visual-reference-input

load @tunebond/snow/amazonaws.com/synthetics/2017-10-11/base/vpc-config-input
  take form vpc-config-input

load @tunebond/snow/base/string
  take form string

form update-canary-request, name <UpdateCanaryRequest>
  take code, name <Code>
    like canary-code-input
    void take
    note <A structure that includes the entry point from which the canary should start running your script. If the script is stored in an S3 bucket, the bucket name, key, and version are also included.>
  take execution-role-arn, name <ExecutionRoleArn>
    like role-arn
    void take
    note <The ARN of the IAM role to be used to run the canary. This role must already exist, and must include `lambda.amazonaws.com` as a principal in the trust policy. The role must also have the following permissions:

- `s3:PutObject`

- `s3:GetBucketLocation`

- `s3:ListAllMyBuckets`

- `cloudwatch:PutMetricData`

- `logs:CreateLogGroup`

- `logs:CreateLogStream`

- `logs:CreateLogStream`>
  take runtime-version, name <RuntimeVersion>
    like string
    void take
    note <Specifies the runtime version to use for the canary. For a list of valid runtime versions and for more information about runtime versions, see [Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).>
  take schedule, name <Schedule>
    like canary-schedule-input
    void take
    note <A structure that contains information about how often the canary is to run, and when these runs are to stop.>
  take run-config, name <RunConfig>
    like canary-run-config-input
    void take
    note <A structure that contains the timeout value that is used for each individual run of the canary.>
  take success-retention-period-in-days, name <SuccessRetentionPeriodInDays>
    like max-size1024
    void take
    note <The number of days to retain data about successful runs of this canary.>
  take failure-retention-period-in-days, name <FailureRetentionPeriodInDays>
    like max-size1024
    void take
    note <The number of days to retain data about failed runs of this canary.>
  take vpc-config, name <VpcConfig>
    like vpc-config-input
    void take
    note <If this canary is to test an endpoint in a VPC, this structure contains information about the subnet and security groups of the VPC endpoint. For more information, see [Running a Canary in a VPC](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_VPC.html).>
  take visual-reference, name <VisualReference>
    like visual-reference-input
    void take
    note <Defines the screenshots to use as the baseline for comparisons during visual monitoring comparisons during future runs of this canary. If you omit this parameter, no changes are made to any baseline screenshots that the canary might be using already.

Visual monitoring is supported only on canaries running the **syn-puppeteer-node-3.2** runtime or later. For more information, see [Visual monitoring](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Library_SyntheticsLogger_VisualTesting.html) and [Visual monitoring blueprint](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Blueprints_VisualTesting.html)>