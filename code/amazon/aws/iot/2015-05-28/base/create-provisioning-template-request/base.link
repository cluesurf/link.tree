
load @drumwork/snow/amazonaws.com/iot/2015-05-28/base/enabled
  take form enabled

load @drumwork/snow/amazonaws.com/iot/2015-05-28/base/provisioning-hook
  take form provisioning-hook

load @drumwork/snow/amazonaws.com/iot/2015-05-28/base/role-arn
  take form role-arn

load @drumwork/snow/amazonaws.com/iot/2015-05-28/base/tag-list
  take form tag-list

load @drumwork/snow/amazonaws.com/iot/2015-05-28/base/template-body
  take form template-body

load @drumwork/snow/amazonaws.com/iot/2015-05-28/base/template-description
  take form template-description

load @drumwork/snow/amazonaws.com/iot/2015-05-28/base/template-name
  take form template-name

form create-provisioning-template-request, name <CreateProvisioningTemplateRequest>
  take template-name, name <templateName>
    like template-name
    note <The name of the fleet provisioning template.>
  take description, name <description>
    like template-description
    void take
    note <The description of the fleet provisioning template.>
  take template-body, name <templateBody>
    like template-body
    note <The JSON formatted contents of the fleet provisioning template.>
  take enabled, name <enabled>
    like enabled
    void take
    note <True to enable the fleet provisioning template, otherwise false.>
  take provisioning-role-arn, name <provisioningRoleArn>
    like role-arn
    note <The role ARN for the role associated with the fleet provisioning template. This IoT role grants permission to provision a device.>
  take pre-provisioning-hook, name <preProvisioningHook>
    like provisioning-hook
    void take
    note <Creates a pre-provisioning hook template.>
  take tags, name <tags>
    like tag-list
    void take
    note <Metadata which can be used to manage the fleet provisioning template.

For URI Request parameters use format: ...key1=value1&key2=value2...

For the CLI command-line parameter use format: &&tags "key1=value1&key2=value2..."

For the cli-input-json file use format: "tags": "key1=value1&key2=value2...">