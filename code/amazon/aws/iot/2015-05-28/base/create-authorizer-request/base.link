
load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/authorizer-function-arn
  take form authorizer-function-arn

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/authorizer-status
  take form authorizer-status

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/boolean-key
  take form boolean-key

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/public-key-map
  take form public-key-map

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/tag-list
  take form tag-list

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/token-key-name
  take form token-key-name

form create-authorizer-request, name <CreateAuthorizerRequest>
  take authorizer-function-arn, name <authorizerFunctionArn>
    like authorizer-function-arn
    note <The ARN of the authorizer's Lambda function.>
  take token-key-name, name <tokenKeyName>
    like token-key-name
    void take
    note <The name of the token key used to extract the token from the HTTP headers.>
  take token-signing-public-keys, name <tokenSigningPublicKeys>
    like public-key-map
    void take
    note <The public keys used to verify the digital signature returned by your custom authentication service.>
  take status, name <status>
    like authorizer-status
    void take
    note <The status of the create authorizer request.>
  take tags, name <tags>
    like tag-list
    void take
    note <Metadata which can be used to manage the custom authorizer.

For URI Request parameters use format: ...key1=value1&key2=value2...

For the CLI command-line parameter use format: &&tags "key1=value1&key2=value2..."

For the cli-input-json file use format: "tags": "key1=value1&key2=value2...">
  take signing-disabled, name <signingDisabled>
    like boolean-key
    void take
    note <Specifies whether IoT validates the token signature in an authorization request.>