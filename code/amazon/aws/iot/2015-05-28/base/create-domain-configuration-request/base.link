
load @textsurf/snow/amazonaws.com/iot/2015-05-28/base/acm-certificate-arn
  take form acm-certificate-arn

load @textsurf/snow/amazonaws.com/iot/2015-05-28/base/authorizer-config
  take form authorizer-config

load @textsurf/snow/amazonaws.com/iot/2015-05-28/base/domain-name
  take form domain-name

load @textsurf/snow/amazonaws.com/iot/2015-05-28/base/server-certificate-arns
  take form server-certificate-arns

load @textsurf/snow/amazonaws.com/iot/2015-05-28/base/service-type
  take form service-type

load @textsurf/snow/amazonaws.com/iot/2015-05-28/base/tag-list
  take form tag-list

form create-domain-configuration-request, name <CreateDomainConfigurationRequest>
  take domain-name, name <domainName>
    like domain-name
    void take
    note <The name of the domain.>
  take server-certificate-arns, name <serverCertificateArns>
    like server-certificate-arns
    void take
    note <The ARNs of the certificates that IoT passes to the device during the TLS handshake. Currently you can specify only one certificate ARN. This value is not required for Amazon Web Services-managed domains.>
  take validation-certificate-arn, name <validationCertificateArn>
    like acm-certificate-arn
    void take
    note <The certificate used to validate the server certificate and prove domain name ownership. This certificate must be signed by a public certificate authority. This value is not required for Amazon Web Services-managed domains.>
  take authorizer-config, name <authorizerConfig>
    like authorizer-config
    void take
    note <An object that specifies the authorization service for a domain.>
  take service-type, name <serviceType>
    like service-type
    void take
    note <The type of service delivered by the endpoint.

Amazon Web Services IoT Core currently supports only the `DATA` service type.>
  take tags, name <tags>
    like tag-list
    void take
    note <Metadata which can be used to manage the domain configuration.

For URI Request parameters use format: ...key1=value1&key2=value2...

For the CLI command-line parameter use format: &&tags "key1=value1&key2=value2..."

For the cli-input-json file use format: "tags": "key1=value1&key2=value2...">