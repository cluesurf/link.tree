
load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/aws-arn
  take form aws-arn

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/dynamo-key-type
  take form dynamo-key-type

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/dynamo-operation
  take form dynamo-operation

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/hash-key-field
  take form hash-key-field

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/hash-key-value
  take form hash-key-value

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/payload-field
  take form payload-field

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/range-key-field
  take form range-key-field

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/range-key-value
  take form range-key-value

load @tunebond/snow/amazonaws.com/iot/2015-05-28/base/table-name
  take form table-name

form dynamo-db-action, name <DynamoDBAction>
  note <Describes an action to write to a DynamoDB table.

The `tableName`, `hashKeyField`, and `rangeKeyField` values must match the values used when you created the table.

The `hashKeyValue` and `rangeKeyvalue` fields use a substitution template syntax. These templates provide data at runtime. The syntax is as follows: ${_sql-expression_}.

You can specify any valid expression in a WHERE or SELECT clause, including JSON properties, comparisons, calculations, and functions. For example, the following field uses the third level of the topic:

`"hashKeyValue": "${topic(3)}"`

The following field uses the timestamp:

`"rangeKeyValue": "${timestamp()}"`>
  take table-name, name <tableName>
    like table-name
    note <The name of the DynamoDB table.>
  take role-arn, name <roleArn>
    like aws-arn
    note <The ARN of the IAM role that grants access to the DynamoDB table.>
  take operation, name <operation>
    like dynamo-operation
    void take
    note <The type of operation to be performed. This follows the substitution template, so it can be `${operation}`, but the substitution must result in one of the following: `INSERT`, `UPDATE`, or `DELETE`.>
  take hash-key-field, name <hashKeyField>
    like hash-key-field
    note <The hash key name.>
  take hash-key-value, name <hashKeyValue>
    like hash-key-value
    note <The hash key value.>
  take hash-key-type, name <hashKeyType>
    like dynamo-key-type
    void take
    note <The hash key type. Valid values are "STRING" or "NUMBER">
  take range-key-field, name <rangeKeyField>
    like range-key-field
    void take
    note <The range key name.>
  take range-key-value, name <rangeKeyValue>
    like range-key-value
    void take
    note <The range key value.>
  take range-key-type, name <rangeKeyType>
    like dynamo-key-type
    void take
    note <The range key type. Valid values are "STRING" or "NUMBER">
  take payload-field, name <payloadField>
    like payload-field
    void take
    note <The action payload. This name can be customized.>