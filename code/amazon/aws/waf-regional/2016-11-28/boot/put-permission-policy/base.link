
load @nerdbond/snow/amazonaws.com/waf-regional/2016-11-28/base/put-permission-policy-response
  take form put-permission-policy-response

load @nerdbond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-internal-error-exception
  take form waf-internal-error-exception

load @nerdbond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-invalid-permission-policy-exception
  take form waf-invalid-permission-policy-exception

load @nerdbond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-nonexistent-item-exception
  take form waf-nonexistent-item-exception

load @nerdbond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-stale-data-exception
  take form waf-stale-data-exception

load @nerdbond/snow/base/native-string
  take form native-string

boot put-permission-policy, name <PutPermissionPolicy>
  deed post
  note <This is **AWS WAF Classic** documentation. For more information, see [AWS WAF Classic](https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html) in the developer guide.

**For the latest version of AWS WAF**, use the AWS WAFV2 API and see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html). With the latest version, AWS WAF has a single set of endpoints for regional and global use.

Attaches an IAM policy to the specified resource. The only supported use for this action is to share a RuleGroup across accounts.

The `PutPermissionPolicy` is subject to the following restrictions:

- You can attach only one policy with each `PutPermissionPolicy` request.

- The policy must include an `Effect`, `Action` and `Principal`.

- `Effect` must specify `Allow`.

- The `Action` in the policy must be `waf:UpdateWebACL`, `waf-regional:UpdateWebACL`, `waf:GetRuleGroup` and `waf-regional:GetRuleGroup` . Any extra or wildcard actions in the policy will be rejected.

- The policy cannot include a `Resource` parameter.

- The ARN in the request must be a valid WAF RuleGroup ARN and the RuleGroup must exist in the same region.

- The user making the request must be the owner of the RuleGroup.

- Your policy must be composed using IAM Policy version 2012-10-17.

For more information, see [IAM Policies](https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html).

An example of a valid policy parameter is shown in the Examples section below.>

  take x-amz-target
    like native-string
  take put-permission-policy-request, like put-permission-policy-request

  line </#X-Amz-Target=AWSWAF_Regional_20161128.PutPermissionPolicy>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan put-permission-policy-request

  loot 200
    seed json, like put-permission-policy-response
    note <Success>
  loot 480
    seed json, like waf-internal-error-exception
    note <WAFInternalErrorException>
  loot 481
    seed json, like waf-stale-data-exception
    note <WAFStaleDataException>
  loot 482
    seed json, like waf-nonexistent-item-exception
    note <WAFNonexistentItemException>
  loot 483
    seed json, like waf-invalid-permission-policy-exception
    note <WAFInvalidPermissionPolicyException>