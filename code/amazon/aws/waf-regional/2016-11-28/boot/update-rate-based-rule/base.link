
load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/update-rate-based-rule-response
  take form update-rate-based-rule-response

load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-internal-error-exception
  take form waf-internal-error-exception

load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-invalid-account-exception
  take form waf-invalid-account-exception

load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-invalid-operation-exception
  take form waf-invalid-operation-exception

load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-invalid-parameter-exception
  take form waf-invalid-parameter-exception

load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-limits-exceeded-exception
  take form waf-limits-exceeded-exception

load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-nonexistent-container-exception
  take form waf-nonexistent-container-exception

load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-nonexistent-item-exception
  take form waf-nonexistent-item-exception

load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-referenced-item-exception
  take form waf-referenced-item-exception

load @tunebond/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-stale-data-exception
  take form waf-stale-data-exception

load @tunebond/snow/base/native-string
  take form native-string

boot update-rate-based-rule, name <UpdateRateBasedRule>
  deed post
  note <This is **AWS WAF Classic** documentation. For more information, see [AWS WAF Classic](https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html) in the developer guide.

**For the latest version of AWS WAF**, use the AWS WAFV2 API and see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html). With the latest version, AWS WAF has a single set of endpoints for regional and global use.

Inserts or deletes Predicate objects in a rule and updates the `RateLimit` in the rule.

Each `Predicate` object identifies a predicate, such as a ByteMatchSet or an IPSet, that specifies the web requests that you want to block or count. The `RateLimit` specifies the number of requests every five minutes that triggers the rule.

If you add more than one predicate to a `RateBasedRule`, a request must match all the predicates and exceed the `RateLimit` to be counted or blocked. For example, suppose you add the following to a `RateBasedRule`:

- An `IPSet` that matches the IP address `192.0.2.44/32`

- A `ByteMatchSet` that matches `BadBot` in the `User-Agent` header

Further, you specify a `RateLimit` of 1,000.

You then add the `RateBasedRule` to a `WebACL` and specify that you want to block requests that satisfy the rule. For a request to be blocked, it must come from the IP address 192.0.2.44 _and_ the `User-Agent` header in the request must contain the value `BadBot`. Further, requests that match these two conditions much be received at a rate of more than 1,000 every five minutes. If the rate drops below this limit, AWS WAF no longer blocks the requests.

As a second example, suppose you want to limit requests to a particular page on your site. To do this, you could add the following to a `RateBasedRule`:

- A `ByteMatchSet` with `FieldToMatch` of `URI`

- A `PositionalConstraint` of `STARTS_WITH`

- A `TargetString` of `login`

Further, you specify a `RateLimit` of 1,000.

By adding this `RateBasedRule` to a `WebACL`, you could limit requests to your login page without affecting the rest of your site.>

  take x-amz-target
    like native-string
  take update-rate-based-rule-request, like update-rate-based-rule-request

  line </#X-Amz-Target=AWSWAF_Regional_20161128.UpdateRateBasedRule>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan update-rate-based-rule-request

  loot 200
    seed json, like update-rate-based-rule-response
    note <Success>
  loot 480
    seed json, like waf-stale-data-exception
    note <WAFStaleDataException>
  loot 481
    seed json, like waf-internal-error-exception
    note <WAFInternalErrorException>
  loot 482
    seed json, like waf-invalid-account-exception
    note <WAFInvalidAccountException>
  loot 483
    seed json, like waf-invalid-operation-exception
    note <WAFInvalidOperationException>
  loot 484
    seed json, like waf-invalid-parameter-exception
    note <WAFInvalidParameterException>
  loot 485
    seed json, like waf-nonexistent-container-exception
    note <WAFNonexistentContainerException>
  loot 486
    seed json, like waf-nonexistent-item-exception
    note <WAFNonexistentItemException>
  loot 487
    seed json, like waf-referenced-item-exception
    note <WAFReferencedItemException>
  loot 488
    seed json, like waf-limits-exceeded-exception
    note <WAFLimitsExceededException>