
load @drumwork/snow/amazonaws.com/waf-regional/2016-11-28/base/create-rule-response
  take form create-rule-response

load @drumwork/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-bad-request-exception
  take form waf-bad-request-exception

load @drumwork/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-disallowed-name-exception
  take form waf-disallowed-name-exception

load @drumwork/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-internal-error-exception
  take form waf-internal-error-exception

load @drumwork/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-invalid-parameter-exception
  take form waf-invalid-parameter-exception

load @drumwork/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-limits-exceeded-exception
  take form waf-limits-exceeded-exception

load @drumwork/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-stale-data-exception
  take form waf-stale-data-exception

load @drumwork/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-tag-operation-exception
  take form waf-tag-operation-exception

load @drumwork/snow/amazonaws.com/waf-regional/2016-11-28/base/waf-tag-operation-internal-error-exception
  take form waf-tag-operation-internal-error-exception

load @drumwork/snow/base/native-string
  take form native-string

boot create-rule, name <CreateRule>
  deed post
  note <This is **AWS WAF Classic** documentation. For more information, see [AWS WAF Classic](https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html) in the developer guide.

**For the latest version of AWS WAF**, use the AWS WAFV2 API and see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html). With the latest version, AWS WAF has a single set of endpoints for regional and global use.

Creates a `Rule`, which contains the `IPSet` objects, `ByteMatchSet` objects, and other predicates that identify the requests that you want to block. If you add more than one predicate to a `Rule`, a request must match all of the specifications to be allowed or blocked. For example, suppose that you add the following to a `Rule`:

- An `IPSet` that matches the IP address `192.0.2.44/32`

- A `ByteMatchSet` that matches `BadBot` in the `User-Agent` header

You then add the `Rule` to a `WebACL` and specify that you want to blocks requests that satisfy the `Rule`. For a request to be blocked, it must come from the IP address 192.0.2.44 _and_ the `User-Agent` header in the request must contain the value `BadBot`.

To create and configure a `Rule`, perform the following steps:

1. Create and update the predicates that you want to include in the `Rule`. For more information, see CreateByteMatchSet, CreateIPSet, and CreateSqlInjectionMatchSet.

2. Use GetChangeToken to get the change token that you provide in the `ChangeToken` parameter of a `CreateRule` request.

3. Submit a `CreateRule` request.

4. Use `GetChangeToken` to get the change token that you provide in the `ChangeToken` parameter of an UpdateRule request.

5. Submit an `UpdateRule` request to specify the predicates that you want to include in the `Rule`.

6. Create and update a `WebACL` that contains the `Rule`. For more information, see CreateWebACL.

For more information about how to use the AWS WAF API to allow or block HTTP requests, see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/).>

  take x-amz-target
    like native-string
  take create-rule-request, like create-rule-request

  line </#X-Amz-Target=AWSWAF_Regional_20161128.CreateRule>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-rule-request

  loot 200
    seed json, like create-rule-response
    note <Success>
  loot 480
    seed json, like waf-stale-data-exception
    note <WAFStaleDataException>
  loot 481
    seed json, like waf-internal-error-exception
    note <WAFInternalErrorException>
  loot 482
    seed json, like waf-disallowed-name-exception
    note <WAFDisallowedNameException>
  loot 483
    seed json, like waf-invalid-parameter-exception
    note <WAFInvalidParameterException>
  loot 484
    seed json, like waf-limits-exceeded-exception
    note <WAFLimitsExceededException>
  loot 485
    seed json, like waf-tag-operation-exception
    note <WAFTagOperationException>
  loot 486
    seed json, like waf-tag-operation-internal-error-exception
    note <WAFTagOperationInternalErrorException>
  loot 487
    seed json, like waf-bad-request-exception
    note <WAFBadRequestException>