
load @treesurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/arn
  take form arn

load @treesurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/association-id
  take form association-id

load @treesurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/connection-arn
  take form connection-arn

load @treesurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/name
  take form name

load @treesurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/owner
  take form owner

load @treesurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/provider-type
  take form provider-type

load @treesurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/repository-association-state
  take form repository-association-state

load @treesurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/time-stamp
  take form time-stamp

form repository-association-summary, name <RepositoryAssociationSummary>
  note <Summary information about a repository association. The [`ListRepositoryAssociations`](https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html) operation returns a list of `RepositoryAssociationSummary` objects.>
  take association-arn, name <AssociationArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the [`RepositoryAssociation`](https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_RepositoryAssociation.html) object. You can retrieve this ARN by calling [`ListRepositoryAssociations`](https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_ListRepositoryAssociations.html) .>
  take connection-arn, name <ConnectionArn>
    like connection-arn
    void take
    note <The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar Connections connection. Its format is `arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id`. For more information, see [`Connection`](https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html) in the _Amazon Web Services CodeStar Connections API Reference_.>
  take last-updated-time-stamp, name <LastUpdatedTimeStamp>
    like time-stamp
    void take
    note <The time, in milliseconds since the epoch, since the repository association was last updated.>
  take association-id, name <AssociationId>
    like association-id
    void take
    note <The repository association ID.>
  take name, name <Name>
    like name
    void take
    note <The name of the repository association.>
  take owner, name <Owner>
    like owner
    void take
    note <The owner of the repository. For an Amazon Web Services CodeCommit repository, this is the Amazon Web Services account ID of the account that owns the repository. For a GitHub, GitHub Enterprise Server, or Bitbucket repository, this is the username for the account that owns the repository. For an S3 repository, it can be the username or Amazon Web Services account ID.>
  take provider-type, name <ProviderType>
    like provider-type
    void take
    note <The provider type of the repository association.>
  take state, name <State>
    like repository-association-state
    void take
    note <The state of the repository association.

The valid repository association states are:

- **Associated**: The repository association is complete.

- **Associating**: CodeGuru Reviewer is:

  - Setting up pull request notifications. This is required for pull requests to trigger a CodeGuru Reviewer review.

    If your repository `ProviderType` is `GitHub`, `GitHub Enterprise Server`, or `Bitbucket`, CodeGuru Reviewer creates webhooks in your repository to trigger CodeGuru Reviewer reviews. If you delete these webhooks, reviews of code in your repository cannot be triggered.

  - Setting up source code access. This is required for CodeGuru Reviewer to securely clone code in your repository.

- **Failed**: The repository failed to associate or disassociate.

- **Disassociating**: CodeGuru Reviewer is removing the repository's pull request notifications and source code access.

- **Disassociated**: CodeGuru Reviewer successfully disassociated the repository. You can create a new association with this repository if you want to review source code in it later. You can control access to code reviews created in an associated repository with tags after it has been disassociated. For more information, see [Using tags to control access to associated repositories](https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html) in the _Amazon CodeGuru Reviewer User Guide_.>