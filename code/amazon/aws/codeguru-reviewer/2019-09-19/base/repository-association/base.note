
load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/arn
  take form arn

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/association-id
  take form association-id

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/connection-arn
  take form connection-arn

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/kms-key-details
  take form kms-key-details

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/name
  take form name

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/owner
  take form owner

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/provider-type
  take form provider-type

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/repository-association-state
  take form repository-association-state

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/s3-repository-details
  take form s3-repository-details

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/state-reason
  take form state-reason

load @termsurf/snow/amazonaws.com/codeguru-reviewer/2019-09-19/base/time-stamp
  take form time-stamp

form repository-association, name <RepositoryAssociation>
  note <Information about a repository association. The [`DescribeRepositoryAssociation`](https://docs.aws.amazon.com/codeguru/latest/reviewer-api/API_DescribeRepositoryAssociation.html) operation returns a `RepositoryAssociation` object.>
  take association-id, name <AssociationId>
    like association-id
    void take
    note <The ID of the repository association.>
  take association-arn, name <AssociationArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) identifying the repository association.>
  take connection-arn, name <ConnectionArn>
    like connection-arn
    void take
    note <The Amazon Resource Name (ARN) of an Amazon Web Services CodeStar Connections connection. Its format is `arn:aws:codestar-connections:region-id:aws-account_id:connection/connection-id`. For more information, see [`Connection`](https://docs.aws.amazon.com/codestar-connections/latest/APIReference/API_Connection.html) in the _Amazon Web Services CodeStar Connections API Reference_.>
  take name, name <Name>
    like name
    void take
    note <The name of the repository.>
  take owner, name <Owner>
    like owner
    void take
    note <The owner of the repository. For an Amazon Web Services CodeCommit repository, this is the Amazon Web Services account ID of the account that owns the repository. For a GitHub, GitHub Enterprise Server, or Bitbucket repository, this is the username for the account that owns the repository. For an S3 repository, it can be the username or Amazon Web Services account ID.>
  take provider-type, name <ProviderType>
    like provider-type
    void take
    note <The provider type of the repository association.>
  take state, name <State>
    like repository-association-state
    void take
    note <The state of the repository association.

The valid repository association states are:

- **Associated**: The repository association is complete.

- **Associating**: CodeGuru Reviewer is:

  - Setting up pull request notifications. This is required for pull requests to trigger a CodeGuru Reviewer review.

    If your repository `ProviderType` is `GitHub`, `GitHub Enterprise Server`, or `Bitbucket`, CodeGuru Reviewer creates webhooks in your repository to trigger CodeGuru Reviewer reviews. If you delete these webhooks, reviews of code in your repository cannot be triggered.

  - Setting up source code access. This is required for CodeGuru Reviewer to securely clone code in your repository.

- **Failed**: The repository failed to associate or disassociate.

- **Disassociating**: CodeGuru Reviewer is removing the repository's pull request notifications and source code access.

- **Disassociated**: CodeGuru Reviewer successfully disassociated the repository. You can create a new association with this repository if you want to review source code in it later. You can control access to code reviews created in an associated repository with tags after it has been disassociated. For more information, see [Using tags to control access to associated repositories](https://docs.aws.amazon.com/codeguru/latest/reviewer-ug/auth-and-access-control-using-tags.html) in the _Amazon CodeGuru Reviewer User Guide_.>
  take state-reason, name <StateReason>
    like state-reason
    void take
    note <A description of why the repository association is in the current state.>
  take last-updated-time-stamp, name <LastUpdatedTimeStamp>
    like time-stamp
    void take
    note <The time, in milliseconds since the epoch, when the repository association was last updated.>
  take created-time-stamp, name <CreatedTimeStamp>
    like time-stamp
    void take
    note <The time, in milliseconds since the epoch, when the repository association was created.>
  take kms-key-details, name <KMSKeyDetails>
    like kms-key-details
    void take
    note <A `KMSKeyDetails` object that contains:

- The encryption option for this repository association. It is either owned by Amazon Web Services Key Management Service (KMS) (`AWS_OWNED_CMK`) or customer managed (`CUSTOMER_MANAGED_CMK`).

- The ID of the Amazon Web Services KMS key that is associated with this respository association.>
  take s3-repository-details, name <S3RepositoryDetails>
    like s3-repository-details
    void take