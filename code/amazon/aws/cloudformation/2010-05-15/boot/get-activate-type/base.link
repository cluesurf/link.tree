
load @treesurf/snow/amazonaws.com/cloudformation/2010-05-15/base/activate-type-output
  take form activate-type-output

load @treesurf/snow/amazonaws.com/cloudformation/2010-05-15/base/cfn-registry-exception
  take form cfn-registry-exception

load @treesurf/snow/amazonaws.com/cloudformation/2010-05-15/base/log-group-name
  take form log-group-name

load @treesurf/snow/amazonaws.com/cloudformation/2010-05-15/base/role-arn
  take form role-arn

load @treesurf/snow/amazonaws.com/cloudformation/2010-05-15/base/type-not-found-exception
  take form type-not-found-exception

load @treesurf/snow/base/form
  take form form

load @treesurf/snow/base/native-boolean
  take form native-boolean

load @treesurf/snow/base/native-integer
  take form native-integer

load @treesurf/snow/base/native-string
  take form native-string

boot get-activate-type, name <GET_ActivateType>
  deed get
  note <Activates a public third-party extension, making it available for use in stack templates. For more information, see [Using public extensions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-public.html) in the _CloudFormation User Guide_.

Once you have activated a public third-party extension in your account and region, use [SetTypeConfiguration](AWSCloudFormation/latest/APIReference/API_SetTypeConfiguration.html) to specify configuration properties for the extension. For more information, see [Configuring extensions at the account level](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/registry-register.html#registry-set-configuration) in the _CloudFormation User Guide_.>

  take type
    like native-string
    note <The extension type.

Conditional: You must specify `PublicTypeArn`, or `TypeName`, `Type`, and `PublisherId`.>
    void take
  take public-type-arn
    like native-string
    note <The Amazon Resource Number (ARN) of the public extension.

Conditional: You must specify `PublicTypeArn`, or `TypeName`, `Type`, and `PublisherId`.>
    void take
  take publisher-id
    like native-string
    note <The ID of the extension publisher.

Conditional: You must specify `PublicTypeArn`, or `TypeName`, `Type`, and `PublisherId`.>
    void take
  take type-name
    like native-string
    note <The name of the extension.

Conditional: You must specify `PublicTypeArn`, or `TypeName`, `Type`, and `PublisherId`.>
    void take
  take type-name-alias
    like native-string
    note <An alias to assign to the public extension, in this account and region. If you specify an alias for the extension, CloudFormation treats the alias as the extension type name within this account and region. You must use the alias to refer to the extension in your templates, API calls, and CloudFormation console.

An extension alias must be unique within a given account and region. You can activate the same public resource multiple times in the same account and region, using different type name aliases.>
    void take
  take auto-update
    like native-boolean
    note <Whether to automatically update the extension in this account and region when a new _minor_ version is published by the extension publisher. Major versions released by the publisher must be manually updated.

The default is `true`.>
    void take
  take logging-config
    like form
      take log-role-arn, name <LogRoleArn>
        like role-arn
        note <The ARN of the role that CloudFormation should assume when sending log entries to CloudWatch logs.>
      take log-group-name, name <LogGroupName>
        like log-group-name
        note <The Amazon CloudWatch log group to which CloudFormation sends error logging information when invoking the extension's handlers.>
    void take
  take execution-role-arn
    like native-string
    note <The name of the IAM execution role to use to activate the extension.>
    void take
  take version-bump
    like native-string
    note <Manually updates a previously-activated type to a new major or minor version, if available. You can also use this parameter to update the value of `AutoUpdate`.

- `MAJOR`: CloudFormation updates the extension to the newest major version, if one is available.

- `MINOR`: CloudFormation updates the extension to the newest minor version, if one is available.>
    void take
  take major-version
    like native-integer
    note <The major version of this extension you want to activate, if multiple major versions are available. The default is the latest major version. CloudFormation uses the latest available _minor_ version of the major version selected.

You can specify `MajorVersion` or `VersionBump`, but not both.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=ActivateType>

  find <Type>, loan type
  find <PublicTypeArn>, loan public-type-arn
  find <PublisherId>, loan publisher-id
  find <TypeName>, loan type-name
  find <TypeNameAlias>, loan type-name-alias
  find <AutoUpdate>, loan auto-update
  find <LoggingConfig>, loan logging-config
  find <ExecutionRoleArn>, loan execution-role-arn
  find <VersionBump>, loan version-bump
  find <MajorVersion>, loan major-version
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like activate-type-output
    note <Success>
  loot 480
    seed xml, like cfn-registry-exception
    note <CFNRegistryException>
  loot 481
    seed xml, like type-not-found-exception
    note <TypeNotFoundException>