
load @treesurf/snow/amazonaws.com/cloudformation/2010-05-15/base/cfn-registry-exception
  take form cfn-registry-exception

load @treesurf/snow/amazonaws.com/cloudformation/2010-05-15/base/deregister-type-output
  take form deregister-type-output

load @treesurf/snow/amazonaws.com/cloudformation/2010-05-15/base/type-not-found-exception
  take form type-not-found-exception

load @treesurf/snow/base/native-string
  take form native-string

boot get-deregister-type, name <GET_DeregisterType>
  deed get
  note <Marks an extension or extension version as `DEPRECATED` in the CloudFormation registry, removing it from active use. Deprecated extensions or extension versions cannot be used in CloudFormation operations.

To deregister an entire extension, you must individually deregister all active versions of that extension. If an extension has only a single active version, deregistering that version results in the extension itself being deregistered and marked as deprecated in the registry.

You cannot deregister the default version of an extension if there are other active version of that extension. If you do deregister the default version of an extension, the textensionype itself is deregistered as well and marked as deprecated.

To view the deprecation status of an extension or extension version, use [DescribeType](https://docs.aws.amazon.com/AWSCloudFormation/latest/APIReference/API_DescribeType.html).>

  take arn
    like native-string
    note <The Amazon Resource Name (ARN) of the extension.

Conditional: You must specify either `TypeName` and `Type`, or `Arn`.>
    void take
  take type
    like native-string
    note <The kind of extension.

Conditional: You must specify either `TypeName` and `Type`, or `Arn`.>
    void take
  take type-name
    like native-string
    note <The name of the extension.

Conditional: You must specify either `TypeName` and `Type`, or `Arn`.>
    void take
  take version-id
    like native-string
    note <The ID of a specific version of the extension. The version ID is the value at the end of the Amazon Resource Name (ARN) assigned to the extension version when it is registered.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=DeregisterType>

  find <Arn>, loan arn
  find <Type>, loan type
  find <TypeName>, loan type-name
  find <VersionId>, loan version-id
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like deregister-type-output
    note <Success>
  loot 480
    seed xml, like cfn-registry-exception
    note <CFNRegistryException>
  loot 481
    seed xml, like type-not-found-exception
    note <TypeNotFoundException>