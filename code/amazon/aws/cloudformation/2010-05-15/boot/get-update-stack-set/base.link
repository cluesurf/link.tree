
load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/account
  take form account

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/account-list
  take form account-list

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/accounts-url
  take form accounts-url

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/auto-deployment-nullable
  take form auto-deployment-nullable

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/capability
  take form capability

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/failure-tolerance-count
  take form failure-tolerance-count

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/failure-tolerance-percentage
  take form failure-tolerance-percentage

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/invalid-operation-exception
  take form invalid-operation-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/max-concurrent-count
  take form max-concurrent-count

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/max-concurrent-percentage
  take form max-concurrent-percentage

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/operation-id-already-exists-exception
  take form operation-id-already-exists-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/operation-in-progress-exception
  take form operation-in-progress-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/organizational-unit-id-list
  take form organizational-unit-id-list

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/parameter
  take form parameter

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/region
  take form region

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/region-concurrency-type
  take form region-concurrency-type

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/region-list
  take form region-list

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/retain-stacks-on-account-removal-nullable
  take form retain-stacks-on-account-removal-nullable

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/stack-instance-not-found-exception
  take form stack-instance-not-found-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/stack-set-not-found-exception
  take form stack-set-not-found-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/stale-request-exception
  take form stale-request-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/tag
  take form tag

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/update-stack-set-output
  take form update-stack-set-output

load @drumwork/snow/base/form
  take form form

load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-string
  take form native-string

boot get-update-stack-set, name <GET_UpdateStackSet>
  deed get
  note <Updates the stack set, and associated stack instances in the specified accounts and Regions.

Even if the stack set operation created by updating the stack set fails (completely or partially, below or above a specified failure tolerance), the stack set is updated with your changes. Subsequent CreateStackInstances calls on the specified stack set use the updated stack set.>

  take stack-set-name
    like native-string
    note <The name or unique ID of the stack set that you want to update.>
  take description
    like native-string
    note <A brief description of updates that you are making.>
    void take
  take template-body
    like native-string
    note <The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the CloudFormation User Guide.

Conditional: You must specify only one of the following parameters: `TemplateBody` or `TemplateURL`—or set `UsePreviousTemplate` to true.>
    void take
  take template-url
    like native-string
    note <The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket or a Systems Manager document. For more information, see [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the CloudFormation User Guide.

Conditional: You must specify only one of the following parameters: `TemplateBody` or `TemplateURL`—or set `UsePreviousTemplate` to true.>
    void take
  take use-previous-template
    like native-boolean
    note <Use the existing template that's associated with the stack set that you're updating.

Conditional: You must specify only one of the following parameters: `TemplateBody` or `TemplateURL`—or set `UsePreviousTemplate` to true.>
    void take
  take parameters
    like list
      like parameter
    note <A list of input parameters for the stack set template.>
    void take
  take capabilities
    like list
      like capability
    note <In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to update the stack set and its associated stack instances.

- `CAPABILITY_IAM` and `CAPABILITY_NAMED_IAM`

  Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.

  The following IAM resources require you to specify either the `CAPABILITY_IAM` or `CAPABILITY_NAMED_IAM` capability.

  - If you have IAM resources, you can specify either capability.

  - If you have IAM resources with custom names, you _must_ specify `CAPABILITY_NAMED_IAM`.

  - If you don't specify either of these capabilities, CloudFormation returns an `InsufficientCapabilities` error.

  If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.

  - [AWS::IAM::AccessKey](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html)

  - [AWS::IAM::Group](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html)

  - [AWS::IAM::InstanceProfile](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html)

  - [AWS::IAM::Policy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html)

  - [AWS::IAM::Role](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html)

  - [AWS::IAM::User](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html)

  - [AWS::IAM::UserToGroupAddition](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html)

  For more information, see [Acknowledging IAM Resources in CloudFormation Templates](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities).

- `CAPABILITY_AUTO_EXPAND`

  Some templates reference macros. If your stack set template references one or more macros, you must update the stack set directly from the processed template, without first reviewing the resulting changes in a change set. To update the stack set directly, you must acknowledge this capability. For more information, see [Using CloudFormation Macros to Perform Custom Processing on Templates](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html).

  Stack sets with service-managed permissions do not currently support the use of macros in templates. (This includes the [AWS::Include](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html) and [AWS::Serverless](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html) transforms, which are macros hosted by CloudFormation.) Even if you specify this capability for a stack set with service-managed permissions, if you reference a macro in your template the stack set operation will fail.>
    void take
  take tags
    like list
      like tag
    note <The key-value pairs to associate with this stack set and the stacks created from it. CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.

If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:

- If you don't specify this parameter, CloudFormation doesn't modify the stack's tags.

- If you specify _any_ tags using this parameter, you must specify _all_ the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well.

- If you specify an empty value, CloudFormation removes all currently associated tags.

If you specify new tags as part of an `UpdateStackSet` action, CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire `UpdateStackSet` action fails with an `access denied` error, and the stack set is not updated.>
    void take
  take operation-preferences
    like form
      take region-concurrency-type, name <RegionConcurrencyType>
        like region-concurrency-type
        void take
        note <The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.>
      take region-order, name <RegionOrder>
        like region-list
        void take
        note <The order of the Regions in where you want to perform the stack operation.>
      take failure-tolerance-count, name <FailureToleranceCount>
        like failure-tolerance-count
        void take
        note <The number of accounts, per Region, for which this operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.

Conditional: You must specify either `FailureToleranceCount` or `FailureTolerancePercentage` (but not both).

By default, `0` is specified.>
      take failure-tolerance-percentage, name <FailureTolerancePercentage>
        like failure-tolerance-percentage
        void take
        note <The percentage of accounts, per Region, for which this stack operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.

When calculating the number of accounts based on the specified percentage, CloudFormation rounds _down_ to the next whole number.

Conditional: You must specify either `FailureToleranceCount` or `FailureTolerancePercentage`, but not both.

By default, `0` is specified.>
      take max-concurrent-count, name <MaxConcurrentCount>
        like max-concurrent-count
        void take
        note <The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `FailureToleranceCount`. `MaxConcurrentCount` is at most one more than the `FailureToleranceCount`.

Note that this setting lets you specify the _maximum_ for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.

Conditional: You must specify either `MaxConcurrentCount` or `MaxConcurrentPercentage`, but not both.

By default, `1` is specified.>
      take max-concurrent-percentage, name <MaxConcurrentPercentage>
        like max-concurrent-percentage
        void take
        note <The maximum percentage of accounts in which to perform this operation at one time.

When calculating the number of accounts based on the specified percentage, CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.

Note that this setting lets you specify the _maximum_ for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.

Conditional: You must specify either `MaxConcurrentCount` or `MaxConcurrentPercentage`, but not both.

By default, `1` is specified.>
    note <Preferences for how CloudFormation performs this stack set operation.>
    void take
  take administration-role-arn
    like native-string
    note <The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.

Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see [Granting Permissions for Stack Set Operations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html) in the _CloudFormation User Guide_.

If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.>
    void take
  take execution-role-name
    like native-string
    note <The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, CloudFormation uses the `AWSCloudFormationStackSetExecutionRole` role for the stack set operation.

Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets.

If you specify a customized execution role, CloudFormation uses that role to update the stack. If you do not specify a customized execution role, CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.>
    void take
  take deployment-targets
    like form
      take accounts, name <Accounts>
        like account-list
        void take
        note <The names of one or more Amazon Web Services accounts for which you want to deploy stack set updates.>
      take accounts-url, name <AccountsUrl>
        like accounts-url
        void take
        note <Returns the value of the `AccountsUrl` property.>
      take organizational-unit-ids, name <OrganizationalUnitIds>
        like organizational-unit-id-list
        void take
        note <The organization root ID or organizational unit (OU) IDs to which StackSets deploys.>
    note <[Service-managed permissions] The Organizations accounts in which to update associated stack instances.

To update all the stack instances associated with this stack set, do not specify `DeploymentTargets` or `Regions`.

If the stack set update includes changes to the template (that is, if `TemplateBody` or `TemplateURL` is specified), or the `Parameters`, CloudFormation marks all stack instances with a status of `OUTDATED` prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.>
    void take
  take permission-model
    like native-string
    note <Describes how the IAM roles required for stack set operations are created. You cannot modify `PermissionModel` if there are stack instances associated with your stack set.

- With `self-managed` permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see [Grant Self-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html).

- With `service-managed` permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see [Grant Service-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html).>
    void take
  take auto-deployment
    like form
      take enabled, name <Enabled>
        like auto-deployment-nullable
        void take
        note <If set to `true`, StackSets automatically deploys additional stack instances to Organizations accounts that are added to a target organization or organizational unit (OU) in the specified Regions. If an account is removed from a target organization or OU, StackSets deletes stack instances from the account in the specified Regions.>
      take retain-stacks-on-account-removal, name <RetainStacksOnAccountRemoval>
        like retain-stacks-on-account-removal-nullable
        void take
        note <If set to `true`, stack resources are retained when an account is removed from a target organization or OU. If set to `false`, stack resources are deleted. Specify only if `Enabled` is set to `True`.>
    note <[Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organization or organizational unit (OU).

If you specify `AutoDeployment`, do not specify `DeploymentTargets` or `Regions`.>
    void take
  take operation-id
    like native-string
    note <The unique ID for this stack set operation.

The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that CloudFormation successfully received them.

If you don't specify an operation ID, CloudFormation generates one automatically.

Repeating this stack set operation with a new operation ID retries all stack instances whose status is `OUTDATED`.>
    void take
  take accounts
    like list
      like account
    note <[Self-managed permissions] The accounts in which to update associated stack instances. If you specify accounts, you must also specify the Regions in which to update stack set instances.

To update _all_ the stack instances associated with this stack set, do not specify the `Accounts` or `Regions` properties.

If the stack set update includes changes to the template (that is, if the `TemplateBody` or `TemplateURL` properties are specified), or the `Parameters` property, CloudFormation marks all stack instances with a status of `OUTDATED` prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.>
    void take
  take regions
    like list
      like region
    note <The Regions in which to update associated stack instances. If you specify Regions, you must also specify accounts in which to update stack set instances.

To update _all_ the stack instances associated with this stack set, do not specify the `Accounts` or `Regions` properties.

If the stack set update includes changes to the template (that is, if the `TemplateBody` or `TemplateURL` properties are specified), or the `Parameters` property, CloudFormation marks all stack instances with a status of `OUTDATED` prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.>
    void take
  take call-as
    like native-string
    note <[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.

By default, `SELF` is specified. Use `SELF` for stack sets with self-managed permissions.

- If you are signed in to the management account, specify `SELF`.

- If you are signed in to a delegated administrator account, specify `DELEGATED_ADMIN`.

  Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see [Register a delegated administrator](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html) in the _CloudFormation User Guide_.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=UpdateStackSet>

  find <StackSetName>, loan stack-set-name
  find <Description>, loan description
  find <TemplateBody>, loan template-body
  find <TemplateURL>, loan template-url
  find <UsePreviousTemplate>, loan use-previous-template
  find <Parameters>, loan parameters
  find <Capabilities>, loan capabilities
  find <Tags>, loan tags
  find <OperationPreferences>, loan operation-preferences
  find <AdministrationRoleARN>, loan administration-role-arn
  find <ExecutionRoleName>, loan execution-role-name
  find <DeploymentTargets>, loan deployment-targets
  find <PermissionModel>, loan permission-model
  find <AutoDeployment>, loan auto-deployment
  find <OperationId>, loan operation-id
  find <Accounts>, loan accounts
  find <Regions>, loan regions
  find <CallAs>, loan call-as
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like update-stack-set-output
    note <Success>
  loot 480
    seed xml, like stack-set-not-found-exception
    note <StackSetNotFoundException>
  loot 481
    seed xml, like operation-in-progress-exception
    note <OperationInProgressException>
  loot 482
    seed xml, like operation-id-already-exists-exception
    note <OperationIdAlreadyExistsException>
  loot 483
    seed xml, like stale-request-exception
    note <StaleRequestException>
  loot 484
    seed xml, like invalid-operation-exception
    note <InvalidOperationException>
  loot 485
    seed xml, like stack-instance-not-found-exception
    note <StackInstanceNotFoundException>