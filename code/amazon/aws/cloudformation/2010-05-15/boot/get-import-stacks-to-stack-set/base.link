
load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/failure-tolerance-count
  take form failure-tolerance-count

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/failure-tolerance-percentage
  take form failure-tolerance-percentage

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/import-stacks-to-stack-set-output
  take form import-stacks-to-stack-set-output

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/invalid-operation-exception
  take form invalid-operation-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/max-concurrent-count
  take form max-concurrent-count

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/max-concurrent-percentage
  take form max-concurrent-percentage

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/operation-id-already-exists-exception
  take form operation-id-already-exists-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/operation-in-progress-exception
  take form operation-in-progress-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/region-concurrency-type
  take form region-concurrency-type

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/region-list
  take form region-list

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/stack-id
  take form stack-id

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/stack-not-found-exception
  take form stack-not-found-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/stack-set-not-found-exception
  take form stack-set-not-found-exception

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/stale-request-exception
  take form stale-request-exception

load @drumwork/snow/base/form
  take form form

load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-string
  take form native-string

boot get-import-stacks-to-stack-set, name <GET_ImportStacksToStackSet>
  note <Import existing stacks into a new stack sets. Use the stack import operation to import up to 10 stacks into a new stack set in the same account as the source stack or in a different administrator account and Region, by specifying the stack ID of the stack you intend to import.

`ImportStacksToStackSet` is only supported by self-managed permissions.>

  take stack-set-name
    like native-string
    note <The name of the stack set. The name must be unique in the Region where you create your stack set.>
  take stack-ids
    like list
      like stack-id
    note <The IDs of the stacks you are importing into a stack set. You import up to 10 stacks per stack set at a time.>
  take operation-preferences
    like form
      take region-concurrency-type, name <RegionConcurrencyType>
        like region-concurrency-type
        void take
        note <The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.>
      take region-order, name <RegionOrder>
        like region-list
        void take
        note <The order of the Regions in where you want to perform the stack operation.>
      take failure-tolerance-count, name <FailureToleranceCount>
        like failure-tolerance-count
        void take
        note <The number of accounts, per Region, for which this operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.

Conditional: You must specify either `FailureToleranceCount` or `FailureTolerancePercentage` (but not both).

By default, `0` is specified.>
      take failure-tolerance-percentage, name <FailureTolerancePercentage>
        like failure-tolerance-percentage
        void take
        note <The percentage of accounts, per Region, for which this stack operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.

When calculating the number of accounts based on the specified percentage, CloudFormation rounds _down_ to the next whole number.

Conditional: You must specify either `FailureToleranceCount` or `FailureTolerancePercentage`, but not both.

By default, `0` is specified.>
      take max-concurrent-count, name <MaxConcurrentCount>
        like max-concurrent-count
        void take
        note <The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `FailureToleranceCount`. `MaxConcurrentCount` is at most one more than the `FailureToleranceCount`.

Note that this setting lets you specify the _maximum_ for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.

Conditional: You must specify either `MaxConcurrentCount` or `MaxConcurrentPercentage`, but not both.

By default, `1` is specified.>
      take max-concurrent-percentage, name <MaxConcurrentPercentage>
        like max-concurrent-percentage
        void take
        note <The maximum percentage of accounts in which to perform this operation at one time.

When calculating the number of accounts based on the specified percentage, CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.

Note that this setting lets you specify the _maximum_ for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.

Conditional: You must specify either `MaxConcurrentCount` or `MaxConcurrentPercentage`, but not both.

By default, `1` is specified.>
    void take
  take operation-id
    like native-string
    note <A unique, user defined, identifier for the stack set operation.>
    void take
  take call-as
    like native-string
    note <By default, `SELF` is specified. Use `SELF` for stack sets with self-managed permissions.

- If you are signed in to the management account, specify `SELF`.

- For service managed stack sets, specify `DELEGATED_ADMIN`.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=ImportStacksToStackSet>

  find <StackSetName>, loan stack-set-name
  find <StackIds>, loan stack-ids
  find <OperationPreferences>, loan operation-preferences
  find <OperationId>, loan operation-id
  find <CallAs>, loan call-as
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like import-stacks-to-stack-set-output
    note <Success>
  loot 480
    seed xml, like limit-exceeded-exception
    note <LimitExceededException>
  loot 481
    seed xml, like stack-set-not-found-exception
    note <StackSetNotFoundException>
  loot 482
    seed xml, like invalid-operation-exception
    note <InvalidOperationException>
  loot 483
    seed xml, like operation-in-progress-exception
    note <OperationInProgressException>
  loot 484
    seed xml, like operation-id-already-exists-exception
    note <OperationIdAlreadyExistsException>
  loot 485
    seed xml, like stack-not-found-exception
    note <StackNotFoundException>
  loot 486
    seed xml, like stale-request-exception
    note <StaleRequestException>