
load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/deprecated-status
  take form deprecated-status

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/max-results
  take form max-results

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/next-token
  take form next-token

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/provisioning-type
  take form provisioning-type

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/registry-type
  take form registry-type

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/type-filters
  take form type-filters

load @drumwork/snow/amazonaws.com/cloudformation/2010-05-15/base/visibility
  take form visibility

form list-types-input, name <ListTypesInput>
  take visibility, name <Visibility>
    like visibility
    void take
    note <The scope at which the extensions are visible and usable in CloudFormation operations.

Valid values include:

- `PRIVATE`: Extensions that are visible and usable within this account and region. This includes:

  - Private extensions you have registered in this account and region.

  - Public extensions that you have activated in this account and region.

- `PUBLIC`: Extensions that are publicly visible and available to be activated within any Amazon account. This includes extensions from Amazon, as well as third-party publishers.

The default is `PRIVATE`.>
  take provisioning-type, name <ProvisioningType>
    like provisioning-type
    void take
    note <For resource types, the provisioning behavior of the resource type. CloudFormation determines the provisioning type during registration, based on the types of handlers in the schema handler package submitted.

Valid values include:

- `FULLY_MUTABLE`: The resource type includes an update handler to process updates to the type during stack update operations.

- `IMMUTABLE`: The resource type does not include an update handler, so the type cannot be updated and must instead be replaced during stack update operations.

- `NON_PROVISIONABLE`: The resource type does not include create, read, and delete handlers, and therefore cannot actually be provisioned.

The default is `FULLY_MUTABLE`.>
  take deprecated-status, name <DeprecatedStatus>
    like deprecated-status
    void take
    note <The deprecation status of the extension that you want to get summary information about.

Valid values include:

- `LIVE`: The extension is registered for use in CloudFormation operations.

- `DEPRECATED`: The extension has been deregistered and can no longer be used in CloudFormation operations.>
  take type, name <Type>
    like registry-type
    void take
    note <The type of extension.>
  take filters, name <Filters>
    like type-filters
    void take
    note <Filter criteria to use in determining which extensions to return.

If you specify a filter, CloudFormation ignores any specified `Visibility` value when returning the list of types.>
  take max-results, name <MaxResults>
    like max-results
    void take
    note <The maximum number of results to be returned with a single call. If the number of available results exceeds this maximum, the response includes a `NextToken` value that you can assign to the `NextToken` request parameter to get the next set of results.>
  take next-token, name <NextToken>
    like next-token
    void take
    note <If the previous paginated request didn't return all of the remaining results, the response object's `NextToken` parameter value is set to a token. To retrieve the next set of results, call this action again and assign that token to the request object's `NextToken` parameter. If there are no remaining results, the previous response object's `NextToken` parameter is set to `null`.>