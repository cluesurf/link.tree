
load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/account-list
  take form account-list

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/auto-deployment
  take form auto-deployment

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/call-as
  take form call-as

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/capabilities
  take form capabilities

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/client-request-token
  take form client-request-token

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/deployment-targets
  take form deployment-targets

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/description
  take form description

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/execution-role-name
  take form execution-role-name

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/parameters
  take form parameters

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/permission-models
  take form permission-models

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/region-list
  take form region-list

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/role-arn
  take form role-arn

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/stack-set-name
  take form stack-set-name

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/stack-set-operation-preferences
  take form stack-set-operation-preferences

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/tags
  take form tags

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/template-body
  take form template-body

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/template-url
  take form template-url

load @nerdbond/snow/amazonaws.com/cloudformation/2010-05-15/base/use-previous-template
  take form use-previous-template

form update-stack-set-input, name <UpdateStackSetInput>
  take stack-set-name, name <StackSetName>
    like stack-set-name
    note <The name or unique ID of the stack set that you want to update.>
  take description, name <Description>
    like description
    void take
    note <A brief description of updates that you are making.>
  take template-body, name <TemplateBody>
    like template-body
    void take
    note <The structure that contains the template body, with a minimum length of 1 byte and a maximum length of 51,200 bytes. For more information, see [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the CloudFormation User Guide.

Conditional: You must specify only one of the following parameters: `TemplateBody` or `TemplateURL`—or set `UsePreviousTemplate` to true.>
  take template-url, name <TemplateURL>
    like template-url
    void take
    note <The location of the file that contains the template body. The URL must point to a template (maximum size: 460,800 bytes) that is located in an Amazon S3 bucket or a Systems Manager document. For more information, see [Template Anatomy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-anatomy.html) in the CloudFormation User Guide.

Conditional: You must specify only one of the following parameters: `TemplateBody` or `TemplateURL`—or set `UsePreviousTemplate` to true.>
  take use-previous-template, name <UsePreviousTemplate>
    like use-previous-template
    void take
    note <Use the existing template that's associated with the stack set that you're updating.

Conditional: You must specify only one of the following parameters: `TemplateBody` or `TemplateURL`—or set `UsePreviousTemplate` to true.>
  take parameters, name <Parameters>
    like parameters
    void take
    note <A list of input parameters for the stack set template.>
  take capabilities, name <Capabilities>
    like capabilities
    void take
    note <In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to update the stack set and its associated stack instances.

- `CAPABILITY_IAM` and `CAPABILITY_NAMED_IAM`

  Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks sets, you must explicitly acknowledge this by specifying one of these capabilities.

  The following IAM resources require you to specify either the `CAPABILITY_IAM` or `CAPABILITY_NAMED_IAM` capability.

  - If you have IAM resources, you can specify either capability.

  - If you have IAM resources with custom names, you _must_ specify `CAPABILITY_NAMED_IAM`.

  - If you don't specify either of these capabilities, CloudFormation returns an `InsufficientCapabilities` error.

  If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.

  - [AWS::IAM::AccessKey](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html)

  - [AWS::IAM::Group](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html)

  - [AWS::IAM::InstanceProfile](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html)

  - [AWS::IAM::Policy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html)

  - [AWS::IAM::Role](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html)

  - [AWS::IAM::User](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html)

  - [AWS::IAM::UserToGroupAddition](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html)

  For more information, see [Acknowledging IAM Resources in CloudFormation Templates](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities).

- `CAPABILITY_AUTO_EXPAND`

  Some templates reference macros. If your stack set template references one or more macros, you must update the stack set directly from the processed template, without first reviewing the resulting changes in a change set. To update the stack set directly, you must acknowledge this capability. For more information, see [Using CloudFormation Macros to Perform Custom Processing on Templates](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html).

  Stack sets with service-managed permissions do not currently support the use of macros in templates. (This includes the [AWS::Include](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html) and [AWS::Serverless](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html) transforms, which are macros hosted by CloudFormation.) Even if you specify this capability for a stack set with service-managed permissions, if you reference a macro in your template the stack set operation will fail.>
  take tags, name <Tags>
    like tags
    void take
    note <The key-value pairs to associate with this stack set and the stacks created from it. CloudFormation also propagates these tags to supported resources that are created in the stacks. You can specify a maximum number of 50 tags.

If you specify tags for this parameter, those tags replace any list of tags that are currently associated with this stack set. This means:

- If you don't specify this parameter, CloudFormation doesn't modify the stack's tags.

- If you specify _any_ tags using this parameter, you must specify _all_ the tags that you want associated with this stack set, even tags you've specifed before (for example, when creating the stack set or during a previous update of the stack set.). Any tags that you don't include in the updated list of tags are removed from the stack set, and therefore from the stacks and resources as well.

- If you specify an empty value, CloudFormation removes all currently associated tags.

If you specify new tags as part of an `UpdateStackSet` action, CloudFormation checks to see if you have the required IAM permission to tag resources. If you omit tags that are currently associated with the stack set from the list of tags you specify, CloudFormation assumes that you want to remove those tags from the stack set, and checks to see if you have permission to untag resources. If you don't have the necessary permission(s), the entire `UpdateStackSet` action fails with an `access denied` error, and the stack set is not updated.>
  take operation-preferences, name <OperationPreferences>
    like stack-set-operation-preferences
    void take
    note <Preferences for how CloudFormation performs this stack set operation.>
  take administration-role-arn, name <AdministrationRoleARN>
    like role-arn
    void take
    note <The Amazon Resource Number (ARN) of the IAM role to use to update this stack set.

Specify an IAM role only if you are using customized administrator roles to control which users or groups can manage specific stack sets within the same administrator account. For more information, see [Granting Permissions for Stack Set Operations](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs.html) in the _CloudFormation User Guide_.

If you specified a customized administrator role when you created the stack set, you must specify a customized administrator role, even if it is the same customized administrator role used with this stack set previously.>
  take execution-role-name, name <ExecutionRoleName>
    like execution-role-name
    void take
    note <The name of the IAM execution role to use to update the stack set. If you do not specify an execution role, CloudFormation uses the `AWSCloudFormationStackSetExecutionRole` role for the stack set operation.

Specify an IAM role only if you are using customized execution roles to control which stack resources users and groups can include in their stack sets.

If you specify a customized execution role, CloudFormation uses that role to update the stack. If you do not specify a customized execution role, CloudFormation performs the update using the role previously associated with the stack set, so long as you have permissions to perform operations on the stack set.>
  take deployment-targets, name <DeploymentTargets>
    like deployment-targets
    void take
    note <[Service-managed permissions] The Organizations accounts in which to update associated stack instances.

To update all the stack instances associated with this stack set, do not specify `DeploymentTargets` or `Regions`.

If the stack set update includes changes to the template (that is, if `TemplateBody` or `TemplateURL` is specified), or the `Parameters`, CloudFormation marks all stack instances with a status of `OUTDATED` prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.>
  take permission-model, name <PermissionModel>
    like permission-models
    void take
    note <Describes how the IAM roles required for stack set operations are created. You cannot modify `PermissionModel` if there are stack instances associated with your stack set.

- With `self-managed` permissions, you must create the administrator and execution roles required to deploy to target accounts. For more information, see [Grant Self-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-self-managed.html).

- With `service-managed` permissions, StackSets automatically creates the IAM roles required to deploy to accounts managed by Organizations. For more information, see [Grant Service-Managed Stack Set Permissions](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-prereqs-service-managed.html).>
  take auto-deployment, name <AutoDeployment>
    like auto-deployment
    void take
    note <[Service-managed permissions] Describes whether StackSets automatically deploys to Organizations accounts that are added to a target organization or organizational unit (OU).

If you specify `AutoDeployment`, do not specify `DeploymentTargets` or `Regions`.>
  take operation-id, name <OperationId>
    like client-request-token
    void take
    note <The unique ID for this stack set operation.

The operation ID also functions as an idempotency token, to ensure that CloudFormation performs the stack set operation only once, even if you retry the request multiple times. You might retry stack set operation requests to ensure that CloudFormation successfully received them.

If you don't specify an operation ID, CloudFormation generates one automatically.

Repeating this stack set operation with a new operation ID retries all stack instances whose status is `OUTDATED`.>
  take accounts, name <Accounts>
    like account-list
    void take
    note <[Self-managed permissions] The accounts in which to update associated stack instances. If you specify accounts, you must also specify the Regions in which to update stack set instances.

To update _all_ the stack instances associated with this stack set, do not specify the `Accounts` or `Regions` properties.

If the stack set update includes changes to the template (that is, if the `TemplateBody` or `TemplateURL` properties are specified), or the `Parameters` property, CloudFormation marks all stack instances with a status of `OUTDATED` prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.>
  take regions, name <Regions>
    like region-list
    void take
    note <The Regions in which to update associated stack instances. If you specify Regions, you must also specify accounts in which to update stack set instances.

To update _all_ the stack instances associated with this stack set, do not specify the `Accounts` or `Regions` properties.

If the stack set update includes changes to the template (that is, if the `TemplateBody` or `TemplateURL` properties are specified), or the `Parameters` property, CloudFormation marks all stack instances with a status of `OUTDATED` prior to updating the stack instances in the specified accounts and Regions. If the stack set update does not include changes to the template or parameters, CloudFormation updates the stack instances in the specified accounts and Regions, while leaving all other stack instances with their existing stack instance status.>
  take call-as, name <CallAs>
    like call-as
    void take
    note <[Service-managed permissions] Specifies whether you are acting as an account administrator in the organization's management account or as a delegated administrator in a member account.

By default, `SELF` is specified. Use `SELF` for stack sets with self-managed permissions.

- If you are signed in to the management account, specify `SELF`.

- If you are signed in to a delegated administrator account, specify `DELEGATED_ADMIN`.

  Your Amazon Web Services account must be registered as a delegated administrator in the management account. For more information, see [Register a delegated administrator](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-orgs-delegated-admin.html) in the _CloudFormation User Guide_.>