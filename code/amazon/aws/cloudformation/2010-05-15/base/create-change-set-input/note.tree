
load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/capabilities
  take form capabilities

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/change-set-name
  take form change-set-name

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/change-set-type
  take form change-set-type

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/client-token
  take form client-token

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/description
  take form description

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/include-nested-stacks
  take form include-nested-stacks

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/notification-ar-ns
  take form notification-ar-ns

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/parameters
  take form parameters

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/resource-types
  take form resource-types

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/resources-to-import
  take form resources-to-import

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/role-arn
  take form role-arn

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/rollback-configuration
  take form rollback-configuration

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/stack-name-or-id
  take form stack-name-or-id

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/tags
  take form tags

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/template-body
  take form template-body

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/template-url
  take form template-url

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/use-previous-template
  take form use-previous-template

form create-change-set-input, name <CreateChangeSetInput>
  note <The input for the CreateChangeSet action.>
  take stack-name, name <StackName>
    like stack-name-or-id
    note <The name or the unique ID of the stack for which you are creating a change set. CloudFormation generates the change set by comparing this stack's information with the information that you submit, such as a modified template or different parameter input values.>
  take template-body, name <TemplateBody>
    like template-body
    void take
    note <A structure that contains the body of the revised template, with a minimum length of 1 byte and a maximum length of 51,200 bytes. CloudFormation generates the change set by comparing this template with the template of the stack that you specified.

Conditional: You must specify only `TemplateBody` or `TemplateURL`.>
  take template-url, name <TemplateURL>
    like template-url
    void take
    note <The location of the file that contains the revised template. The URL must point to a template (max size: 460,800 bytes) that is located in an S3 bucket or a Systems Manager document. CloudFormation generates the change set by comparing this template with the stack that you specified.

Conditional: You must specify only `TemplateBody` or `TemplateURL`.>
  take use-previous-template, name <UsePreviousTemplate>
    like use-previous-template
    void take
    note <Whether to reuse the template that is associated with the stack to create the change set.>
  take parameters, name <Parameters>
    like parameters
    void take
    note <A list of `Parameter` structures that specify input parameters for the change set. For more information, see the Parameter data type.>
  take capabilities, name <Capabilities>
    like capabilities
    void take
    note <In some cases, you must explicitly acknowledge that your stack template contains certain capabilities in order for CloudFormation to create the stack.

- `CAPABILITY_IAM` and `CAPABILITY_NAMED_IAM`

  Some stack templates might include resources that can affect permissions in your Amazon Web Services account; for example, by creating new Identity and Access Management (IAM) users. For those stacks, you must explicitly acknowledge this by specifying one of these capabilities.

  The following IAM resources require you to specify either the `CAPABILITY_IAM` or `CAPABILITY_NAMED_IAM` capability.

  - If you have IAM resources, you can specify either capability.

  - If you have IAM resources with custom names, you _must_ specify `CAPABILITY_NAMED_IAM`.

  - If you don't specify either of these capabilities, CloudFormation returns an `InsufficientCapabilities` error.

  If your stack template contains these resources, we recommend that you review all permissions associated with them and edit their permissions if necessary.

  - [AWS::IAM::AccessKey](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-accesskey.html)

  - [AWS::IAM::Group](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-group.html)

  - [AWS::IAM::InstanceProfile](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-instanceprofile.html)

  - [AWS::IAM::Policy](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html)

  - [AWS::IAM::Role](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iam-role.html)

  - [AWS::IAM::User](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user.html)

  - [AWS::IAM::UserToGroupAddition](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-addusertogroup.html)

  For more information, see [Acknowledging IAM Resources in CloudFormation Templates](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html#capabilities).

- `CAPABILITY_AUTO_EXPAND`

  Some template contain macros. Macros perform custom processing on templates; this can include simple actions like find-and-replace operations, all the way to extensive transformations of entire templates. Because of this, users typically create a change set from the processed template, so that they can review the changes resulting from the macros before actually creating the stack. If your stack template contains one or more macros, and you choose to create a stack directly from the processed template, without first reviewing the resulting changes in a change set, you must acknowledge this capability. This includes the [AWS::Include](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/create-reusable-transform-function-snippets-and-add-to-your-template-with-aws-include-transform.html) and [AWS::Serverless](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-aws-serverless.html) transforms, which are macros hosted by CloudFormation.

  This capacity does not apply to creating change sets, and specifying it when creating change sets has no effect.

  If you want to create a stack from a stack template that contains macros _and_ nested stacks, you must create or update the stack directly from the template using the CreateStack or UpdateStack action, and specifying this capability.

  For more information on macros, see [Using CloudFormation Macros to Perform Custom Processing on Templates](http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/template-macros.html).>
  take resource-types, name <ResourceTypes>
    like resource-types
    void take
    note <The template resource types that you have permissions to work with if you execute this change set, such as `AWS::EC2::Instance`, `AWS::EC2::*`, or `Custom::MyCustomInstance`.

If the list of resource types doesn't include a resource type that you're updating, the stack update fails. By default, CloudFormation grants permissions to all resource types. Identity and Access Management (IAM) uses this parameter for condition keys in IAM policies for CloudFormation. For more information, see [Controlling Access with Identity and Access Management](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-iam-template.html) in the CloudFormation User Guide.>
  take role-arn, name <RoleARN>
    like role-arn
    void take
    note <The Amazon Resource Name (ARN) of an Identity and Access Management (IAM) role that CloudFormation assumes when executing the change set. CloudFormation uses the role's credentials to make calls on your behalf. CloudFormation uses this role for all future operations on the stack. As long as users have permission to operate on the stack, CloudFormation uses this role even if the users don't have permission to pass it. Ensure that the role grants least privilege.

If you don't specify a value, CloudFormation uses the role that was previously associated with the stack. If no role is available, CloudFormation uses a temporary session that is generated from your user credentials.>
  take rollback-configuration, name <RollbackConfiguration>
    like rollback-configuration
    void take
    note <The rollback triggers for CloudFormation to monitor during stack creation and updating operations, and for the specified monitoring period afterwards.>
  take notification-ar-ns, name <NotificationARNs>
    like notification-ar-ns
    void take
    note <The Amazon Resource Names (ARNs) of Amazon Simple Notification Service (Amazon SNS) topics that CloudFormation associates with the stack. To remove all associated notification topics, specify an empty list.>
  take tags, name <Tags>
    like tags
    void take
    note <Key-value pairs to associate with this stack. CloudFormation also propagates these tags to resources in the stack. You can specify a maximum of 50 tags.>
  take change-set-name, name <ChangeSetName>
    like change-set-name
    note <The name of the change set. The name must be unique among all change sets that are associated with the specified stack.

A change set name can contain only alphanumeric, case sensitive characters and hyphens. It must start with an alphabetic character and cannot exceed 128 characters.>
  take client-token, name <ClientToken>
    like client-token
    void take
    note <A unique identifier for this `CreateChangeSet` request. Specify this token if you plan to retry requests so that CloudFormation knows that you're not attempting to create another change set with the same name. You might retry `CreateChangeSet` requests to ensure that CloudFormation successfully received them.>
  take description, name <Description>
    like description
    void take
    note <A description to help you identify this change set.>
  take change-set-type, name <ChangeSetType>
    like change-set-type
    void take
    note <The type of change set operation. To create a change set for a new stack, specify `CREATE`. To create a change set for an existing stack, specify `UPDATE`. To create a change set for an import operation, specify `IMPORT`.

If you create a change set for a new stack, CloudFormation creates a stack with a unique stack ID, but no template or resources. The stack will be in the [`REVIEW_IN_PROGRESS`](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-describing-stacks.html#d0e11995) state until you execute the change set.

By default, CloudFormation specifies `UPDATE`. You can't use the `UPDATE` type to create a change set for a new stack or the `CREATE` type to create a change set for an existing stack.>
  take resources-to-import, name <ResourcesToImport>
    like resources-to-import
    void take
    note <The resources to import into your stack.>
  take include-nested-stacks, name <IncludeNestedStacks>
    like include-nested-stacks
    void take
    note <Creates a change set for the all nested stacks specified in the template. The default behavior of this action is set to `False`. To include nested sets in a change set, specify `True`.>