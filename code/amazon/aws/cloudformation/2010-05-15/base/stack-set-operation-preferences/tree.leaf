
load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/failure-tolerance-count
  take form failure-tolerance-count

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/failure-tolerance-percentage
  take form failure-tolerance-percentage

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/max-concurrent-count
  take form max-concurrent-count

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/max-concurrent-percentage
  take form max-concurrent-percentage

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/region-concurrency-type
  take form region-concurrency-type

load @termsurf/snow/amazonaws.com/cloudformation/2010-05-15/base/region-list
  take form region-list

form stack-set-operation-preferences, name <StackSetOperationPreferences>
  note <The user-specified preferences for how CloudFormation performs a stack set operation.

For more information on maximum concurrent accounts and failure tolerance, see [Stack set operation options](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-concepts.html#stackset-ops-options).>
  take region-concurrency-type, name <RegionConcurrencyType>
    like region-concurrency-type
    void take
    note <The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.>
  take region-order, name <RegionOrder>
    like region-list
    void take
    note <The order of the Regions in where you want to perform the stack operation.>
  take failure-tolerance-count, name <FailureToleranceCount>
    like failure-tolerance-count
    void take
    note <The number of accounts, per Region, for which this operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.

Conditional: You must specify either `FailureToleranceCount` or `FailureTolerancePercentage` (but not both).

By default, `0` is specified.>
  take failure-tolerance-percentage, name <FailureTolerancePercentage>
    like failure-tolerance-percentage
    void take
    note <The percentage of accounts, per Region, for which this stack operation can fail before CloudFormation stops the operation in that Region. If the operation is stopped in a Region, CloudFormation doesn't attempt the operation in any subsequent Regions.

When calculating the number of accounts based on the specified percentage, CloudFormation rounds _down_ to the next whole number.

Conditional: You must specify either `FailureToleranceCount` or `FailureTolerancePercentage`, but not both.

By default, `0` is specified.>
  take max-concurrent-count, name <MaxConcurrentCount>
    like max-concurrent-count
    void take
    note <The maximum number of accounts in which to perform this operation at one time. This is dependent on the value of `FailureToleranceCount`. `MaxConcurrentCount` is at most one more than the `FailureToleranceCount`.

Note that this setting lets you specify the _maximum_ for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.

Conditional: You must specify either `MaxConcurrentCount` or `MaxConcurrentPercentage`, but not both.

By default, `1` is specified.>
  take max-concurrent-percentage, name <MaxConcurrentPercentage>
    like max-concurrent-percentage
    void take
    note <The maximum percentage of accounts in which to perform this operation at one time.

When calculating the number of accounts based on the specified percentage, CloudFormation rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, CloudFormation sets the number as one instead.

Note that this setting lets you specify the _maximum_ for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling.

Conditional: You must specify either `MaxConcurrentCount` or `MaxConcurrentPercentage`, but not both.

By default, `1` is specified.>