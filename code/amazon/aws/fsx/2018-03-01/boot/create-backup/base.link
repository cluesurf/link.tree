
load @termsurf/snow/amazonaws.com/fsx/2018-03-01/base/backup-in-progress
  take form backup-in-progress

load @termsurf/snow/amazonaws.com/fsx/2018-03-01/base/bad-request
  take form bad-request

load @termsurf/snow/amazonaws.com/fsx/2018-03-01/base/create-backup-response
  take form create-backup-response

load @termsurf/snow/amazonaws.com/fsx/2018-03-01/base/file-system-not-found
  take form file-system-not-found

load @termsurf/snow/amazonaws.com/fsx/2018-03-01/base/incompatible-parameter-error
  take form incompatible-parameter-error

load @termsurf/snow/amazonaws.com/fsx/2018-03-01/base/internal-server-error
  take form internal-server-error

load @termsurf/snow/amazonaws.com/fsx/2018-03-01/base/service-limit-exceeded
  take form service-limit-exceeded

load @termsurf/snow/amazonaws.com/fsx/2018-03-01/base/unsupported-operation
  take form unsupported-operation

load @termsurf/snow/amazonaws.com/fsx/2018-03-01/base/volume-not-found
  take form volume-not-found

load @termsurf/snow/base/native-string
  take form native-string

boot create-backup, name <CreateBackup>
  deed post
  note <Creates a backup of an existing Amazon FSx for Windows File Server or Amazon FSx for Lustre file system, or of an Amazon FSx for NetApp ONTAP volume. Creating regular backups is a best practice, enabling you to restore a file system or volume from a backup if an issue arises with the original file system or volume.

For Amazon FSx for Lustre file systems, you can create a backup only for file systems with the following configuration:

- a Persistent deployment type

- is _not_ linked to a data repository.

For more information about backups, see the following:

- For Amazon FSx for Lustre, see [Working with FSx for Lustre backups](https://docs.aws.amazon.com/fsx/latest/LustreGuide/using-backups-fsx.html).

- For Amazon FSx for Windows, see [Working with FSx for Windows backups](https://docs.aws.amazon.com/fsx/latest/WindowsGuide/using-backups.html).

- For Amazon FSx for NetApp ONTAP, see [Working with FSx for NetApp ONTAP backups](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/using-backups.html).

If a backup with the specified client request token exists, and the parameters match, this operation returns the description of the existing backup. If a backup specified client request token exists, and the parameters don't match, this operation returns `IncompatibleParameterError`. If a backup with the specified client request token doesn't exist, `CreateBackup` does the following:

- Creates a new Amazon FSx backup with an assigned ID, and an initial lifecycle state of `CREATING`.

- Returns the description of the backup.

By using the idempotent operation, you can retry a `CreateBackup` operation without the risk of creating an extra backup. This approach can be useful when an initial call fails in a way that makes it unclear whether a backup was created. If you use the same client request token and the initial call created a backup, the operation returns a successful result because all the parameters are the same.

The `CreateBackup` operation returns while the backup's lifecycle state is still `CREATING`. You can check the backup creation status by calling the DescribeBackups operation, which returns the backup state along with other information.>

  take x-amz-target
    like native-string
  take create-backup-request, like create-backup-request

  line </#X-Amz-Target=AWSSimbaAPIService_v20180301.CreateBackup>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-backup-request

  loot 200
    seed json, like create-backup-response
    note <Success>
  loot 480
    seed json, like bad-request
    note <BadRequest>
  loot 481
    seed json, like unsupported-operation
    note <UnsupportedOperation>
  loot 482
    seed json, like file-system-not-found
    note <FileSystemNotFound>
  loot 483
    seed json, like volume-not-found
    note <VolumeNotFound>
  loot 484
    seed json, like backup-in-progress
    note <BackupInProgress>
  loot 485
    seed json, like incompatible-parameter-error
    note <IncompatibleParameterError>
  loot 486
    seed json, like service-limit-exceeded
    note <ServiceLimitExceeded>
  loot 487
    seed json, like internal-server-error
    note <InternalServerError>