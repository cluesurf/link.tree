
load @treesurf/snow/amazonaws.com/codestar-connections/2019-12-01/base/account-id
  take form account-id

load @treesurf/snow/amazonaws.com/codestar-connections/2019-12-01/base/connection-arn
  take form connection-arn

load @treesurf/snow/amazonaws.com/codestar-connections/2019-12-01/base/connection-name
  take form connection-name

load @treesurf/snow/amazonaws.com/codestar-connections/2019-12-01/base/connection-status
  take form connection-status

load @treesurf/snow/amazonaws.com/codestar-connections/2019-12-01/base/host-arn
  take form host-arn

load @treesurf/snow/amazonaws.com/codestar-connections/2019-12-01/base/provider-type
  take form provider-type

form connection, name <Connection>
  note <A resource that is used to connect third-party source providers with services like AWS CodePipeline.

Note: A connection created through CloudFormation, the CLI, or the SDK is in `PENDING` status by default. You can make its status `AVAILABLE` by updating the connection in the console.>
  take connection-name, name <ConnectionName>
    like connection-name
    void take
    note <The name of the connection. Connection names must be unique in an AWS user account.>
  take connection-arn, name <ConnectionArn>
    like connection-arn
    void take
    note <The Amazon Resource Name (ARN) of the connection. The ARN is used as the connection reference when the connection is shared between AWS services.

The ARN is never reused if the connection is deleted.>
  take provider-type, name <ProviderType>
    like provider-type
    void take
    note <The name of the external provider where your third-party code repository is configured.>
  take owner-account-id, name <OwnerAccountId>
    like account-id
    void take
    note <The identifier of the external provider where your third-party code repository is configured. For Bitbucket, this is the account ID of the owner of the Bitbucket repository.>
  take connection-status, name <ConnectionStatus>
    like connection-status
    void take
    note <The current status of the connection.>
  take host-arn, name <HostArn>
    like host-arn
    void take
    note <The Amazon Resource Name (ARN) of the host associated with the connection.>