
load @drumwork/snow/amazonaws.com/codestar-connections/2019-12-01/base/host-arn
  take form host-arn

load @drumwork/snow/amazonaws.com/codestar-connections/2019-12-01/base/host-name
  take form host-name

load @drumwork/snow/amazonaws.com/codestar-connections/2019-12-01/base/host-status
  take form host-status

load @drumwork/snow/amazonaws.com/codestar-connections/2019-12-01/base/host-status-message
  take form host-status-message

load @drumwork/snow/amazonaws.com/codestar-connections/2019-12-01/base/provider-type
  take form provider-type

load @drumwork/snow/amazonaws.com/codestar-connections/2019-12-01/base/url
  take form url

load @drumwork/snow/amazonaws.com/codestar-connections/2019-12-01/base/vpc-configuration
  take form vpc-configuration

form host, name <Host>
  note <A resource that represents the infrastructure where a third-party provider is installed. The host is used when you create connections to an installed third-party provider type, such as GitHub Enterprise Server. You create one host for all connections to that provider.

A host created through the CLI or the SDK is in `PENDING` status by default. You can make its status `AVAILABLE` by setting up the host in the console.>
  take name, name <Name>
    like host-name
    void take
    note <The name of the host.>
  take host-arn, name <HostArn>
    like host-arn
    void take
    note <The Amazon Resource Name (ARN) of the host.>
  take provider-type, name <ProviderType>
    like provider-type
    void take
    note <The name of the installed provider to be associated with your connection. The host resource represents the infrastructure where your provider type is installed. The valid provider type is GitHub Enterprise Server.>
  take provider-endpoint, name <ProviderEndpoint>
    like url
    void take
    note <The endpoint of the infrastructure where your provider type is installed.>
  take vpc-configuration, name <VpcConfiguration>
    like vpc-configuration
    void take
    note <The VPC configuration provisioned for the host.>
  take status, name <Status>
    like host-status
    void take
    note <The status of the host, such as PENDING, AVAILABLE, VPC_CONFIG_DELETING, VPC_CONFIG_INITIALIZING, and VPC_CONFIG_FAILED_INITIALIZATION.>
  take status-message, name <StatusMessage>
    like host-status-message
    void take
    note <The status description for the host.>