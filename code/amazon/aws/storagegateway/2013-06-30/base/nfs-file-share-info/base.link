
load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/cache-attributes
  take form cache-attributes

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/dns-host-name
  take form dns-host-name

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/file-share-arn
  take form file-share-arn

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/file-share-client-list
  take form file-share-client-list

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/file-share-id
  take form file-share-id

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/file-share-name
  take form file-share-name

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/file-share-status
  take form file-share-status

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/gateway-arn
  take form gateway-arn

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/kms-key
  take form kms-key

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/location-arn
  take form location-arn

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/nfs-file-share-defaults
  take form nfs-file-share-defaults

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/notification-policy
  take form notification-policy

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/object-acl
  take form object-acl

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/path
  take form path

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/region-id
  take form region-id

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/role
  take form role

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/squash
  take form squash

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/storage-class
  take form storage-class

load @treesurf/snow/amazonaws.com/storagegateway/2013-06-30/base/tags
  take form tags

load @treesurf/snow/base/boolean
  take form boolean

form nfs-file-share-info, name <NFSFileShareInfo>
  note <The Unix file permissions and ownership information assigned, by default, to native S3 objects when an S3 File Gateway discovers them in S3 buckets. This operation is only supported in S3 File Gateways.>
  take nfs-file-share-defaults, name <NFSFileShareDefaults>
    like nfs-file-share-defaults
    void take
  take file-share-arn, name <FileShareARN>
    like file-share-arn
    void take
  take file-share-id, name <FileShareId>
    like file-share-id
    void take
  take file-share-status, name <FileShareStatus>
    like file-share-status
    void take
  take gateway-arn, name <GatewayARN>
    like gateway-arn
    void take
  take kms-encrypted, name <KMSEncrypted>
    like boolean
    void take
    note <Set to `true` to use Amazon S3 server-side encryption with your own KMS key, or `false` to use a key managed by Amazon S3. Optional.

Valid Values: `true` | `false`>
  take kms-key, name <KMSKey>
    like kms-key
    void take
  take path, name <Path>
    like path
    void take
  take role, name <Role>
    like role
    void take
  take location-arn, name <LocationARN>
    like location-arn
    void take
  take default-storage-class, name <DefaultStorageClass>
    like storage-class
    void take
    note <The default storage class for objects put into an Amazon S3 bucket by the S3 File Gateway. The default value is `S3_INTELLIGENT_TIERING`. Optional.

Valid Values: `S3_STANDARD` | `S3_INTELLIGENT_TIERING` | `S3_STANDARD_IA` | `S3_ONEZONE_IA`>
  take object-acl, name <ObjectACL>
    like object-acl
    void take
  take client-list, name <ClientList>
    like file-share-client-list
    void take
  take squash, name <Squash>
    like squash
    void take
  take read-only, name <ReadOnly>
    like boolean
    void take
    note <A value that sets the write status of a file share. Set this value to `true` to set the write status to read-only, otherwise set to `false`.

Valid Values: `true` | `false`>
  take guess-mime-type-enabled, name <GuessMIMETypeEnabled>
    like boolean
    void take
    note <A value that enables guessing of the MIME type for uploaded objects based on file extensions. Set this value to `true` to enable MIME type guessing, otherwise set to `false`. The default value is `true`.

Valid Values: `true` | `false`>
  take requester-pays, name <RequesterPays>
    like boolean
    void take
    note <A value that sets who pays the cost of the request and the cost associated with data download from the S3 bucket. If this value is set to `true`, the requester pays the costs; otherwise, the S3 bucket owner pays. However, the S3 bucket owner always pays the cost of storing data.

`RequesterPays` is a configuration for the S3 bucket that backs the file share, so make sure that the configuration on the file share is the same as the S3 bucket configuration.

Valid Values: `true` | `false`>
  take tags, name <Tags>
    like tags
    void take
    note <A list of up to 50 tags assigned to the NFS file share, sorted alphabetically by key name. Each tag is a key-value pair. For a gateway with more than 10 tags assigned, you can view all tags using the `ListTagsForResource` API operation.>
  take file-share-name, name <FileShareName>
    like file-share-name
    void take
    note <The name of the file share. Optional.

`FileShareName` must be set if an S3 prefix name is set in `LocationARN`.>
  take cache-attributes, name <CacheAttributes>
    like cache-attributes
    void take
    note <Refresh cache information for the file share.>
  take notification-policy, name <NotificationPolicy>
    like notification-policy
    void take
    note <The notification policy of the file share. `SettlingTimeInSeconds` controls the number of seconds to wait after the last point in time a client wrote to a file before generating an `ObjectUploaded` notification. Because clients can make many small writes to files, it's best to set this parameter for as long as possible to avoid generating multiple notifications for the same file in a small time period.

`SettlingTimeInSeconds` has no effect on the timing of the object uploading to Amazon S3, only the timing of the notification.

The following example sets `NotificationPolicy` on with `SettlingTimeInSeconds` set to 60.

`{\"Upload\": {\"SettlingTimeInSeconds\": 60}}`

The following example sets `NotificationPolicy` off.

`{}`>
  take vpc-endpoint-dns-name, name <VPCEndpointDNSName>
    like dns-host-name
    void take
    note <Specifies the DNS name for the VPC endpoint that the NFS file share uses to connect to Amazon S3.

This parameter is required for NFS file shares that connect to Amazon S3 through a VPC endpoint, a VPC access point, or an access point alias that points to a VPC access point.>
  take bucket-region, name <BucketRegion>
    like region-id
    void take
    note <Specifies the Region of the S3 bucket where the NFS file share stores files.

This parameter is required for NFS file shares that connect to Amazon S3 through a VPC endpoint, a VPC access point, or an access point alias that points to a VPC access point.>