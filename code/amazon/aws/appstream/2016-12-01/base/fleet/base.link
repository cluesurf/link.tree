
load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/arn
  take form arn

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/boolean-object
  take form boolean-object

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/compute-capacity-status
  take form compute-capacity-status

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/domain-join-info
  take form domain-join-info

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/fleet-errors
  take form fleet-errors

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/fleet-state
  take form fleet-state

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/fleet-type
  take form fleet-type

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/stream-view
  take form stream-view

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/timestamp
  take form timestamp

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/vpc-config
  take form vpc-config

load @textsurf/snow/base/integer
  take form integer

load @textsurf/snow/base/string
  take form string

form fleet, name <Fleet>
  note <Describes a fleet.>
  take arn, name <Arn>
    like arn
    note <The Amazon Resource Name (ARN) for the fleet.>
  take name, name <Name>
    like string
    note <The name of the fleet.>
  take display-name, name <DisplayName>
    like string
    void take
    note <The fleet name to display.>
  take description, name <Description>
    like string
    void take
    note <The description to display.>
  take image-name, name <ImageName>
    like string
    void take
    note <The name of the image used to create the fleet.>
  take image-arn, name <ImageArn>
    like arn
    void take
    note <The ARN for the public, private, or shared image.>
  take instance-type, name <InstanceType>
    like string
    note <The instance type to use when launching fleet instances. The following instance types are available:

- stream.standard.small

- stream.standard.medium

- stream.standard.large

- stream.compute.large

- stream.compute.xlarge

- stream.compute.2xlarge

- stream.compute.4xlarge

- stream.compute.8xlarge

- stream.memory.large

- stream.memory.xlarge

- stream.memory.2xlarge

- stream.memory.4xlarge

- stream.memory.8xlarge

- stream.memory.z1d.large

- stream.memory.z1d.xlarge

- stream.memory.z1d.2xlarge

- stream.memory.z1d.3xlarge

- stream.memory.z1d.6xlarge

- stream.memory.z1d.12xlarge

- stream.graphics-design.large

- stream.graphics-design.xlarge

- stream.graphics-design.2xlarge

- stream.graphics-design.4xlarge

- stream.graphics-desktop.2xlarge

- stream.graphics.g4dn.xlarge

- stream.graphics.g4dn.2xlarge

- stream.graphics.g4dn.4xlarge

- stream.graphics.g4dn.8xlarge

- stream.graphics.g4dn.12xlarge

- stream.graphics.g4dn.16xlarge

- stream.graphics-pro.4xlarge

- stream.graphics-pro.8xlarge

- stream.graphics-pro.16xlarge>
  take fleet-type, name <FleetType>
    like fleet-type
    void take
    note <The fleet type.

ALWAYS_ON

Provides users with instant-on access to their apps. You are charged for all running instances in your fleet, even if no users are streaming apps.

ON_DEMAND

Provide users with access to applications after they connect, which takes one to two minutes. You are charged for instance streaming when users are connected and a small hourly fee for instances that are not streaming apps.>
  take compute-capacity-status, name <ComputeCapacityStatus>
    like compute-capacity-status
    note <The capacity status for the fleet.>
  take max-user-duration-in-seconds, name <MaxUserDurationInSeconds>
    like integer
    void take
    note <The maximum amount of time that a streaming session can remain active, in seconds. If users are still connected to a streaming instance five minutes before this limit is reached, they are prompted to save any open documents before being disconnected. After this time elapses, the instance is terminated and replaced by a new instance.

Specify a value between 600 and 360000.>
  take disconnect-timeout-in-seconds, name <DisconnectTimeoutInSeconds>
    like integer
    void take
    note <The amount of time that a streaming session remains active after users disconnect. If they try to reconnect to the streaming session after a disconnection or network interruption within this time interval, they are connected to their previous session. Otherwise, they are connected to a new session with a new streaming instance.

Specify a value between 60 and 360000.>
  take state, name <State>
    like fleet-state
    note <The current state for the fleet.>
  take vpc-config, name <VpcConfig>
    like vpc-config
    void take
    note <The VPC configuration for the fleet.>
  take created-time, name <CreatedTime>
    like timestamp
    void take
    note <The time the fleet was created.>
  take fleet-errors, name <FleetErrors>
    like fleet-errors
    void take
    note <The fleet errors.>
  take enable-default-internet-access, name <EnableDefaultInternetAccess>
    like boolean-object
    void take
    note <Indicates whether default internet access is enabled for the fleet.>
  take domain-join-info, name <DomainJoinInfo>
    like domain-join-info
    void take
    note <The name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain.>
  take idle-disconnect-timeout-in-seconds, name <IdleDisconnectTimeoutInSeconds>
    like integer
    void take
    note <The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the `DisconnectTimeoutInSeconds` time interval begins. Users are notified before they are disconnected due to inactivity. If users try to reconnect to the streaming session before the time interval specified in `DisconnectTimeoutInSeconds` elapses, they are connected to their previous session. Users are considered idle when they stop providing keyboard or mouse input during their streaming session. File uploads and downloads, audio in, audio out, and pixels changing do not qualify as user activity. If users continue to be idle after the time interval in `IdleDisconnectTimeoutInSeconds` elapses, they are disconnected.

To prevent users from being disconnected due to inactivity, specify a value of 0. Otherwise, specify a value between 60 and 3600. The default value is 0.

If you enable this feature, we recommend that you specify a value that corresponds exactly to a whole number of minutes (for example, 60, 120, and 180). If you don't do this, the value is rounded to the nearest minute. For example, if you specify a value of 70, users are disconnected after 1 minute of inactivity. If you specify a value that is at the midpoint between two different minutes, the value is rounded up. For example, if you specify a value of 90, users are disconnected after 2 minutes of inactivity.>
  take iam-role-arn, name <IamRoleArn>
    like arn
    void take
    note <The ARN of the IAM role that is applied to the fleet. To assume a role, the fleet instance calls the AWS Security Token Service (STS) `AssumeRole` API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the **appstream_machine_role** credential profile on the instance.

For more information, see [Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances](https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html) in the _Amazon AppStream 2.0 Administration Guide_.>
  take stream-view, name <StreamView>
    like stream-view
    void take
    note <The AppStream 2.0 view that is displayed to your users when they stream from the fleet. When `APP` is specified, only the windows of applications opened by users display. When `DESKTOP` is specified, the standard desktop that is provided by the operating system displays.

The default value is `APP`.>