
load @termsurf/snow/amazonaws.com/appstream/2016-12-01/base/arn
  take form arn

load @termsurf/snow/amazonaws.com/appstream/2016-12-01/base/boolean-object
  take form boolean-object

load @termsurf/snow/amazonaws.com/appstream/2016-12-01/base/compute-capacity
  take form compute-capacity

load @termsurf/snow/amazonaws.com/appstream/2016-12-01/base/description
  take form description

load @termsurf/snow/amazonaws.com/appstream/2016-12-01/base/display-name
  take form display-name

load @termsurf/snow/amazonaws.com/appstream/2016-12-01/base/domain-join-info
  take form domain-join-info

load @termsurf/snow/amazonaws.com/appstream/2016-12-01/base/fleet-attributes
  take form fleet-attributes

load @termsurf/snow/amazonaws.com/appstream/2016-12-01/base/stream-view
  take form stream-view

load @termsurf/snow/amazonaws.com/appstream/2016-12-01/base/vpc-config
  take form vpc-config

load @termsurf/snow/base/boolean
  take form boolean

load @termsurf/snow/base/integer
  take form integer

load @termsurf/snow/base/string
  take form string

form update-fleet-request, name <UpdateFleetRequest>
  take image-name, name <ImageName>
    like string
    void take
    note <The name of the image used to create the fleet.>
  take image-arn, name <ImageArn>
    like arn
    void take
    note <The ARN of the public, private, or shared image to use.>
  take name, name <Name>
    like string
    void take
    note <A unique name for the fleet.>
  take instance-type, name <InstanceType>
    like string
    void take
    note <The instance type to use when launching fleet instances. The following instance types are available:

- stream.standard.small

- stream.standard.medium

- stream.standard.large

- stream.compute.large

- stream.compute.xlarge

- stream.compute.2xlarge

- stream.compute.4xlarge

- stream.compute.8xlarge

- stream.memory.large

- stream.memory.xlarge

- stream.memory.2xlarge

- stream.memory.4xlarge

- stream.memory.8xlarge

- stream.memory.z1d.large

- stream.memory.z1d.xlarge

- stream.memory.z1d.2xlarge

- stream.memory.z1d.3xlarge

- stream.memory.z1d.6xlarge

- stream.memory.z1d.12xlarge

- stream.graphics-design.large

- stream.graphics-design.xlarge

- stream.graphics-design.2xlarge

- stream.graphics-design.4xlarge

- stream.graphics-desktop.2xlarge

- stream.graphics.g4dn.xlarge

- stream.graphics.g4dn.2xlarge

- stream.graphics.g4dn.4xlarge

- stream.graphics.g4dn.8xlarge

- stream.graphics.g4dn.12xlarge

- stream.graphics.g4dn.16xlarge

- stream.graphics-pro.4xlarge

- stream.graphics-pro.8xlarge

- stream.graphics-pro.16xlarge>
  take compute-capacity, name <ComputeCapacity>
    like compute-capacity
    void take
    note <The desired capacity for the fleet.>
  take vpc-config, name <VpcConfig>
    like vpc-config
    void take
    note <The VPC configuration for the fleet.>
  take max-user-duration-in-seconds, name <MaxUserDurationInSeconds>
    like integer
    void take
    note <The maximum amount of time that a streaming session can remain active, in seconds. If users are still connected to a streaming instance five minutes before this limit is reached, they are prompted to save any open documents before being disconnected. After this time elapses, the instance is terminated and replaced by a new instance.

Specify a value between 600 and 360000.>
  take disconnect-timeout-in-seconds, name <DisconnectTimeoutInSeconds>
    like integer
    void take
    note <The amount of time that a streaming session remains active after users disconnect. If users try to reconnect to the streaming session after a disconnection or network interruption within this time interval, they are connected to their previous session. Otherwise, they are connected to a new session with a new streaming instance.

Specify a value between 60 and 360000.>
  take delete-vpc-config, name <DeleteVpcConfig>
    like boolean
    void take
    note <Deletes the VPC association for the specified fleet.>
  take description, name <Description>
    like description
    void take
    note <The description to display.>
  take display-name, name <DisplayName>
    like display-name
    void take
    note <The fleet name to display.>
  take enable-default-internet-access, name <EnableDefaultInternetAccess>
    like boolean-object
    void take
    note <Enables or disables default internet access for the fleet.>
  take domain-join-info, name <DomainJoinInfo>
    like domain-join-info
    void take
    note <The name of the directory and organizational unit (OU) to use to join the fleet to a Microsoft Active Directory domain.>
  take idle-disconnect-timeout-in-seconds, name <IdleDisconnectTimeoutInSeconds>
    like integer
    void take
    note <The amount of time that users can be idle (inactive) before they are disconnected from their streaming session and the `DisconnectTimeoutInSeconds` time interval begins. Users are notified before they are disconnected due to inactivity. If users try to reconnect to the streaming session before the time interval specified in `DisconnectTimeoutInSeconds` elapses, they are connected to their previous session. Users are considered idle when they stop providing keyboard or mouse input during their streaming session. File uploads and downloads, audio in, audio out, and pixels changing do not qualify as user activity. If users continue to be idle after the time interval in `IdleDisconnectTimeoutInSeconds` elapses, they are disconnected.

To prevent users from being disconnected due to inactivity, specify a value of 0. Otherwise, specify a value between 60 and 3600. The default value is 0.

If you enable this feature, we recommend that you specify a value that corresponds exactly to a whole number of minutes (for example, 60, 120, and 180). If you don't do this, the value is rounded to the nearest minute. For example, if you specify a value of 70, users are disconnected after 1 minute of inactivity. If you specify a value that is at the midpoint between two different minutes, the value is rounded up. For example, if you specify a value of 90, users are disconnected after 2 minutes of inactivity.>
  take attributes-to-delete, name <AttributesToDelete>
    like fleet-attributes
    void take
    note <The fleet attributes to delete.>
  take iam-role-arn, name <IamRoleArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the IAM role to apply to the fleet. To assume a role, a fleet instance calls the AWS Security Token Service (STS) `AssumeRole` API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the **appstream_machine_role** credential profile on the instance.

For more information, see [Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances](https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html) in the _Amazon AppStream 2.0 Administration Guide_.>
  take stream-view, name <StreamView>
    like stream-view
    void take
    note <The AppStream 2.0 view that is displayed to your users when they stream from the fleet. When `APP` is specified, only the windows of applications opened by users display. When `DESKTOP` is specified, the standard desktop that is provided by the operating system displays.

The default value is `APP`.>