
load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/access-endpoint-list
  take form access-endpoint-list

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/appstream-agent-version
  take form appstream-agent-version

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/arn
  take form arn

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/boolean-object
  take form boolean-object

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/description
  take form description

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/display-name
  take form display-name

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/domain-join-info
  take form domain-join-info

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/name
  take form name

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/tags
  take form tags

load @textsurf/snow/amazonaws.com/appstream/2016-12-01/base/vpc-config
  take form vpc-config

load @textsurf/snow/base/string
  take form string

form create-image-builder-request, name <CreateImageBuilderRequest>
  take name, name <Name>
    like name
    note <A unique name for the image builder.>
  take image-name, name <ImageName>
    like string
    void take
    note <The name of the image used to create the image builder.>
  take image-arn, name <ImageArn>
    like arn
    void take
    note <The ARN of the public, private, or shared image to use.>
  take instance-type, name <InstanceType>
    like string
    note <The instance type to use when launching the image builder. The following instance types are available:

- stream.standard.small

- stream.standard.medium

- stream.standard.large

- stream.compute.large

- stream.compute.xlarge

- stream.compute.2xlarge

- stream.compute.4xlarge

- stream.compute.8xlarge

- stream.memory.large

- stream.memory.xlarge

- stream.memory.2xlarge

- stream.memory.4xlarge

- stream.memory.8xlarge

- stream.memory.z1d.large

- stream.memory.z1d.xlarge

- stream.memory.z1d.2xlarge

- stream.memory.z1d.3xlarge

- stream.memory.z1d.6xlarge

- stream.memory.z1d.12xlarge

- stream.graphics-design.large

- stream.graphics-design.xlarge

- stream.graphics-design.2xlarge

- stream.graphics-design.4xlarge

- stream.graphics-desktop.2xlarge

- stream.graphics.g4dn.xlarge

- stream.graphics.g4dn.2xlarge

- stream.graphics.g4dn.4xlarge

- stream.graphics.g4dn.8xlarge

- stream.graphics.g4dn.12xlarge

- stream.graphics.g4dn.16xlarge

- stream.graphics-pro.4xlarge

- stream.graphics-pro.8xlarge

- stream.graphics-pro.16xlarge>
  take description, name <Description>
    like description
    void take
    note <The description to display.>
  take display-name, name <DisplayName>
    like display-name
    void take
    note <The image builder name to display.>
  take vpc-config, name <VpcConfig>
    like vpc-config
    void take
    note <The VPC configuration for the image builder. You can specify only one subnet.>
  take iam-role-arn, name <IamRoleArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the IAM role to apply to the image builder. To assume a role, the image builder calls the AWS Security Token Service (STS) `AssumeRole` API operation and passes the ARN of the role to use. The operation creates a new session with temporary credentials. AppStream 2.0 retrieves the temporary credentials and creates the **appstream_machine_role** credential profile on the instance.

For more information, see [Using an IAM Role to Grant Permissions to Applications and Scripts Running on AppStream 2.0 Streaming Instances](https://docs.aws.amazon.com/appstream2/latest/developerguide/using-iam-roles-to-grant-permissions-to-applications-scripts-streaming-instances.html) in the _Amazon AppStream 2.0 Administration Guide_.>
  take enable-default-internet-access, name <EnableDefaultInternetAccess>
    like boolean-object
    void take
    note <Enables or disables default internet access for the image builder.>
  take domain-join-info, name <DomainJoinInfo>
    like domain-join-info
    void take
    note <The name of the directory and organizational unit (OU) to use to join the image builder to a Microsoft Active Directory domain.>
  take appstream-agent-version, name <AppstreamAgentVersion>
    like appstream-agent-version
    void take
    note <The version of the AppStream 2.0 agent to use for this image builder. To use the latest version of the AppStream 2.0 agent, specify [LATEST].>
  take tags, name <Tags>
    like tags
    void take
    note <The tags to associate with the image builder. A tag is a key-value pair, and the value is optional. For example, Environment=Test. If you do not specify a value, Environment=.

Generally allowed characters are: letters, numbers, and spaces representable in UTF-8, and the following special characters:

_ . : / = + \ - @

If you do not specify a value, the value is set to an empty string.

For more information about tags, see [Tagging Your Resources](https://docs.aws.amazon.com/appstream2/latest/developerguide/tagging-basic.html) in the _Amazon AppStream 2.0 Administration Guide_.>
  take access-endpoints, name <AccessEndpoints>
    like access-endpoint-list
    void take
    note <The list of interface VPC endpoint (interface endpoint) objects. Administrators can connect to the image builder only through the specified endpoints.>