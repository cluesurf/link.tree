
load @wavebond/snow/amazonaws.com/kinesisanalytics/2015-08-14/base/discover-input-schema-response
  take form discover-input-schema-response

load @wavebond/snow/amazonaws.com/kinesisanalytics/2015-08-14/base/invalid-argument-exception
  take form invalid-argument-exception

load @wavebond/snow/amazonaws.com/kinesisanalytics/2015-08-14/base/resource-provisioned-throughput-exceeded-exception
  take form resource-provisioned-throughput-exceeded-exception

load @wavebond/snow/amazonaws.com/kinesisanalytics/2015-08-14/base/service-unavailable-exception
  take form service-unavailable-exception

load @wavebond/snow/amazonaws.com/kinesisanalytics/2015-08-14/base/unable-to-detect-schema-exception
  take form unable-to-detect-schema-exception

load @wavebond/snow/base/native-string
  take form native-string

boot discover-input-schema, name <DiscoverInputSchema>
  deed post
  note <This documentation is for version 1 of the Amazon Kinesis Data Analytics API, which only supports SQL applications. Version 2 of the API supports SQL and Java applications. For more information about version 2, see [Amazon Kinesis Data Analytics API V2 Documentation](/kinesisanalytics/latest/apiv2/Welcome.html).

Infers a schema by evaluating sample records on the specified streaming source (Amazon Kinesis stream or Amazon Kinesis Firehose delivery stream) or S3 object. In the response, the operation returns the inferred schema and also the sample records that the operation used to infer the schema.

You can use the inferred schema when configuring a streaming source for your application. For conceptual information, see [Configuring Application Input](https://docs.aws.amazon.com/kinesisanalytics/latest/dev/how-it-works-input.html). Note that when you create an application using the Amazon Kinesis Analytics console, the console uses this operation to infer a schema and show it in the console user interface.

This operation requires permissions to perform the `kinesisanalytics:DiscoverInputSchema` action.>

  take x-amz-target
    like native-string
  take discover-input-schema-request, like discover-input-schema-request

  line </#X-Amz-Target=KinesisAnalytics_20150814.DiscoverInputSchema>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan discover-input-schema-request

  loot 200
    seed json, like discover-input-schema-response
    note <Success>
  loot 480
    seed json, like invalid-argument-exception
    note <InvalidArgumentException>
  loot 481
    seed json, like unable-to-detect-schema-exception
    note <UnableToDetectSchemaException>
  loot 482
    seed json, like resource-provisioned-throughput-exceeded-exception
    note <ResourceProvisionedThroughputExceededException>
  loot 483
    seed json, like service-unavailable-exception
    note <ServiceUnavailableException>