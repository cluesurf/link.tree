
load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/date-time
  take form date-time

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/instance-interruption-behavior
  take form instance-interruption-behavior

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/request-spot-launch-specification
  take form request-spot-launch-specification

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/spot-instance-type
  take form spot-instance-type

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/tag-specification-list
  take form tag-specification-list

load @drumwork/snow/base/boolean
  take form boolean

load @drumwork/snow/base/integer
  take form integer

load @drumwork/snow/base/string
  take form string

form request-spot-instances-request, name <RequestSpotInstancesRequest>
  note <Contains the parameters for RequestSpotInstances.>
  take availability-zone-group, name <AvailabilityZoneGroup>
    like string
    void take
    note <The user-specified name for a logical grouping of requests.

When you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to requests for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.

If there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the request is expired, or the maximum price you specified falls below current Spot price), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.

Default: Instances are launched in any available Availability Zone.>
    host xml
      host name, text <availabilityZoneGroup>
  take block-duration-minutes, name <BlockDurationMinutes>
    like integer
    void take
    note <Deprecated.>
    host xml
      host name, text <blockDurationMinutes>
  take client-token, name <ClientToken>
    like string
    void take
    note <Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [How to Ensure Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html) in the _Amazon EC2 User Guide for Linux Instances_.>
    host xml
      host name, text <clientToken>
  take dry-run, name <DryRun>
    like boolean
    void take
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    host xml
      host name, text <dryRun>
  take instance-count, name <InstanceCount>
    like integer
    void take
    note <The maximum number of Spot Instances to launch.

Default: 1>
    host xml
      host name, text <instanceCount>
  take launch-group, name <LaunchGroup>
    like string
    void take
    note <The instance launch group. Launch groups are Spot Instances that launch together and terminate together.

Default: Instances are launched and terminated individually>
    host xml
      host name, text <launchGroup>
  take launch-specification, name <LaunchSpecification>
    like request-spot-launch-specification
    void take
    note <The launch specification.>
  take spot-price, name <SpotPrice>
    like string
    void take
    note <The maximum price per hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.>
    host xml
      host name, text <spotPrice>
  take type, name <Type>
    like spot-instance-type
    void take
    note <The Spot Instance request type.

Default: `one-time`>
    host xml
      host name, text <type>
  take valid-from, name <ValidFrom>
    like date-time
    void take
    note <The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.

The specified start date and time cannot be equal to the current date and time. You must specify a start date and time that occurs after the current date and time.>
    host xml
      host name, text <validFrom>
  take valid-until, name <ValidUntil>
    like date-time
    void take
    note <The end date of the request, in UTC format (_YYYY_-_MM_-_DD_T_HH_:_MM_:_SS_Z).

- For a persistent request, the request remains active until the `ValidUntil` date and time is reached. Otherwise, the request remains active until you cancel it.

- For a one-time request, the request remains active until all instances launch, the request is canceled, or the `ValidUntil` date and time is reached. By default, the request is valid for 7 days from the date the request was created.>
    host xml
      host name, text <validUntil>
  take tag-specifications, name <TagSpecifications>
    like tag-specification-list
    void take
    note <The key-value pair for tagging the Spot Instance request on creation. The value for `ResourceType` must be `spot-instances-request`, otherwise the Spot Instance request fails. To tag the Spot Instance request after it has been created, see [CreateTags](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html).>
    host xml
      host name, text <TagSpecification>
  take instance-interruption-behavior, name <InstanceInterruptionBehavior>
    like instance-interruption-behavior
    void take
    note <The behavior when a Spot Instance is interrupted. The default is `terminate`.>