
load @wavebond/snow/amazonaws.com/ec2/2016-11-15/base/traffic-direction
  take form traffic-direction

load @wavebond/snow/amazonaws.com/ec2/2016-11-15/base/traffic-mirror-filter-rule-field-list
  take form traffic-mirror-filter-rule-field-list

load @wavebond/snow/amazonaws.com/ec2/2016-11-15/base/traffic-mirror-filter-rule-id
  take form traffic-mirror-filter-rule-id

load @wavebond/snow/amazonaws.com/ec2/2016-11-15/base/traffic-mirror-port-range-request
  take form traffic-mirror-port-range-request

load @wavebond/snow/amazonaws.com/ec2/2016-11-15/base/traffic-mirror-rule-action
  take form traffic-mirror-rule-action

load @wavebond/snow/base/boolean
  take form boolean

load @wavebond/snow/base/integer
  take form integer

load @wavebond/snow/base/string
  take form string

form modify-traffic-mirror-filter-rule-request, name <ModifyTrafficMirrorFilterRuleRequest>
  take traffic-mirror-filter-rule-id, name <TrafficMirrorFilterRuleId>
    like traffic-mirror-filter-rule-id
    note <The ID of the Traffic Mirror rule.>
  take traffic-direction, name <TrafficDirection>
    like traffic-direction
    void take
    note <The type of traffic (`ingress` | `egress`) to assign to the rule.>
  take rule-number, name <RuleNumber>
    like integer
    void take
    note <The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.>
  take rule-action, name <RuleAction>
    like traffic-mirror-rule-action
    void take
    note <The action to assign to the rule.>
  take destination-port-range, name <DestinationPortRange>
    like traffic-mirror-port-range-request
    void take
    note <The destination ports that are associated with the Traffic Mirror rule.>
  take source-port-range, name <SourcePortRange>
    like traffic-mirror-port-range-request
    void take
    note <The port range to assign to the Traffic Mirror rule.>
  take protocol, name <Protocol>
    like integer
    void take
    note <The protocol, for example TCP, to assign to the Traffic Mirror rule.>
  take destination-cidr-block, name <DestinationCidrBlock>
    like string
    void take
    note <The destination CIDR block to assign to the Traffic Mirror rule.>
  take source-cidr-block, name <SourceCidrBlock>
    like string
    void take
    note <The source CIDR block to assign to the Traffic Mirror rule.>
  take description, name <Description>
    like string
    void take
    note <The description to assign to the Traffic Mirror rule.>
  take remove-fields, name <RemoveFields>
    like traffic-mirror-filter-rule-field-list
    void take
    note <The properties that you want to remove from the Traffic Mirror filter rule.

When you remove a property from a Traffic Mirror filter rule, the property is set to the default.>
    host xml
      host name, text <RemoveField>
  take dry-run, name <DryRun>
    like boolean
    void take
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
