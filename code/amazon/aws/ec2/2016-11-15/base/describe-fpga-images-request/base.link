
load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/describe-fpga-images-max-results
  take form describe-fpga-images-max-results

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/filter-list
  take form filter-list

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/fpga-image-id-list
  take form fpga-image-id-list

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/next-token
  take form next-token

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/owner-string-list
  take form owner-string-list

load @drumwork/snow/base/boolean
  take form boolean

form describe-fpga-images-request, name <DescribeFpgaImagesRequest>
  take dry-run, name <DryRun>
    like boolean
    void take
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
  take fpga-image-ids, name <FpgaImageIds>
    like fpga-image-id-list
    void take
    note <The AFI IDs.>
    host xml
      host name, text <FpgaImageId>
  take owners, name <Owners>
    like owner-string-list
    void take
    note <Filters the AFI by owner. Specify an AWS account ID, `self` (owner is the sender of the request), or an AWS owner alias (valid values are `amazon` | `aws-marketplace`).>
    host xml
      host name, text <Owner>
  take filters, name <Filters>
    like filter-list
    void take
    note <The filters.

- `create-time` - The creation time of the AFI.

- `fpga-image-id` - The FPGA image identifier (AFI ID).

- `fpga-image-global-id` - The global FPGA image identifier (AGFI ID).

- `name` - The name of the AFI.

- `owner-id` - The AWS account ID of the AFI owner.

- `product-code` - The product code.

- `shell-version` - The version of the AWS Shell that was used to create the bitstream.

- `state` - The state of the AFI (`pending` | `failed` | `available` | `unavailable`).

- `tag`:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA`, specify `tag:Owner` for the filter name and `TeamA` for the filter value.

- `tag-key` - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.

- `update-time` - The time of the most recent update.>
    host xml
      host name, text <Filter>
  take next-token, name <NextToken>
    like next-token
    void take
    note <The token to retrieve the next page of results.>
  take max-results, name <MaxResults>
    like describe-fpga-images-max-results
    void take
    note <The maximum number of results to return in a single call.>