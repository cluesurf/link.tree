
load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/fleet-spot-maintenance-strategies
  take form fleet-spot-maintenance-strategies

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/spot-allocation-strategy
  take form spot-allocation-strategy

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/spot-instance-interruption-behavior
  take form spot-instance-interruption-behavior

load @nerdbond/snow/base/boolean
  take form boolean

load @nerdbond/snow/base/integer
  take form integer

load @nerdbond/snow/base/string
  take form string

form spot-options, name <SpotOptions>
  note <Describes the configuration of Spot Instances in an EC2 Fleet.>
  take allocation-strategy, name <AllocationStrategy>
    like spot-allocation-strategy
    void take
    note <Indicates how to allocate the target Spot Instance capacity across the Spot Instance pools specified by the EC2 Fleet.

If the allocation strategy is `lowest-price`, EC2 Fleet launches instances from the Spot Instance pools with the lowest price. This is the default allocation strategy.

If the allocation strategy is `diversified`, EC2 Fleet launches instances from all of the Spot Instance pools that you specify.

If the allocation strategy is `capacity-optimized` (recommended), EC2 Fleet launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching. To give certain instance types a higher chance of launching first, use `capacity-optimized-prioritized`. Set a priority for each instance type by using the `Priority` parameter for `LaunchTemplateOverrides`. You can assign the same priority to different `LaunchTemplateOverrides`. EC2 implements the priorities on a best-effort basis, but optimizes for capacity first. `capacity-optimized-prioritized` is supported only if your fleet uses a launch template. Note that if the On-Demand `AllocationStrategy` is set to `prioritized`, the same priority is applied when fulfilling On-Demand capacity.>
    host xml
      host name, text <allocationStrategy>
  take maintenance-strategies, name <MaintenanceStrategies>
    like fleet-spot-maintenance-strategies
    void take
    note <The strategies for managing your workloads on your Spot Instances that will be interrupted. Currently only the capacity rebalance strategy is available.>
    host xml
      host name, text <maintenanceStrategies>
  take instance-interruption-behavior, name <InstanceInterruptionBehavior>
    like spot-instance-interruption-behavior
    void take
    note <The behavior when a Spot Instance is interrupted. The default is `terminate`.>
    host xml
      host name, text <instanceInterruptionBehavior>
  take instance-pools-to-use-count, name <InstancePoolsToUseCount>
    like integer
    void take
    note <The number of Spot pools across which to allocate your target Spot capacity. Valid only when **AllocationStrategy** is set to `lowest-price`. EC2 Fleet selects the cheapest Spot pools and evenly allocates your target Spot capacity across the number of Spot pools that you specify.

Note that EC2 Fleet attempts to draw Spot Instances from the number of pools that you specify on a best effort basis. If a pool runs out of Spot capacity before fulfilling your target capacity, EC2 Fleet will continue to fulfill your request by drawing from the next cheapest pool. To ensure that your target capacity is met, you might receive Spot Instances from more than the number of pools that you specified. Similarly, if most of the pools have no Spot capacity, you might receive your full target capacity from fewer than the number of pools that you specified.>
    host xml
      host name, text <instancePoolsToUseCount>
  take single-instance-type, name <SingleInstanceType>
    like boolean
    void take
    note <Indicates that the fleet uses a single instance type to launch all Spot Instances in the fleet. Supported only for fleets of type `instant`.>
    host xml
      host name, text <singleInstanceType>
  take single-availability-zone, name <SingleAvailabilityZone>
    like boolean
    void take
    note <Indicates that the fleet launches all Spot Instances into a single Availability Zone. Supported only for fleets of type `instant`.>
    host xml
      host name, text <singleAvailabilityZone>
  take min-target-capacity, name <MinTargetCapacity>
    like integer
    void take
    note <The minimum target capacity for Spot Instances in the fleet. If the minimum target capacity is not reached, the fleet launches no instances.>
    host xml
      host name, text <minTargetCapacity>
  take max-total-price, name <MaxTotalPrice>
    like string
    void take
    note <The maximum amount per hour for Spot Instances that you're willing to pay.>
    host xml
      host name, text <maxTotalPrice>
