
load @termsurf/snow/amazonaws.com/ec2/2016-11-15/base/date-time
  take form date-time

load @termsurf/snow/amazonaws.com/ec2/2016-11-15/base/filter-list
  take form filter-list

load @termsurf/snow/amazonaws.com/ec2/2016-11-15/base/instance-type-list
  take form instance-type-list

load @termsurf/snow/amazonaws.com/ec2/2016-11-15/base/product-description-list
  take form product-description-list

load @termsurf/snow/base/boolean
  take form boolean

load @termsurf/snow/base/integer
  take form integer

load @termsurf/snow/base/string
  take form string

form describe-spot-price-history-request, name <DescribeSpotPriceHistoryRequest>
  note <Contains the parameters for DescribeSpotPriceHistory.>
  take filters, name <Filters>
    like filter-list
    void take
    note <One or more filters.

- `availability-zone` - The Availability Zone for which prices should be returned.

- `instance-type` - The type of instance (for example, `m3.medium`).

- `product-description` - The product description for the Spot price (`Linux/UNIX` | `Red Hat Enterprise Linux` | `SUSE Linux` | `Windows` | `Linux/UNIX (Amazon VPC)` | `Red Hat Enterprise Linux (Amazon VPC)` | `SUSE Linux (Amazon VPC)` | `Windows (Amazon VPC)`).

- `spot-price` - The Spot price. The value must match exactly (or use wildcards; greater than or less than comparison is not supported).

- `timestamp` - The time stamp of the Spot price history, in UTC format (for example, _YYYY_-_MM_-_DD_T_HH_:_MM_:_SS_Z). You can use wildcards (* and ?). Greater than or less than comparison is not supported.>
    host xml
      host name, text <Filter>
  take availability-zone, name <AvailabilityZone>
    like string
    void take
    note <Filters the results by the specified Availability Zone.>
    host xml
      host name, text <availabilityZone>
  take dry-run, name <DryRun>
    like boolean
    void take
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    host xml
      host name, text <dryRun>
  take end-time, name <EndTime>
    like date-time
    void take
    note <The date and time, up to the current date, from which to stop retrieving the price history data, in UTC format (for example, _YYYY_-_MM_-_DD_T_HH_:_MM_:_SS_Z).>
    host xml
      host name, text <endTime>
  take instance-types, name <InstanceTypes>
    like instance-type-list
    void take
    note <Filters the results by the specified instance types.>
    host xml
      host name, text <InstanceType>
  take max-results, name <MaxResults>
    like integer
    void take
    note <The maximum number of results to return in a single call. Specify a value between 1 and 1000. The default value is 1000. To retrieve the remaining results, make another call with the returned `NextToken` value.>
    host xml
      host name, text <maxResults>
  take next-token, name <NextToken>
    like string
    void take
    note <The token for the next set of results.>
    host xml
      host name, text <nextToken>
  take product-descriptions, name <ProductDescriptions>
    like product-description-list
    void take
    note <Filters the results by the specified basic product descriptions.>
    host xml
      host name, text <ProductDescription>
  take start-time, name <StartTime>
    like date-time
    void take
    note <The date and time, up to the past 90 days, from which to start retrieving the price history data, in UTC format (for example, _YYYY_-_MM_-_DD_T_HH_:_MM_:_SS_Z).>
    host xml
      host name, text <startTime>
