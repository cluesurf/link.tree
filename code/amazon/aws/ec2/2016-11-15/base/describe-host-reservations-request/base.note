
load @termsurf/snow/amazonaws.com/ec2/2016-11-15/base/filter-list
  take form filter-list

load @termsurf/snow/amazonaws.com/ec2/2016-11-15/base/host-reservation-id-set
  take form host-reservation-id-set

load @termsurf/snow/base/integer
  take form integer

load @termsurf/snow/base/string
  take form string

form describe-host-reservations-request, name <DescribeHostReservationsRequest>
  take filter, name <Filter>
    like filter-list
    void take
    note <The filters.

- `instance-family` - The instance family (for example, `m4`).

- `payment-option` - The payment option (`NoUpfront` | `PartialUpfront` | `AllUpfront`).

- `state` - The state of the reservation (`payment-pending` | `payment-failed` | `active` | `retired`).

- `tag:&lt;key&gt;` - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA`, specify `tag:Owner` for the filter name and `TeamA` for the filter value.

- `tag-key` - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.>
  take host-reservation-id-set, name <HostReservationIdSet>
    like host-reservation-id-set
    void take
    note <The host reservation IDs.>
  take max-results, name <MaxResults>
    like integer
    void take
    note <The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned `nextToken` value. This value can be between 5 and 500. If `maxResults` is given a larger value than 500, you receive an error.>
  take next-token, name <NextToken>
    like string
    void take
    note <The token to use to retrieve the next page of results.>
