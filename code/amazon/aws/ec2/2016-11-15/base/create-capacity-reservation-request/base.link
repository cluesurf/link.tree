
load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/capacity-reservation-instance-platform
  take form capacity-reservation-instance-platform

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/capacity-reservation-tenancy
  take form capacity-reservation-tenancy

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/date-time
  take form date-time

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/end-date-type
  take form end-date-type

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/instance-match-criteria
  take form instance-match-criteria

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/outpost-arn
  take form outpost-arn

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/tag-specification-list
  take form tag-specification-list

load @drumwork/snow/base/boolean
  take form boolean

load @drumwork/snow/base/integer
  take form integer

load @drumwork/snow/base/string
  take form string

form create-capacity-reservation-request, name <CreateCapacityReservationRequest>
  take client-token, name <ClientToken>
    like string
    void take
    note <Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [Ensure Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).>
  take instance-type, name <InstanceType>
    like string
    note <The instance type for which to reserve capacity. For more information, see [Instance types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html) in the _Amazon EC2 User Guide_.>
  take instance-platform, name <InstancePlatform>
    like capacity-reservation-instance-platform
    note <The type of operating system for which to reserve capacity.>
  take availability-zone, name <AvailabilityZone>
    like string
    void take
    note <The Availability Zone in which to create the Capacity Reservation.>
  take availability-zone-id, name <AvailabilityZoneId>
    like string
    void take
    note <The ID of the Availability Zone in which to create the Capacity Reservation.>
  take tenancy, name <Tenancy>
    like capacity-reservation-tenancy
    void take
    note <Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:

- `default` - The Capacity Reservation is created on hardware that is shared with other Amazon Web Services accounts.

- `dedicated` - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.>
  take instance-count, name <InstanceCount>
    like integer
    note <The number of instances for which to reserve capacity.

Valid range: 1 - 1000>
  take ebs-optimized, name <EbsOptimized>
    like boolean
    void take
    note <Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.>
  take ephemeral-storage, name <EphemeralStorage>
    like boolean
    void take
    note <Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.>
  take end-date, name <EndDate>
    like date-time
    void take
    note <The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to `expired` when it reaches its end date and time.

You must provide an `EndDate` value if `EndDateType` is `limited`. Omit `EndDate` if `EndDateType` is `unlimited`.

If the `EndDateType` is `limited`, the Capacity Reservation is cancelled within an hour from the specified time. For example, if you specify 5/31/2019, 13:30:55, the Capacity Reservation is guaranteed to end between 13:30:55 and 14:30:55 on 5/31/2019.>
  take end-date-type, name <EndDateType>
    like end-date-type
    void take
    note <Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:

- `unlimited` - The Capacity Reservation remains active until you explicitly cancel it. Do not provide an `EndDate` if the `EndDateType` is `unlimited`.

- `limited` - The Capacity Reservation expires automatically at a specified date and time. You must provide an `EndDate` value if the `EndDateType` value is `limited`.>
  take instance-match-criteria, name <InstanceMatchCriteria>
    like instance-match-criteria
    void take
    note <Indicates the type of instance launches that the Capacity Reservation accepts. The options include:

- `open` - The Capacity Reservation automatically matches all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes run in the Capacity Reservation automatically without specifying any additional parameters.

- `targeted` - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.

Default: `open`>
  take tag-specifications, name <TagSpecifications>
    like tag-specification-list
    void take
    note <The tags to apply to the Capacity Reservation during launch.>
  take dry-run, name <DryRun>
    like boolean
    void take
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
  take outpost-arn, name <OutpostArn>
    like outpost-arn
    void take
    note <The Amazon Resource Name (ARN) of the Outpost on which to create the Capacity Reservation.>