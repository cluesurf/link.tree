
load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/capacity-reservation-instance-platform
  take form capacity-reservation-instance-platform

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/capacity-reservation-state
  take form capacity-reservation-state

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/capacity-reservation-tenancy
  take form capacity-reservation-tenancy

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/date-time
  take form date-time

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/end-date-type
  take form end-date-type

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/instance-match-criteria
  take form instance-match-criteria

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/millisecond-date-time
  take form millisecond-date-time

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/outpost-arn
  take form outpost-arn

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/tag-list
  take form tag-list

load @nerdbond/snow/base/boolean
  take form boolean

load @nerdbond/snow/base/integer
  take form integer

load @nerdbond/snow/base/string
  take form string

form capacity-reservation, name <CapacityReservation>
  note <Describes a Capacity Reservation.>
  take capacity-reservation-id, name <CapacityReservationId>
    like string
    void take
    note <The ID of the Capacity Reservation.>
    host xml
      host name, text <capacityReservationId>
  take owner-id, name <OwnerId>
    like string
    void take
    note <The ID of the Amazon Web Services account that owns the Capacity Reservation.>
    host xml
      host name, text <ownerId>
  take capacity-reservation-arn, name <CapacityReservationArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the Capacity Reservation.>
    host xml
      host name, text <capacityReservationArn>
  take availability-zone-id, name <AvailabilityZoneId>
    like string
    void take
    note <The Availability Zone ID of the Capacity Reservation.>
    host xml
      host name, text <availabilityZoneId>
  take instance-type, name <InstanceType>
    like string
    void take
    note <The type of instance for which the Capacity Reservation reserves capacity.>
    host xml
      host name, text <instanceType>
  take instance-platform, name <InstancePlatform>
    like capacity-reservation-instance-platform
    void take
    note <The type of operating system for which the Capacity Reservation reserves capacity.>
    host xml
      host name, text <instancePlatform>
  take availability-zone, name <AvailabilityZone>
    like string
    void take
    note <The Availability Zone in which the capacity is reserved.>
    host xml
      host name, text <availabilityZone>
  take tenancy, name <Tenancy>
    like capacity-reservation-tenancy
    void take
    note <Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:

- `default` - The Capacity Reservation is created on hardware that is shared with other Amazon Web Services accounts.

- `dedicated` - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.>
    host xml
      host name, text <tenancy>
  take total-instance-count, name <TotalInstanceCount>
    like integer
    void take
    note <The total number of instances for which the Capacity Reservation reserves capacity.>
    host xml
      host name, text <totalInstanceCount>
  take available-instance-count, name <AvailableInstanceCount>
    like integer
    void take
    note <The remaining capacity. Indicates the number of instances that can be launched in the Capacity Reservation.>
    host xml
      host name, text <availableInstanceCount>
  take ebs-optimized, name <EbsOptimized>
    like boolean
    void take
    note <Indicates whether the Capacity Reservation supports EBS-optimized instances. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS- optimized instance.>
    host xml
      host name, text <ebsOptimized>
  take ephemeral-storage, name <EphemeralStorage>
    like boolean
    void take
    note <Indicates whether the Capacity Reservation supports instances with temporary, block-level storage.>
    host xml
      host name, text <ephemeralStorage>
  take state, name <State>
    like capacity-reservation-state
    void take
    note <The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:

- `active` - The Capacity Reservation is active and the capacity is available for your use.

- `expired` - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.

- `cancelled` - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.

- `pending` - The Capacity Reservation request was successful but the capacity provisioning is still pending.

- `failed` - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.>
    host xml
      host name, text <state>
  take start-date, name <StartDate>
    like millisecond-date-time
    void take
    note <The date and time at which the Capacity Reservation was started.>
    host xml
      host name, text <startDate>
  take end-date, name <EndDate>
    like date-time
    void take
    note <The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to `expired` when it reaches its end date and time.>
    host xml
      host name, text <endDate>
  take end-date-type, name <EndDateType>
    like end-date-type
    void take
    note <Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:

- `unlimited` - The Capacity Reservation remains active until you explicitly cancel it.

- `limited` - The Capacity Reservation expires automatically at a specified date and time.>
    host xml
      host name, text <endDateType>
  take instance-match-criteria, name <InstanceMatchCriteria>
    like instance-match-criteria
    void take
    note <Indicates the type of instance launches that the Capacity Reservation accepts. The options include:

- `open` - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying any additional parameters.

- `targeted` - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.>
    host xml
      host name, text <instanceMatchCriteria>
  take create-date, name <CreateDate>
    like date-time
    void take
    note <The date and time at which the Capacity Reservation was created.>
    host xml
      host name, text <createDate>
  take tags, name <Tags>
    like tag-list
    void take
    note <Any tags assigned to the Capacity Reservation.>
    host xml
      host name, text <tagSet>
  take outpost-arn, name <OutpostArn>
    like outpost-arn
    void take
    note <The Amazon Resource Name (ARN) of the Outpost on which the Capacity Reservation was created.>
    host xml
      host name, text <outpostArn>
