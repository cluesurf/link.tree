
load @tunebond/snow/amazonaws.com/ec2/2016-11-15/base/boot-mode-values
  take form boot-mode-values

load @tunebond/snow/amazonaws.com/ec2/2016-11-15/base/client-data
  take form client-data

load @tunebond/snow/amazonaws.com/ec2/2016-11-15/base/image-disk-container-list
  take form image-disk-container-list

load @tunebond/snow/amazonaws.com/ec2/2016-11-15/base/import-image-license-specification-list-request
  take form import-image-license-specification-list-request

load @tunebond/snow/amazonaws.com/ec2/2016-11-15/base/kms-key-id
  take form kms-key-id

load @tunebond/snow/amazonaws.com/ec2/2016-11-15/base/tag-specification-list
  take form tag-specification-list

load @tunebond/snow/base/boolean
  take form boolean

load @tunebond/snow/base/string
  take form string

form import-image-request, name <ImportImageRequest>
  take architecture, name <Architecture>
    like string
    void take
    note <The architecture of the virtual machine.

Valid values: `i386` | `x86_64` | `arm64`>
  take client-data, name <ClientData>
    like client-data
    void take
    note <The client-specific data.>
  take client-token, name <ClientToken>
    like string
    void take
    note <The token to enable idempotency for VM import requests.>
  take description, name <Description>
    like string
    void take
    note <A description string for the import image task.>
  take disk-containers, name <DiskContainers>
    like image-disk-container-list
    void take
    note <Information about the disk containers.>
    host xml
      host name, text <DiskContainer>
  take dry-run, name <DryRun>
    like boolean
    void take
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
  take encrypted, name <Encrypted>
    like boolean
    void take
    note <Specifies whether the destination AMI of the imported image should be encrypted. The default KMS key for EBS is used unless you specify a non-default KMS key using `KmsKeyId`. For more information, see [Amazon EBS Encryption](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html) in the _Amazon Elastic Compute Cloud User Guide_.>
  take hypervisor, name <Hypervisor>
    like string
    void take
    note <The target hypervisor platform.

Valid values: `xen`>
  take kms-key-id, name <KmsKeyId>
    like kms-key-id
    void take
    note <An identifier for the symmetric KMS key to use when creating the encrypted AMI. This parameter is only required if you want to use a non-default KMS key; if this parameter is not specified, the default KMS key for EBS is used. If a `KmsKeyId` is specified, the `Encrypted` flag must also be set.

The KMS key identifier may be provided in any of the following formats:

- Key ID

- Key alias. The alias ARN contains the `arn:aws:kms` namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the `alias` namespace, and then the key alias. For example, arn:aws:kms:_us-east-1_:_012345678910_:alias/_ExampleAlias_.

- ARN using key ID. The ID ARN contains the `arn:aws:kms` namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the `key` namespace, and then the key ID. For example, arn:aws:kms:_us-east-1_:_012345678910_:key/_abcd1234-a123-456a-a12b-a123b4cd56ef_.

- ARN using key alias. The alias ARN contains the `arn:aws:kms` namespace, followed by the Region of the key, the Amazon Web Services account ID of the key owner, the `alias` namespace, and then the key alias. For example, arn:aws:kms:_us-east-1_:_012345678910_:alias/_ExampleAlias_.

Amazon Web Services parses `KmsKeyId` asynchronously, meaning that the action you call may appear to complete even though you provided an invalid identifier. This action will eventually report failure.

The specified KMS key must exist in the Region that the AMI is being copied to.

Amazon EBS does not support asymmetric KMS keys.>
  take license-type, name <LicenseType>
    like string
    void take
    note <The license type to be used for the Amazon Machine Image (AMI) after importing.

By default, we detect the source-system operating system (OS) and apply the appropriate license. Specify `AWS` to replace the source-system license with an Amazon Web Services license, if appropriate. Specify `BYOL` to retain the source-system license, if appropriate.

To use `BYOL`, you must have existing licenses with rights to use these licenses in a third party cloud, such as Amazon Web Services. For more information, see [Prerequisites](https://docs.aws.amazon.com/vm-import/latest/userguide/vmimport-image-import.html#prerequisites-image) in the VM Import/Export User Guide.>
  take platform, name <Platform>
    like string
    void take
    note <The operating system of the virtual machine.

Valid values: `Windows` | `Linux`>
  take role-name, name <RoleName>
    like string
    void take
    note <The name of the role to use when not using the default role, 'vmimport'.>
  take license-specifications, name <LicenseSpecifications>
    like import-image-license-specification-list-request
    void take
    note <The ARNs of the license configurations.>
  take tag-specifications, name <TagSpecifications>
    like tag-specification-list
    void take
    note <The tags to apply to the import image task during creation.>
    host xml
      host name, text <TagSpecification>
  take usage-operation, name <UsageOperation>
    like string
    void take
    note <The usage operation value. For more information, see [AMI billing information fields](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/billing-info-fields.html) in the _Amazon Elastic Compute Cloud User Guide_.>
  take boot-mode, name <BootMode>
    like boot-mode-values
    void take
    note <The boot mode of the virtual machine.>
