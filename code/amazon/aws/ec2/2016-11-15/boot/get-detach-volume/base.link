
load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/volume-attachment
  take form volume-attachment

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-string
  take form native-string

boot get-detach-volume, name <GET_DetachVolume>
  note <Detaches an EBS volume from an instance. Make sure to unmount any file systems on the device within your operating system before detaching the volume. Failure to do so can result in the volume becoming stuck in the `busy` state while detaching. If this happens, detachment can be delayed indefinitely until you unmount the volume, force detachment, reboot the instance, or all three. If an EBS volume is the root device of an instance, it can't be detached while the instance is running. To detach the root volume, stop the instance first.

When a volume with an Amazon Web Services Marketplace product code is detached from an instance, the product code is no longer associated with the instance.

For more information, see [Detach an Amazon EBS volume](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-detaching-volume.html) in the _Amazon Elastic Compute Cloud User Guide_.>

  take device
    like native-string
    note <The device name.>
    void take
  take force
    like native-boolean
    note <Forces detachment if the previous detachment attempt did not occur cleanly (for example, logging into an instance, unmounting the volume, and detaching normally). This option can lead to data loss or a corrupted file system. Use this option only as a last resort to detach a volume from a failed instance. The instance won't have an opportunity to flush file system caches or file system metadata. If you use this option, you must perform file system check and repair procedures.>
    void take
  take instance-id
    like native-string
    note <The ID of the instance. If you are detaching a Multi-Attach enabled volume, you must specify an instance ID.>
    void take
  take volume-id
    like native-string
    note <The ID of the volume.>
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=DetachVolume>

  find <Device>, loan device
  find <Force>, loan force
  find <InstanceId>, loan instance-id
  find <VolumeId>, loan volume-id
  find <DryRun>, loan dry-run
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like volume-attachment
    note <Success>