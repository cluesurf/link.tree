
load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/create-route-result
  take form create-route-result

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-string
  take form native-string

boot get-create-route, name <GET_CreateRoute>
  note <Creates a route in a route table within a VPC.

You must specify one of the following targets: internet gateway or virtual private gateway, NAT instance, NAT gateway, VPC peering connection, network interface, egress-only internet gateway, or transit gateway.

When determining how to route traffic, we use the route with the most specific match. For example, traffic is destined for the IPv4 address `192.0.2.3`, and the route table includes the following two IPv4 routes:

- `192.0.2.0/24` (goes to some target A)

- `192.0.2.0/28` (goes to some target B)

Both routes apply to the traffic destined for `192.0.2.3`. However, the second route in the list covers a smaller number of IP addresses and is therefore more specific, so we use that route to determine where to target the traffic.

For more information about route tables, see [Route tables](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Route_Tables.html) in the _Amazon Virtual Private Cloud User Guide_.>

  take destination-cidr-block
    like native-string
    note <The IPv4 CIDR address block used for the destination match. Routing decisions are based on the most specific match. We modify the specified CIDR block to its canonical form; for example, if you specify `100.68.0.18/18`, we modify it to `100.68.0.0/18`.>
    void take
  take destination-ipv6-cidr-block
    like native-string
    note <The IPv6 CIDR block used for the destination match. Routing decisions are based on the most specific match.>
    void take
  take destination-prefix-list-id
    like native-string
    note <The ID of a prefix list used for the destination match.>
    void take
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take vpc-endpoint-id
    like native-string
    note <The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.>
    void take
  take egress-only-internet-gateway-id
    like native-string
    note <[IPv6 traffic only] The ID of an egress-only internet gateway.>
    void take
  take gateway-id
    like native-string
    note <The ID of an internet gateway or virtual private gateway attached to your VPC.>
    void take
  take instance-id
    like native-string
    note <The ID of a NAT instance in your VPC. The operation fails if you specify an instance ID unless exactly one network interface is attached.>
    void take
  take nat-gateway-id
    like native-string
    note <[IPv4 traffic only] The ID of a NAT gateway.>
    void take
  take transit-gateway-id
    like native-string
    note <The ID of a transit gateway.>
    void take
  take local-gateway-id
    like native-string
    note <The ID of the local gateway.>
    void take
  take carrier-gateway-id
    like native-string
    note <The ID of the carrier gateway.

You can only use this option when the VPC contains a subnet which is associated with a Wavelength Zone.>
    void take
  take network-interface-id
    like native-string
    note <The ID of a network interface.>
    void take
  take route-table-id
    like native-string
    note <The ID of the route table for the route.>
  take vpc-peering-connection-id
    like native-string
    note <The ID of a VPC peering connection.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreateRoute>

  find <DestinationCidrBlock>, loan destination-cidr-block
  find <DestinationIpv6CidrBlock>, loan destination-ipv6-cidr-block
  find <DestinationPrefixListId>, loan destination-prefix-list-id
  find <DryRun>, loan dry-run
  find <VpcEndpointId>, loan vpc-endpoint-id
  find <EgressOnlyInternetGatewayId>, loan egress-only-internet-gateway-id
  find <GatewayId>, loan gateway-id
  find <InstanceId>, loan instance-id
  find <NatGatewayId>, loan nat-gateway-id
  find <TransitGatewayId>, loan transit-gateway-id
  find <LocalGatewayId>, loan local-gateway-id
  find <CarrierGatewayId>, loan carrier-gateway-id
  find <NetworkInterfaceId>, loan network-interface-id
  find <RouteTableId>, loan route-table-id
  find <VpcPeeringConnectionId>, loan vpc-peering-connection-id
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-route-result
    note <Success>