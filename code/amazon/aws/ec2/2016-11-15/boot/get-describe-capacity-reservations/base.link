
load @wavebond/snow/amazonaws.com/ec2/2016-11-15/base/capacity-reservation-id
  take form capacity-reservation-id

load @wavebond/snow/amazonaws.com/ec2/2016-11-15/base/describe-capacity-reservations-result
  take form describe-capacity-reservations-result

load @wavebond/snow/amazonaws.com/ec2/2016-11-15/base/filter
  take form filter

load @wavebond/snow/base/list
  take form list

load @wavebond/snow/base/native-boolean
  take form native-boolean

load @wavebond/snow/base/native-integer
  take form native-integer

load @wavebond/snow/base/native-string
  take form native-string

boot get-describe-capacity-reservations, name <GET_DescribeCapacityReservations>
  deed get
  note <Describes one or more of your Capacity Reservations. The results describe only the Capacity Reservations in the Amazon Web Services Region that you're currently using.>

  take capacity-reservation-id
    like list
      like capacity-reservation-id
    note <The ID of the Capacity Reservation.>
    void take
  take next-token
    like native-string
    note <The token to use to retrieve the next page of results.>
    void take
  take max-results
    like native-integer
    note <The maximum number of results to return for the request in a single page. The remaining results can be seen by sending another request with the returned `nextToken` value. This value can be between 5 and 500. If `maxResults` is given a larger value than 500, you receive an error.>
    void take
  take filter
    like list
      like filter
    note <One or more filters.

- `instance-type` - The type of instance for which the Capacity Reservation reserves capacity.

- `owner-id` - The ID of the Amazon Web Services account that owns the Capacity Reservation.

- `availability-zone-id` - The Availability Zone ID of the Capacity Reservation.

- `instance-platform` - The type of operating system for which the Capacity Reservation reserves capacity.

- `availability-zone` - The Availability Zone ID of the Capacity Reservation.

- `tenancy` - Indicates the tenancy of the Capacity Reservation. A Capacity Reservation can have one of the following tenancy settings:

  - `default` - The Capacity Reservation is created on hardware that is shared with other Amazon Web Services accounts.

  - `dedicated` - The Capacity Reservation is created on single-tenant hardware that is dedicated to a single Amazon Web Services account.

- `outpost-arn` - The Amazon Resource Name (ARN) of the Outpost on which the Capacity Reservation was created.

- `state` - The current state of the Capacity Reservation. A Capacity Reservation can be in one of the following states:

  - `active`- The Capacity Reservation is active and the capacity is available for your use.

  - `expired` - The Capacity Reservation expired automatically at the date and time specified in your request. The reserved capacity is no longer available for your use.

  - `cancelled` - The Capacity Reservation was cancelled. The reserved capacity is no longer available for your use.

  - `pending` - The Capacity Reservation request was successful but the capacity provisioning is still pending.

  - `failed` - The Capacity Reservation request has failed. A request might fail due to invalid request parameters, capacity constraints, or instance limit constraints. Failed requests are retained for 60 minutes.

- `start-date` - The date and time at which the Capacity Reservation was started.

- `end-date` - The date and time at which the Capacity Reservation expires. When a Capacity Reservation expires, the reserved capacity is released and you can no longer launch instances into it. The Capacity Reservation's state changes to expired when it reaches its end date and time.

- `end-date-type` - Indicates the way in which the Capacity Reservation ends. A Capacity Reservation can have one of the following end types:

  - `unlimited` - The Capacity Reservation remains active until you explicitly cancel it.

  - `limited` - The Capacity Reservation expires automatically at a specified date and time.

- `instance-match-criteria` - Indicates the type of instance launches that the Capacity Reservation accepts. The options include:

  - `open` - The Capacity Reservation accepts all instances that have matching attributes (instance type, platform, and Availability Zone). Instances that have matching attributes launch into the Capacity Reservation automatically without specifying any additional parameters.

  - `targeted` - The Capacity Reservation only accepts instances that have matching attributes (instance type, platform, and Availability Zone), and explicitly target the Capacity Reservation. This ensures that only permitted instances can use the reserved capacity.>
    void take
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=DescribeCapacityReservations>

  find <CapacityReservationId>, loan capacity-reservation-id
  find <NextToken>, loan next-token
  find <MaxResults>, loan max-results
  find <Filter>, loan filter
  find <DryRun>, loan dry-run
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like describe-capacity-reservations-result
    note <Success>
