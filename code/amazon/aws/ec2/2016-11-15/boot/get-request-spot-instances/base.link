
load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/block-device-mapping-list
  take form block-device-mapping-list

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/iam-instance-profile-specification
  take form iam-instance-profile-specification

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/image-id
  take form image-id

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/instance-network-interface-specification-list
  take form instance-network-interface-specification-list

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/instance-type
  take form instance-type

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/kernel-id
  take form kernel-id

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/key-pair-name
  take form key-pair-name

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/ramdisk-id
  take form ramdisk-id

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/request-spot-instances-result
  take form request-spot-instances-result

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/request-spot-launch-specification-security-group-id-list
  take form request-spot-launch-specification-security-group-id-list

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/request-spot-launch-specification-security-group-list
  take form request-spot-launch-specification-security-group-list

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/run-instances-monitoring-enabled
  take form run-instances-monitoring-enabled

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/spot-placement
  take form spot-placement

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/subnet-id
  take form subnet-id

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/tag-specification
  take form tag-specification

load @drumwork/snow/base/boolean
  take form boolean

load @drumwork/snow/base/form
  take form form

load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-integer
  take form native-integer

load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/base/string
  take form string

boot get-request-spot-instances, name <GET_RequestSpotInstances>
  note <Creates a Spot Instance request.

For more information, see [Spot Instance requests](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/spot-requests.html) in the _Amazon EC2 User Guide for Linux Instances_.>

  take availability-zone-group
    like native-string
    note <The user-specified name for a logical grouping of requests.

When you specify an Availability Zone group in a Spot Instance request, all Spot Instances in the request are launched in the same Availability Zone. Instance proximity is maintained with this parameter, but the choice of Availability Zone is not. The group applies only to requests for Spot Instances of the same instance type. Any additional Spot Instance requests that are specified with the same Availability Zone group name are launched in that same Availability Zone, as long as at least one instance from the group is still active.

If there is no active instance running in the Availability Zone group that you specify for a new Spot Instance request (all instances are terminated, the request is expired, or the maximum price you specified falls below current Spot price), then Amazon EC2 launches the instance in any Availability Zone where the constraint can be met. Consequently, the subsequent set of Spot Instances could be placed in a different zone from the original request, even if you specified the same Availability Zone group.

Default: Instances are launched in any available Availability Zone.>
    void take
  take block-duration-minutes
    like native-integer
    note <Deprecated.>
    void take
  take client-token
    like native-string
    note <Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [How to Ensure Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Run_Instance_Idempotency.html) in the _Amazon EC2 User Guide for Linux Instances_.>
    void take
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take instance-count
    like native-integer
    note <The maximum number of Spot Instances to launch.

Default: 1>
    void take
  take launch-group
    like native-string
    note <The instance launch group. Launch groups are Spot Instances that launch together and terminate together.

Default: Instances are launched and terminated individually>
    void take
  take launch-specification
    like form
      take security-group-ids, name <SecurityGroupIds>
        like request-spot-launch-specification-security-group-id-list
        void take
        note <One or more security group IDs.>
        host xml
          host name, text <SecurityGroupId>
      take security-groups, name <SecurityGroups>
        like request-spot-launch-specification-security-group-list
        void take
        note <One or more security groups. When requesting instances in a VPC, you must specify the IDs of the security groups. When requesting instances in EC2-Classic, you can specify the names or the IDs of the security groups.>
        host xml
          host name, text <SecurityGroup>
      take addressing-type, name <AddressingType>
        like string
        void take
        note <Deprecated.>
        host xml
          host name, text <addressingType>
      take block-device-mappings, name <BlockDeviceMappings>
        like block-device-mapping-list
        void take
        note <One or more block device mapping entries. You can't specify both a snapshot ID and an encryption value. This is because only blank volumes can be encrypted on creation. If a snapshot is the basis for a volume, it is not blank and its encryption status is used for the volume encryption status.>
        host xml
          host name, text <blockDeviceMapping>
      take ebs-optimized, name <EbsOptimized>
        like boolean
        void take
        note <Indicates whether the instance is optimized for EBS I/O. This optimization provides dedicated throughput to Amazon EBS and an optimized configuration stack to provide optimal EBS I/O performance. This optimization isn't available with all instance types. Additional usage charges apply when using an EBS Optimized instance.

Default: `false`>
        host xml
          host name, text <ebsOptimized>
      take iam-instance-profile, name <IamInstanceProfile>
        like iam-instance-profile-specification
        void take
        note <The IAM instance profile.>
        host xml
          host name, text <iamInstanceProfile>
      take image-id, name <ImageId>
        like image-id
        void take
        note <The ID of the AMI.>
        host xml
          host name, text <imageId>
      take instance-type, name <InstanceType>
        like instance-type
        void take
        note <The instance type.>
        host xml
          host name, text <instanceType>
      take kernel-id, name <KernelId>
        like kernel-id
        void take
        note <The ID of the kernel.>
        host xml
          host name, text <kernelId>
      take key-name, name <KeyName>
        like key-pair-name
        void take
        note <The name of the key pair.>
        host xml
          host name, text <keyName>
      take monitoring, name <Monitoring>
        like run-instances-monitoring-enabled
        void take
        note <Indicates whether basic or detailed monitoring is enabled for the instance.

Default: Disabled>
        host xml
          host name, text <monitoring>
      take network-interfaces, name <NetworkInterfaces>
        like instance-network-interface-specification-list
        void take
        note <One or more network interfaces. If you specify a network interface, you must specify subnet IDs and security group IDs using the network interface.>
        host xml
          host name, text <NetworkInterface>
      take placement, name <Placement>
        like spot-placement
        void take
        note <The placement information for the instance.>
        host xml
          host name, text <placement>
      take ramdisk-id, name <RamdiskId>
        like ramdisk-id
        void take
        note <The ID of the RAM disk.>
        host xml
          host name, text <ramdiskId>
      take subnet-id, name <SubnetId>
        like subnet-id
        void take
        note <The ID of the subnet in which to launch the instance.>
        host xml
          host name, text <subnetId>
      take user-data, name <UserData>
        like string
        void take
        note <The Base64-encoded user data for the instance. User data is limited to 16 KB.>
        host xml
          host name, text <userData>
    note <The launch specification.>
    void take
  take spot-price
    like native-string
    note <The maximum price per hour that you are willing to pay for a Spot Instance. The default is the On-Demand price.>
    void take
  take type
    like native-string
    note <The Spot Instance request type.

Default: `one-time`>
    void take
  take valid-from
    like native-string
    note <The start date of the request. If this is a one-time request, the request becomes active at this date and time and remains active until all instances launch, the request expires, or the request is canceled. If the request is persistent, the request becomes active at this date and time and remains active until it expires or is canceled.

The specified start date and time cannot be equal to the current date and time. You must specify a start date and time that occurs after the current date and time.>
    void take
  take valid-until
    like native-string
    note <The end date of the request, in UTC format (_YYYY_-_MM_-_DD_T_HH_:_MM_:_SS_Z).

- For a persistent request, the request remains active until the `ValidUntil` date and time is reached. Otherwise, the request remains active until you cancel it.

- For a one-time request, the request remains active until all instances launch, the request is canceled, or the `ValidUntil` date and time is reached. By default, the request is valid for 7 days from the date the request was created.>
    void take
  take tag-specification
    like list
      like tag-specification
    note <The key-value pair for tagging the Spot Instance request on creation. The value for `ResourceType` must be `spot-instances-request`, otherwise the Spot Instance request fails. To tag the Spot Instance request after it has been created, see [CreateTags](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateTags.html).>
    void take
  take instance-interruption-behavior
    like native-string
    note <The behavior when a Spot Instance is interrupted. The default is `terminate`.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=RequestSpotInstances>

  find <AvailabilityZoneGroup>, loan availability-zone-group
  find <BlockDurationMinutes>, loan block-duration-minutes
  find <ClientToken>, loan client-token
  find <DryRun>, loan dry-run
  find <InstanceCount>, loan instance-count
  find <LaunchGroup>, loan launch-group
  find <LaunchSpecification>, loan launch-specification
  find <SpotPrice>, loan spot-price
  find <Type>, loan type
  find <ValidFrom>, loan valid-from
  find <ValidUntil>, loan valid-until
  find <TagSpecification>, loan tag-specification
  find <InstanceInterruptionBehavior>, loan instance-interruption-behavior
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like request-spot-instances-result
    note <Success>