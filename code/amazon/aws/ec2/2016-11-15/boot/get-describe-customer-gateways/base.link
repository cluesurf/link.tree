
load @termsurf/snow/amazonaws.com/ec2/2016-11-15/base/customer-gateway-id
  take form customer-gateway-id

load @termsurf/snow/amazonaws.com/ec2/2016-11-15/base/describe-customer-gateways-result
  take form describe-customer-gateways-result

load @termsurf/snow/amazonaws.com/ec2/2016-11-15/base/filter
  take form filter

load @termsurf/snow/base/list
  take form list

load @termsurf/snow/base/native-boolean
  take form native-boolean

load @termsurf/snow/base/native-string
  take form native-string

boot get-describe-customer-gateways, name <GET_DescribeCustomerGateways>
  deed get
  note <Describes one or more of your VPN customer gateways.

For more information, see [AWS Site-to-Site VPN](https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html) in the _AWS Site-to-Site VPN User Guide_.>

  take customer-gateway-id
    like list
      like customer-gateway-id
    note <One or more customer gateway IDs.

Default: Describes all your customer gateways.>
    void take
  take filter
    like list
      like filter
    note <One or more filters.

- `bgp-asn` - The customer gateway's Border Gateway Protocol (BGP) Autonomous System Number (ASN).

- `customer-gateway-id` - The ID of the customer gateway.

- `ip-address` - The IP address of the customer gateway's Internet-routable external interface.

- `state` - The state of the customer gateway (`pending` | `available` | `deleting` | `deleted`).

- `type` - The type of customer gateway. Currently, the only supported type is `ipsec.1`.

- `tag`:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA`, specify `tag:Owner` for the filter name and `TeamA` for the filter value.

- `tag-key` - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.>
    void take
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=DescribeCustomerGateways>

  find <CustomerGatewayId>, loan customer-gateway-id
  find <Filter>, loan filter
  find <DryRun>, loan dry-run
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like describe-customer-gateways-result
    note <Success>
