
load @treesurf/snow/amazonaws.com/ec2/2016-11-15/base/associate-enclave-certificate-iam-role-result
  take form associate-enclave-certificate-iam-role-result

load @treesurf/snow/base/native-boolean
  take form native-boolean

load @treesurf/snow/base/native-string
  take form native-string

boot get-associate-enclave-certificate-iam-role, name <GET_AssociateEnclaveCertificateIamRole>
  deed get
  note <Associates an Identity and Access Management (IAM) role with an Certificate Manager (ACM) certificate. This enables the certificate to be used by the ACM for Nitro Enclaves application inside an enclave. For more information, see [Certificate Manager for Nitro Enclaves](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html) in the _Amazon Web Services Nitro Enclaves User Guide_.

When the IAM role is associated with the ACM certificate, the certificate, certificate chain, and encrypted private key are placed in an Amazon S3 bucket that only the associated IAM role can access. The private key of the certificate is encrypted with an Amazon Web Services managed key that has an attached attestation-based key policy.

To enable the IAM role to access the Amazon S3 object, you must grant it permission to call `s3:GetObject` on the Amazon S3 bucket returned by the command. To enable the IAM role to access the KMS key, you must grant it permission to call `kms:Decrypt` on the KMS key returned by the command. For more information, see [Grant the role permission to access the certificate and encryption key](https://docs.aws.amazon.com/enclaves/latest/user/nitro-enclave-refapp.html#add-policy) in the _Amazon Web Services Nitro Enclaves User Guide_.>

  take certificate-arn
    like native-string
    note <The ARN of the ACM certificate with which to associate the IAM role.>
    void take
  take role-arn
    like native-string
    note <The ARN of the IAM role to associate with the ACM certificate. You can associate up to 16 IAM roles with an ACM certificate.>
    void take
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=AssociateEnclaveCertificateIamRole>

  find <CertificateArn>, loan certificate-arn
  find <RoleArn>, loan role-arn
  find <DryRun>, loan dry-run
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like associate-enclave-certificate-iam-role-result
    note <Success>