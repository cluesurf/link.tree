
load @tunebond/snow/amazonaws.com/ec2/2016-11-15/base/authorize-client-vpn-ingress-result
  take form authorize-client-vpn-ingress-result

load @tunebond/snow/base/native-boolean
  take form native-boolean

load @tunebond/snow/base/native-string
  take form native-string

boot get-authorize-client-vpn-ingress, name <GET_AuthorizeClientVpnIngress>
  deed get
  note <Adds an ingress authorization rule to a Client VPN endpoint. Ingress authorization rules act as firewall rules that grant access to networks. You must configure ingress authorization rules to enable clients to access resources in AWS or on-premises networks.>

  take client-vpn-endpoint-id
    like native-string
    note <The ID of the Client VPN endpoint.>
  take target-network-cidr
    like native-string
    note <The IPv4 address range, in CIDR notation, of the network for which access is being authorized.>
  take access-group-id
    like native-string
    note <The ID of the group to grant access to, for example, the Active Directory group or identity provider (IdP) group. Required if `AuthorizeAllGroups` is `false` or not specified.>
    void take
  take authorize-all-groups
    like native-boolean
    note <Indicates whether to grant access to all clients. Specify `true` to grant all clients who successfully establish a VPN connection access to the network. Must be set to `true` if `AccessGroupId` is not specified.>
    void take
  take description
    like native-string
    note <A brief description of the authorization rule.>
    void take
  take client-token
    like native-string
    note <Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [How to Ensure Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).>
    void take
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=AuthorizeClientVpnIngress>

  find <ClientVpnEndpointId>, loan client-vpn-endpoint-id
  find <TargetNetworkCidr>, loan target-network-cidr
  find <AccessGroupId>, loan access-group-id
  find <AuthorizeAllGroups>, loan authorize-all-groups
  find <Description>, loan description
  find <ClientToken>, loan client-token
  find <DryRun>, loan dry-run
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like authorize-client-vpn-ingress-result
    note <Success>
