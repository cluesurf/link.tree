
load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/authorize-security-group-ingress-result
  take form authorize-security-group-ingress-result

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/ip-permission
  take form ip-permission

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/tag-specification
  take form tag-specification

load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-integer
  take form native-integer

load @drumwork/snow/base/native-string
  take form native-string

boot get-authorize-security-group-ingress, name <GET_AuthorizeSecurityGroupIngress>
  note <Adds the specified inbound (ingress) rules to a security group.

An inbound rule permits instances to receive traffic from the specified IPv4 or IPv6 CIDR address range, or from the instances that are associated with the specified destination security groups.

You specify a protocol for each rule (for example, TCP). For TCP and UDP, you must also specify the destination port or port range. For ICMP/ICMPv6, you must also specify the ICMP/ICMPv6 type and code. You can use -1 to mean all types or all codes.

Rule changes are propagated to instances within the security group as quickly as possible. However, a small delay might occur.

For more information about VPC security group quotas, see [Amazon VPC quotas](https://docs.aws.amazon.com/vpc/latest/userguide/amazon-vpc-limits.html).>

  take cidr-ip
    like native-string
    note <The IPv4 address range, in CIDR format. You can't specify this parameter when specifying a source security group. To specify an IPv6 address range, use a set of IP permissions.

Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.>
    void take
  take from-port
    like native-integer
    note <The start of port range for the TCP and UDP protocols, or an ICMP type number. For the ICMP type number, use `-1` to specify all types. If you specify all ICMP types, you must specify all codes.

Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.>
    void take
  take group-id
    like native-string
    note <The ID of the security group. You must specify either the security group ID or the security group name in the request. For security groups in a nondefault VPC, you must specify the security group ID.>
    void take
  take group-name
    like native-string
    note <[EC2-Classic, default VPC] The name of the security group. You must specify either the security group ID or the security group name in the request.>
    void take
  take ip-permissions
    like list
      like ip-permission
    note <The sets of IP permissions.>
    void take
  take ip-protocol
    like native-string
    note <The IP protocol name (`tcp`, `udp`, `icmp`) or number (see [Protocol Numbers](http://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml)). To specify `icmpv6`, use a set of IP permissions.

[VPC only] Use `-1` to specify all protocols. If you specify `-1` or a protocol other than `tcp`, `udp`, or `icmp`, traffic on all ports is allowed, regardless of any ports you specify.

Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.>
    void take
  take source-security-group-name
    like native-string
    note <[EC2-Classic, default VPC] The name of the source security group. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the start of the port range, the IP protocol, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead. For EC2-VPC, the source security group must be in the same VPC.>
    void take
  take source-security-group-owner-id
    like native-string
    note <[nondefault VPC] The Amazon Web Services account ID for the source security group, if the source security group is in a different account. You can't specify this parameter in combination with the following parameters: the CIDR IP address range, the IP protocol, the start of the port range, and the end of the port range. Creates rules that grant full ICMP, UDP, and TCP access. To create a rule with a specific IP protocol and port range, use a set of IP permissions instead.>
    void take
  take to-port
    like native-integer
    note <The end of port range for the TCP and UDP protocols, or an ICMP code number. For the ICMP code number, use `-1` to specify all codes. If you specify all ICMP types, you must specify all codes.

Alternatively, use a set of IP permissions to specify multiple rules and a description for the rule.>
    void take
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take tag-specification
    like list
      like tag-specification
    note <[VPC Only] The tags applied to the security group rule.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=AuthorizeSecurityGroupIngress>

  find <CidrIp>, loan cidr-ip
  find <FromPort>, loan from-port
  find <GroupId>, loan group-id
  find <GroupName>, loan group-name
  find <IpPermissions>, loan ip-permissions
  find <IpProtocol>, loan ip-protocol
  find <SourceSecurityGroupName>, loan source-security-group-name
  find <SourceSecurityGroupOwnerId>, loan source-security-group-owner-id
  find <ToPort>, loan to-port
  find <DryRun>, loan dry-run
  find <TagSpecification>, loan tag-specification
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like authorize-security-group-ingress-result
    note <Success>