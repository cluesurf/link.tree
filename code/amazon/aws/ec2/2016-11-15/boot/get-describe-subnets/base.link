
load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/describe-subnets-result
  take form describe-subnets-result

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/filter
  take form filter

load @drumwork/snow/amazonaws.com/ec2/2016-11-15/base/subnet-id
  take form subnet-id

load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-integer
  take form native-integer

load @drumwork/snow/base/native-string
  take form native-string

boot get-describe-subnets, name <GET_DescribeSubnets>
  note <Describes one or more of your subnets.

For more information, see [Your VPC and subnets](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html) in the _Amazon Virtual Private Cloud User Guide_.>

  take filter
    like list
      like filter
    note <One or more filters.

- `availability-zone` - The Availability Zone for the subnet. You can also use `availabilityZone` as the filter name.

- `availability-zone-id` - The ID of the Availability Zone for the subnet. You can also use `availabilityZoneId` as the filter name.

- `available-ip-address-count` - The number of IPv4 addresses in the subnet that are available.

- `cidr-block` - The IPv4 CIDR block of the subnet. The CIDR block you specify must exactly match the subnet's CIDR block for information to be returned for the subnet. You can also use `cidr` or `cidrBlock` as the filter names.

- `default-for-az` - Indicates whether this is the default subnet for the Availability Zone. You can also use `defaultForAz` as the filter name.

- `ipv6-cidr-block-association.ipv6-cidr-block` - An IPv6 CIDR block associated with the subnet.

- `ipv6-cidr-block-association.association-id` - An association ID for an IPv6 CIDR block associated with the subnet.

- `ipv6-cidr-block-association.state` - The state of an IPv6 CIDR block associated with the subnet.

- `outpost-arn` - The Amazon Resource Name (ARN) of the Outpost.

- `owner-id` - The ID of the Amazon Web Services account that owns the subnet.

- `state` - The state of the subnet (`pending` | `available`).

- `subnet-arn` - The Amazon Resource Name (ARN) of the subnet.

- `subnet-id` - The ID of the subnet.

- `tag`:&lt;key&gt; - The key/value combination of a tag assigned to the resource. Use the tag key in the filter name and the tag value as the filter value. For example, to find all resources that have a tag with the key `Owner` and the value `TeamA`, specify `tag:Owner` for the filter name and `TeamA` for the filter value.

- `tag-key` - The key of a tag assigned to the resource. Use this filter to find all resources assigned a tag with a specific key, regardless of the tag value.

- `vpc-id` - The ID of the VPC for the subnet.>
    void take
  take subnet-id
    like list
      like subnet-id
    note <One or more subnet IDs.

Default: Describes all your subnets.>
    void take
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take next-token
    like native-string
    note <The token for the next page of results.>
    void take
  take max-results
    like native-integer
    note <The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned `nextToken` value.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=DescribeSubnets>

  find <Filter>, loan filter
  find <SubnetId>, loan subnet-id
  find <DryRun>, loan dry-run
  find <NextToken>, loan next-token
  find <MaxResults>, loan max-results
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like describe-subnets-result
    note <Success>