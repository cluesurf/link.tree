
load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/create-subnet-result
  take form create-subnet-result

load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/tag-specification
  take form tag-specification

load @nerdbond/snow/base/list
  take form list

load @nerdbond/snow/base/native-boolean
  take form native-boolean

load @nerdbond/snow/base/native-string
  take form native-string

boot get-create-subnet, name <GET_CreateSubnet>
  deed get
  note <Creates a subnet in a specified VPC.

You must specify an IPv4 CIDR block for the subnet. After you create a subnet, you can't change its CIDR block. The allowed block size is between a /16 netmask (65,536 IP addresses) and /28 netmask (16 IP addresses). The CIDR block must not overlap with the CIDR block of an existing subnet in the VPC.

If you've associated an IPv6 CIDR block with your VPC, you can create a subnet with an IPv6 CIDR block that uses a /64 prefix length.

Amazon Web Services reserves both the first four and the last IPv4 address in each subnet's CIDR block. They're not available for use.

If you add more than one subnet to a VPC, they're set up in a star topology with a logical router in the middle.

When you stop an instance in a subnet, it retains its private IPv4 address. It's therefore possible to have a subnet with no running instances (they're all stopped), but no remaining IP addresses available.

For more information about subnets, see [Your VPC and subnets](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html) in the _Amazon Virtual Private Cloud User Guide_.>

  take tag-specification
    like list
      like tag-specification
    note <The tags to assign to the subnet.>
    void take
  take availability-zone
    like native-string
    note <The Availability Zone or Local Zone for the subnet.

Default: Amazon Web Services selects one for you. If you create more than one subnet in your VPC, we do not necessarily select a different zone for each subnet.

To create a subnet in a Local Zone, set this value to the Local Zone ID, for example `us-west-2-lax-1a`. For information about the Regions that support Local Zones, see [Available Regions](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions) in the _Amazon Elastic Compute Cloud User Guide_.

To create a subnet in an Outpost, set this value to the Availability Zone for the Outpost and specify the Outpost ARN.>
    void take
  take availability-zone-id
    like native-string
    note <The AZ ID or the Local Zone ID of the subnet.>
    void take
  take ipv6-cidr-block
    like native-string
    note <The IPv6 network range for the subnet, in CIDR notation. The subnet size must use a /64 prefix length.>
    void take
  take outpost-arn
    like native-string
    note <The Amazon Resource Name (ARN) of the Outpost. If you specify an Outpost ARN, you must also specify the Availability Zone of the Outpost subnet.>
    void take
  take vpc-id
    like native-string
    note <The ID of the VPC.>
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take cidr-block
    like native-string
    note <The IPv4 network range for the subnet, in CIDR notation. For example, `10.0.0.0/24`. We modify the specified CIDR block to its canonical form; for example, if you specify `100.68.0.18/18`, we modify it to `100.68.0.0/18`.>
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreateSubnet>

  find <TagSpecification>, loan tag-specification
  find <AvailabilityZone>, loan availability-zone
  find <AvailabilityZoneId>, loan availability-zone-id
  find <Ipv6CidrBlock>, loan ipv6-cidr-block
  find <OutpostArn>, loan outpost-arn
  find <VpcId>, loan vpc-id
  find <DryRun>, loan dry-run
  find <CidrBlock>, loan cidr-block
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-subnet-result
    note <Success>
