
load @nerdbond/snow/amazonaws.com/ec2/2016-11-15/base/create-traffic-mirror-filter-rule-result
  take form create-traffic-mirror-filter-rule-result

load @nerdbond/snow/base/form
  take form form

load @nerdbond/snow/base/integer
  take form integer

load @nerdbond/snow/base/native-boolean
  take form native-boolean

load @nerdbond/snow/base/native-integer
  take form native-integer

load @nerdbond/snow/base/native-string
  take form native-string

boot get-create-traffic-mirror-filter-rule, name <GET_CreateTrafficMirrorFilterRule>
  deed get
  note <Creates a Traffic Mirror filter rule.

A Traffic Mirror rule defines the Traffic Mirror source traffic to mirror.

You need the Traffic Mirror filter ID when you create the rule.>

  take traffic-mirror-filter-id
    like native-string
    note <The ID of the filter that this rule is associated with.>
  take traffic-direction
    like native-string
    note <The type of traffic (`ingress` | `egress`).>
  take rule-number
    like native-integer
    note <The number of the Traffic Mirror rule. This number must be unique for each Traffic Mirror rule in a given direction. The rules are processed in ascending order by rule number.>
  take rule-action
    like native-string
    note <The action to take (`accept` | `reject`) on the filtered traffic.>
  take destination-port-range
    like form
      take from-port, name <FromPort>
        like integer
        void take
        note <The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.>
      take to-port, name <ToPort>
        like integer
        void take
        note <The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.>
    note <The destination port range.>
    void take
  take source-port-range
    like form
      take from-port, name <FromPort>
        like integer
        void take
        note <The first port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.>
      take to-port, name <ToPort>
        like integer
        void take
        note <The last port in the Traffic Mirror port range. This applies to the TCP and UDP protocols.>
    note <The source port range.>
    void take
  take protocol
    like native-integer
    note <The protocol, for example UDP, to assign to the Traffic Mirror rule.

For information about the protocol value, see [Protocol Numbers](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml) on the Internet Assigned Numbers Authority (IANA) website.>
    void take
  take destination-cidr-block
    like native-string
    note <The destination CIDR block to assign to the Traffic Mirror rule.>
  take source-cidr-block
    like native-string
    note <The source CIDR block to assign to the Traffic Mirror rule.>
  take description
    like native-string
    note <The description of the Traffic Mirror rule.>
    void take
  take dry-run
    like native-boolean
    note <Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is `DryRunOperation`. Otherwise, it is `UnauthorizedOperation`.>
    void take
  take client-token
    like native-string
    note <Unique, case-sensitive identifier that you provide to ensure the idempotency of the request. For more information, see [How to Ensure Idempotency](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html).>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreateTrafficMirrorFilterRule>

  find <TrafficMirrorFilterId>, loan traffic-mirror-filter-id
  find <TrafficDirection>, loan traffic-direction
  find <RuleNumber>, loan rule-number
  find <RuleAction>, loan rule-action
  find <DestinationPortRange>, loan destination-port-range
  find <SourcePortRange>, loan source-port-range
  find <Protocol>, loan protocol
  find <DestinationCidrBlock>, loan destination-cidr-block
  find <SourceCidrBlock>, loan source-cidr-block
  find <Description>, loan description
  find <DryRun>, loan dry-run
  find <ClientToken>, loan client-token
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-traffic-mirror-filter-rule-result
    note <Success>
