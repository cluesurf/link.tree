
load @wavebond/snow/amazonaws.com/acm/2015-12-08/base/import-certificate-response
  take form import-certificate-response

load @wavebond/snow/amazonaws.com/acm/2015-12-08/base/invalid-arn-exception
  take form invalid-arn-exception

load @wavebond/snow/amazonaws.com/acm/2015-12-08/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @wavebond/snow/amazonaws.com/acm/2015-12-08/base/invalid-tag-exception
  take form invalid-tag-exception

load @wavebond/snow/amazonaws.com/acm/2015-12-08/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @wavebond/snow/amazonaws.com/acm/2015-12-08/base/resource-not-found-exception
  take form resource-not-found-exception

load @wavebond/snow/amazonaws.com/acm/2015-12-08/base/tag-policy-exception
  take form tag-policy-exception

load @wavebond/snow/amazonaws.com/acm/2015-12-08/base/too-many-tags-exception
  take form too-many-tags-exception

load @wavebond/snow/base/native-string
  take form native-string

boot import-certificate, name <ImportCertificate>
  deed post
  note <Imports a certificate into Amazon Web Services Certificate Manager (ACM) to use with services that are integrated with ACM. Note that [integrated services](https://docs.aws.amazon.com/acm/latest/userguide/acm-services.html) allow only certificate types and keys they support to be associated with their resources. Further, their support differs depending on whether the certificate is imported into IAM or into ACM. For more information, see the documentation for each service. For more information about importing certificates into ACM, see [Importing Certificates](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the _Amazon Web Services Certificate Manager User Guide_.

ACM does not provide [managed renewal](https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html) for certificates that you import.

Note the following guidelines when importing third party certificates:

- You must enter the private key that matches the certificate you are importing.

- The private key must be unencrypted. You cannot import a private key that is protected by a password or a passphrase.

- The private key must be no larger than 5 KB (5,120 bytes).

- If the certificate you are importing is not self-signed, you must enter its certificate chain.

- If a certificate chain is included, the issuer must be the subject of one of the certificates in the chain.

- The certificate, private key, and certificate chain must be PEM-encoded.

- The current time must be between the `Not Before` and `Not After` certificate fields.

- The `Issuer` field must not be empty.

- The OCSP authority URL, if present, must not exceed 1000 characters.

- To import a new certificate, omit the `CertificateArn` argument. Include this argument only when you want to replace a previously imported certificate.

- When you import a certificate by using the CLI, you must specify the certificate, the certificate chain, and the private key by their file names preceded by `fileb://`. For example, you can specify a certificate saved in the `C:\temp` folder as `fileb://C:\temp\certificate_to_import.pem`. If you are making an HTTP or HTTPS Query request, include these arguments as BLOBs.

- When you import a certificate by using an SDK, you must specify the certificate, the certificate chain, and the private key files in the manner required by the programming language you're using.

- The cryptographic algorithm of an imported certificate must match the algorithm of the signing CA. For example, if the signing CA key type is RSA, then the certificate key type must also be RSA.

This operation returns the [Amazon Resource Name (ARN)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) of the imported certificate.>

  take x-amz-target
    like native-string
  take import-certificate-request, like import-certificate-request

  line </#X-Amz-Target=CertificateManager.ImportCertificate>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan import-certificate-request

  loot 200
    seed json, like import-certificate-response
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 482
    seed json, like invalid-tag-exception
    note <InvalidTagException>
  loot 483
    seed json, like too-many-tags-exception
    note <TooManyTagsException>
  loot 484
    seed json, like tag-policy-exception
    note <TagPolicyException>
  loot 485
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 486
    seed json, like invalid-arn-exception
    note <InvalidArnException>
