
load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/arn
  take form arn

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/certificate-options
  take form certificate-options

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/certificate-status
  take form certificate-status

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/certificate-type
  take form certificate-type

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/domain-list
  take form domain-list

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/domain-name-string
  take form domain-name-string

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/domain-validation-list
  take form domain-validation-list

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/extended-key-usage-list
  take form extended-key-usage-list

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/failure-reason
  take form failure-reason

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/in-use-list
  take form in-use-list

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/key-algorithm
  take form key-algorithm

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/key-usage-list
  take form key-usage-list

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/renewal-eligibility
  take form renewal-eligibility

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/renewal-summary
  take form renewal-summary

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/revocation-reason
  take form revocation-reason

load @nerdbond/snow/amazonaws.com/acm/2015-12-08/base/t-stamp
  take form t-stamp

load @nerdbond/snow/base/string
  take form string

form certificate-detail, name <CertificateDetail>
  note <Contains metadata about an ACM certificate. This structure is returned in the response to a DescribeCertificate request.>
  take certificate-arn, name <CertificateArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the certificate. For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the _Amazon Web Services General Reference_.>
  take domain-name, name <DomainName>
    like domain-name-string
    void take
    note <The fully qualified domain name for the certificate, such as www.example.com or example.com.>
  take subject-alternative-names, name <SubjectAlternativeNames>
    like domain-list
    void take
    note <One or more domain names (subject alternative names) included in the certificate. This list contains the domain names that are bound to the public key that is contained in the certificate. The subject alternative names include the canonical domain name (CN) of the certificate and additional domain names that can be used to connect to the website.>
  take domain-validation-options, name <DomainValidationOptions>
    like domain-validation-list
    void take
    note <Contains information about the initial validation of each domain name that occurs as a result of the RequestCertificate request. This field exists only when the certificate type is `AMAZON_ISSUED`.>
  take serial, name <Serial>
    like string
    void take
    note <The serial number of the certificate.>
  take subject, name <Subject>
    like string
    void take
    note <The name of the entity that is associated with the public key contained in the certificate.>
  take issuer, name <Issuer>
    like string
    void take
    note <The name of the certificate authority that issued and signed the certificate.>
  take created-at, name <CreatedAt>
    like t-stamp
    void take
    note <The time at which the certificate was requested.>
  take issued-at, name <IssuedAt>
    like t-stamp
    void take
    note <The time at which the certificate was issued. This value exists only when the certificate type is `AMAZON_ISSUED`.>
  take imported-at, name <ImportedAt>
    like t-stamp
    void take
    note <The date and time at which the certificate was imported. This value exists only when the certificate type is `IMPORTED`.>
  take status, name <Status>
    like certificate-status
    void take
    note <The status of the certificate.>
  take revoked-at, name <RevokedAt>
    like t-stamp
    void take
    note <The time at which the certificate was revoked. This value exists only when the certificate status is `REVOKED`.>
  take revocation-reason, name <RevocationReason>
    like revocation-reason
    void take
    note <The reason the certificate was revoked. This value exists only when the certificate status is `REVOKED`.>
  take not-before, name <NotBefore>
    like t-stamp
    void take
    note <The time before which the certificate is not valid.>
  take not-after, name <NotAfter>
    like t-stamp
    void take
    note <The time after which the certificate is not valid.>
  take key-algorithm, name <KeyAlgorithm>
    like key-algorithm
    void take
    note <The algorithm that was used to generate the public-private key pair.>
  take signature-algorithm, name <SignatureAlgorithm>
    like string
    void take
    note <The algorithm that was used to sign the certificate.>
  take in-use-by, name <InUseBy>
    like in-use-list
    void take
    note <A list of ARNs for the Amazon Web Services resources that are using the certificate. A certificate can be used by multiple Amazon Web Services resources.>
  take failure-reason, name <FailureReason>
    like failure-reason
    void take
    note <The reason the certificate request failed. This value exists only when the certificate status is `FAILED`. For more information, see [Certificate Request Failed](https://docs.aws.amazon.com/acm/latest/userguide/troubleshooting.html#troubleshooting-failed) in the _Amazon Web Services Certificate Manager User Guide_.>
  take type, name <Type>
    like certificate-type
    void take
    note <The source of the certificate. For certificates provided by ACM, this value is `AMAZON_ISSUED`. For certificates that you imported with ImportCertificate, this value is `IMPORTED`. ACM does not provide [managed renewal](https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html) for imported certificates. For more information about the differences between certificates that you import and those that ACM provides, see [Importing Certificates](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html) in the _Amazon Web Services Certificate Manager User Guide_.>
  take renewal-summary, name <RenewalSummary>
    like renewal-summary
    void take
    note <Contains information about the status of ACM's [managed renewal](https://docs.aws.amazon.com/acm/latest/userguide/acm-renewal.html) for the certificate. This field exists only when the certificate type is `AMAZON_ISSUED`.>
  take key-usages, name <KeyUsages>
    like key-usage-list
    void take
    note <A list of Key Usage X.509 v3 extension objects. Each object is a string value that identifies the purpose of the public key contained in the certificate. Possible extension values include DIGITAL_SIGNATURE, KEY_ENCHIPHERMENT, NON_REPUDIATION, and more.>
  take extended-key-usages, name <ExtendedKeyUsages>
    like extended-key-usage-list
    void take
    note <Contains a list of Extended Key Usage X.509 v3 extension objects. Each object specifies a purpose for which the certificate public key can be used and consists of a name and an object identifier (OID).>
  take certificate-authority-arn, name <CertificateAuthorityArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the ACM PCA private certificate authority (CA) that issued the certificate. This has the following format:

`arn:aws:acm-pca:region:account:certificate-authority/12345678-1234-1234-1234-123456789012`>
  take renewal-eligibility, name <RenewalEligibility>
    like renewal-eligibility
    void take
    note <Specifies whether the certificate is eligible for renewal. At this time, only exported private certificates can be renewed with the RenewCertificate command.>
  take options, name <Options>
    like certificate-options
    void take
    note <Value that specifies whether to add the certificate to a transparency log. Certificate transparency makes it possible to detect SSL certificates that have been mistakenly or maliciously issued. A browser might respond to certificate that has not been logged by showing an error message. The logs are cryptographically secure.>
