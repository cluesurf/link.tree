
load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-caption-language-setting
  take form hls-caption-language-setting

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-cdn-settings
  take form hls-cdn-settings

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-client-cache
  take form hls-client-cache

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-codec-specification
  take form hls-codec-specification

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-directory-structure
  take form hls-directory-structure

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-discontinuity-tags
  take form hls-discontinuity-tags

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-encryption-type
  take form hls-encryption-type

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-id3-segment-tagging-state
  take form hls-id3-segment-tagging-state

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-incomplete-segment-behavior
  take form hls-incomplete-segment-behavior

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-iv-in-manifest
  take form hls-iv-in-manifest

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-iv-source
  take form hls-iv-source

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-manifest-compression
  take form hls-manifest-compression

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-manifest-duration-format
  take form hls-manifest-duration-format

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-mode
  take form hls-mode

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-output-selection
  take form hls-output-selection

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-program-date-time
  take form hls-program-date-time

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-redundant-manifest
  take form hls-redundant-manifest

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-segmentation-mode
  take form hls-segmentation-mode

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-stream-inf-resolution
  take form hls-stream-inf-resolution

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-timed-metadata-id3-frame
  take form hls-timed-metadata-id3-frame

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/hls-ts-file-mode
  take form hls-ts-file-mode

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/i-frame-only-playlist-type
  take form i-frame-only-playlist-type

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/input-loss-action-for-hls-out
  take form input-loss-action-for-hls-out

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min0
  take form integer-min0

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min0-max3600
  take form integer-min0-max3600

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min1
  take form integer-min1

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min3
  take form integer-min3

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/key-provider-settings
  take form key-provider-settings

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/list-of-caption-language-mapping
  take form list-of-caption-language-mapping

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/list-of-hls-ad-markers
  take form list-of-hls-ad-markers

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/output-location-ref
  take form output-location-ref

load @tunebond/snow/amazonaws.com/medialive/2017-10-14/base/string-min32-max32
  take form string-min32-max32

load @tunebond/snow/base/string
  take form string

form hls-group-settings, name <HlsGroupSettings>
  note <Hls Group Settings>
  take ad-markers, name <AdMarkers>
    like list-of-hls-ad-markers
    void take
    note <Choose one or more ad marker types to pass SCTE35 signals through to this group of Apple HLS outputs.>
    host xml
      host name, text <adMarkers>
  take base-url-content, name <BaseUrlContent>
    like string
    void take
    note <A partial URI prefix that will be prepended to each output in the media .m3u8 file. Can be used if base manifest is delivered from a different URL than the main .m3u8 file.>
    host xml
      host name, text <baseUrlContent>
  take base-url-content1, name <BaseUrlContent1>
    like string
    void take
    note <Optional. One value per output group. This field is required only if you are completing Base URL content A, and the downstream system has notified you that the media files for pipeline 1 of all outputs are in a location different from the media files for pipeline 0.>
    host xml
      host name, text <baseUrlContent1>
  take base-url-manifest, name <BaseUrlManifest>
    like string
    void take
    note <A partial URI prefix that will be prepended to each output in the media .m3u8 file. Can be used if base manifest is delivered from a different URL than the main .m3u8 file.>
    host xml
      host name, text <baseUrlManifest>
  take base-url-manifest1, name <BaseUrlManifest1>
    like string
    void take
    note <Optional. One value per output group. Complete this field only if you are completing Base URL manifest A, and the downstream system has notified you that the child manifest files for pipeline 1 of all outputs are in a location different from the child manifest files for pipeline 0.>
    host xml
      host name, text <baseUrlManifest1>
  take caption-language-mappings, name <CaptionLanguageMappings>
    like list-of-caption-language-mapping
    void take
    note <Mapping of up to 4 caption channels to caption languages. Is only meaningful if captionLanguageSetting is set to "insert".>
    host xml
      host name, text <captionLanguageMappings>
  take caption-language-setting, name <CaptionLanguageSetting>
    like hls-caption-language-setting
    void take
    note <Applies only to 608 Embedded output captions. insert: Include CLOSED-CAPTIONS lines in the manifest. Specify at least one language in the CC1 Language Code field. One CLOSED-CAPTION line is added for each Language Code you specify. Make sure to specify the languages in the order in which they appear in the original source (if the source is embedded format) or the order of the caption selectors (if the source is other than embedded). Otherwise, languages in the manifest will not match up properly with the output captions. none: Include CLOSED-CAPTIONS=NONE line in the manifest. omit: Omit any CLOSED-CAPTIONS line from the manifest.>
    host xml
      host name, text <captionLanguageSetting>
  take client-cache, name <ClientCache>
    like hls-client-cache
    void take
    note <When set to "disabled", sets the #EXT-X-ALLOW-CACHE:no tag in the manifest, which prevents clients from saving media segments for later replay.>
    host xml
      host name, text <clientCache>
  take codec-specification, name <CodecSpecification>
    like hls-codec-specification
    void take
    note <Specification to use (RFC-6381 or the default RFC-4281) during m3u8 playlist generation.>
    host xml
      host name, text <codecSpecification>
  take constant-iv, name <ConstantIv>
    like string-min32-max32
    void take
    note <For use with encryptionType. This is a 128-bit, 16-byte hex value represented by a 32-character text string. If ivSource is set to "explicit" then this parameter is required and is used as the IV for encryption.>
    host xml
      host name, text <constantIv>
  take destination, name <Destination>
    like output-location-ref
    note <A directory or HTTP destination for the HLS segments, manifest files, and encryption keys (if enabled).>
    host xml
      host name, text <destination>
  take directory-structure, name <DirectoryStructure>
    like hls-directory-structure
    void take
    note <Place segments in subdirectories.>
    host xml
      host name, text <directoryStructure>
  take discontinuity-tags, name <DiscontinuityTags>
    like hls-discontinuity-tags
    void take
    note <Specifies whether to insert EXT-X-DISCONTINUITY tags in the HLS child manifests for this output group. Typically, choose Insert because these tags are required in the manifest (according to the HLS specification) and serve an important purpose. Choose Never Insert only if the downstream system is doing real-time failover (without using the MediaLive automatic failover feature) and only if that downstream system has advised you to exclude the tags.>
    host xml
      host name, text <discontinuityTags>
  take encryption-type, name <EncryptionType>
    like hls-encryption-type
    void take
    note <Encrypts the segments with the given encryption scheme. Exclude this parameter if no encryption is desired.>
    host xml
      host name, text <encryptionType>
  take hls-cdn-settings, name <HlsCdnSettings>
    like hls-cdn-settings
    void take
    note <Parameters that control interactions with the CDN.>
    host xml
      host name, text <hlsCdnSettings>
  take hls-id3-segment-tagging, name <HlsId3SegmentTagging>
    like hls-id3-segment-tagging-state
    void take
    note <State of HLS ID3 Segment Tagging>
    host xml
      host name, text <hlsId3SegmentTagging>
  take i-frame-only-playlists, name <IFrameOnlyPlaylists>
    like i-frame-only-playlist-type
    void take
    note <DISABLED: Do not create an I-frame-only manifest, but do create the master and media manifests (according to the Output Selection field). STANDARD: Create an I-frame-only manifest for each output that contains video, as well as the other manifests (according to the Output Selection field). The I-frame manifest contains a #EXT-X-I-FRAMES-ONLY tag to indicate it is I-frame only, and one or more #EXT-X-BYTERANGE entries identifying the I-frame position. For example, #EXT-X-BYTERANGE:160364@1461888">
    host xml
      host name, text <iFrameOnlyPlaylists>
  take incomplete-segment-behavior, name <IncompleteSegmentBehavior>
    like hls-incomplete-segment-behavior
    void take
    note <Specifies whether to include the final (incomplete) segment in the media output when the pipeline stops producing output because of a channel stop, a channel pause or a loss of input to the pipeline. Auto means that MediaLive decides whether to include the final segment, depending on the channel class and the types of output groups. Suppress means to never include the incomplete segment. We recommend you choose Auto and let MediaLive control the behavior.>
    host xml
      host name, text <incompleteSegmentBehavior>
  take index-n-segments, name <IndexNSegments>
    like integer-min3
    void take
    note <Applies only if Mode field is LIVE. Specifies the maximum number of segments in the media manifest file. After this maximum, older segments are removed from the media manifest. This number must be smaller than the number in the Keep Segments field.>
    host xml
      host name, text <indexNSegments>
  take input-loss-action, name <InputLossAction>
    like input-loss-action-for-hls-out
    void take
    note <Parameter that control output group behavior on input loss.>
    host xml
      host name, text <inputLossAction>
  take iv-in-manifest, name <IvInManifest>
    like hls-iv-in-manifest
    void take
    note <For use with encryptionType. The IV (Initialization Vector) is a 128-bit number used in conjunction with the key for encrypting blocks. If set to "include", IV is listed in the manifest, otherwise the IV is not in the manifest.>
    host xml
      host name, text <ivInManifest>
  take iv-source, name <IvSource>
    like hls-iv-source
    void take
    note <For use with encryptionType. The IV (Initialization Vector) is a 128-bit number used in conjunction with the key for encrypting blocks. If this setting is "followsSegmentNumber", it will cause the IV to change every segment (to match the segment number). If this is set to "explicit", you must enter a constantIv value.>
    host xml
      host name, text <ivSource>
  take keep-segments, name <KeepSegments>
    like integer-min1
    void take
    note <Applies only if Mode field is LIVE. Specifies the number of media segments to retain in the destination directory. This number should be bigger than indexNSegments (Num segments). We recommend (value = (2 x indexNsegments) + 1). If this "keep segments" number is too low, the following might happen: the player is still reading a media manifest file that lists this segment, but that segment has been removed from the destination directory (as directed by indexNSegments). This situation would result in a 404 HTTP error on the player.>
    host xml
      host name, text <keepSegments>
  take key-format, name <KeyFormat>
    like string
    void take
    note <The value specifies how the key is represented in the resource identified by the URI. If parameter is absent, an implicit value of "identity" is used. A reverse DNS string can also be given.>
    host xml
      host name, text <keyFormat>
  take key-format-versions, name <KeyFormatVersions>
    like string
    void take
    note <Either a single positive integer version value or a slash delimited list of version values (1/2/3).>
    host xml
      host name, text <keyFormatVersions>
  take key-provider-settings, name <KeyProviderSettings>
    like key-provider-settings
    void take
    note <The key provider settings.>
    host xml
      host name, text <keyProviderSettings>
  take manifest-compression, name <ManifestCompression>
    like hls-manifest-compression
    void take
    note <When set to gzip, compresses HLS playlist.>
    host xml
      host name, text <manifestCompression>
  take manifest-duration-format, name <ManifestDurationFormat>
    like hls-manifest-duration-format
    void take
    note <Indicates whether the output manifest should use floating point or integer values for segment duration.>
    host xml
      host name, text <manifestDurationFormat>
  take min-segment-length, name <MinSegmentLength>
    like integer-min0
    void take
    note <When set, minimumSegmentLength is enforced by looking ahead and back within the specified range for a nearby avail and extending the segment size if needed.>
    host xml
      host name, text <minSegmentLength>
  take mode, name <Mode>
    like hls-mode
    void take
    note <If "vod", all segments are indexed and kept permanently in the destination and manifest. If "live", only the number segments specified in keepSegments and indexNSegments are kept; newer segments replace older segments, which may prevent players from rewinding all the way to the beginning of the event. VOD mode uses HLS EXT-X-PLAYLIST-TYPE of EVENT while the channel is running, converting it to a "VOD" type manifest on completion of the stream.>
    host xml
      host name, text <mode>
  take output-selection, name <OutputSelection>
    like hls-output-selection
    void take
    note <MANIFESTS_AND_SEGMENTS: Generates manifests (master manifest, if applicable, and media manifests) for this output group. VARIANT_MANIFESTS_AND_SEGMENTS: Generates media manifests for this output group, but not a master manifest. SEGMENTS_ONLY: Does not generate any manifests for this output group.>
    host xml
      host name, text <outputSelection>
  take program-date-time, name <ProgramDateTime>
    like hls-program-date-time
    void take
    note <Includes or excludes EXT-X-PROGRAM-DATE-TIME tag in .m3u8 manifest files. The value is calculated as follows: either the program date and time are initialized using the input timecode source, or the time is initialized using the input timecode source and the date is initialized using the timestampOffset.>
    host xml
      host name, text <programDateTime>
  take program-date-time-period, name <ProgramDateTimePeriod>
    like integer-min0-max3600
    void take
    note <Period of insertion of EXT-X-PROGRAM-DATE-TIME entry, in seconds.>
    host xml
      host name, text <programDateTimePeriod>
  take redundant-manifest, name <RedundantManifest>
    like hls-redundant-manifest
    void take
    note <ENABLED: The master manifest (.m3u8 file) for each pipeline includes information about both pipelines: first its own media files, then the media files of the other pipeline. This feature allows playout device that support stale manifest detection to switch from one manifest to the other, when the current manifest seems to be stale. There are still two destinations and two master manifests, but both master manifests reference the media files from both pipelines. DISABLED: The master manifest (.m3u8 file) for each pipeline includes information about its own pipeline only. For an HLS output group with MediaPackage as the destination, the DISABLED behavior is always followed. MediaPackage regenerates the manifests it serves to players so a redundant manifest from MediaLive is irrelevant.>
    host xml
      host name, text <redundantManifest>
  take segment-length, name <SegmentLength>
    like integer-min1
    void take
    note <Length of MPEG-2 Transport Stream segments to create (in seconds). Note that segments will end on the next keyframe after this number of seconds, so actual segment length may be longer.>
    host xml
      host name, text <segmentLength>
  take segmentation-mode, name <SegmentationMode>
    like hls-segmentation-mode
    void take
    note <useInputSegmentation has been deprecated. The configured segment size is always used.>
    host xml
      host name, text <segmentationMode>
  take segments-per-subdirectory, name <SegmentsPerSubdirectory>
    like integer-min1
    void take
    note <Number of segments to write to a subdirectory before starting a new one. directoryStructure must be subdirectoryPerStream for this setting to have an effect.>
    host xml
      host name, text <segmentsPerSubdirectory>
  take stream-inf-resolution, name <StreamInfResolution>
    like hls-stream-inf-resolution
    void take
    note <Include or exclude RESOLUTION attribute for video in EXT-X-STREAM-INF tag of variant manifest.>
    host xml
      host name, text <streamInfResolution>
  take timed-metadata-id3-frame, name <TimedMetadataId3Frame>
    like hls-timed-metadata-id3-frame
    void take
    note <Indicates ID3 frame that has the timecode.>
    host xml
      host name, text <timedMetadataId3Frame>
  take timed-metadata-id3-period, name <TimedMetadataId3Period>
    like integer-min0
    void take
    note <Timed Metadata interval in seconds.>
    host xml
      host name, text <timedMetadataId3Period>
  take timestamp-delta-milliseconds, name <TimestampDeltaMilliseconds>
    like integer-min0
    void take
    note <Provides an extra millisecond delta offset to fine tune the timestamps.>
    host xml
      host name, text <timestampDeltaMilliseconds>
  take ts-file-mode, name <TsFileMode>
    like hls-ts-file-mode
    void take
    note <SEGMENTED_FILES: Emit the program as segments - multiple .ts media files. SINGLE_FILE: Applies only if Mode field is VOD. Emit the program as a single .ts media file. The media manifest includes #EXT-X-BYTERANGE tags to index segments for playback. A typical use for this value is when sending the output to AWS Elemental MediaConvert, which can accept only a single media file. Playback while the channel is running is not guaranteed due to HTTP server caching.>
    host xml
      host name, text <tsFileMode>