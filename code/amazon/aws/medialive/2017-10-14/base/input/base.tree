
load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/input-class
  take form input-class

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/input-source-type
  take form input-source-type

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/input-state
  take form input-state

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/input-type
  take form input-type

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-input-destination
  take form list-of-input-destination

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-input-device-settings
  take form list-of-input-device-settings

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-input-source
  take form list-of-input-source

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-media-connect-flow
  take form list-of-media-connect-flow

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-string
  take form list-of-string

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/tags
  take form tags

load @termsurf/snow/base/string
  take form string

form input, name <Input>
  note <Placeholder documentation for Input>
  take arn, name <Arn>
    like string
    void take
    note <The Unique ARN of the input (generated, immutable).>
    host xml
      host name, text <arn>
  take attached-channels, name <AttachedChannels>
    like list-of-string
    void take
    note <A list of channel IDs that that input is attached to (currently an input can only be attached to one channel).>
    host xml
      host name, text <attachedChannels>
  take destinations, name <Destinations>
    like list-of-input-destination
    void take
    note <A list of the destinations of the input (PUSH-type).>
    host xml
      host name, text <destinations>
  take id, name <Id>
    like string
    void take
    note <The generated ID of the input (unique for user account, immutable).>
    host xml
      host name, text <id>
  take input-class, name <InputClass>
    like input-class
    void take
    note <STANDARD - MediaLive expects two sources to be connected to this input. If the channel is also STANDARD, both sources will be ingested. If the channel is SINGLE_PIPELINE, only the first source will be ingested; the second source will always be ignored, even if the first source fails. SINGLE_PIPELINE - You can connect only one source to this input. If the ChannelClass is also SINGLE_PIPELINE, this value is valid. If the ChannelClass is STANDARD, this value is not valid because the channel requires two sources in the input.>
    host xml
      host name, text <inputClass>
  take input-devices, name <InputDevices>
    like list-of-input-device-settings
    void take
    note <Settings for the input devices.>
    host xml
      host name, text <inputDevices>
  take input-partner-ids, name <InputPartnerIds>
    like list-of-string
    void take
    note <A list of IDs for all Inputs which are partners of this one.>
    host xml
      host name, text <inputPartnerIds>
  take input-source-type, name <InputSourceType>
    like input-source-type
    void take
    note <Certain pull input sources can be dynamic, meaning that they can have their URL's dynamically changes during input switch actions. Presently, this functionality only works with MP4_FILE inputs.>
    host xml
      host name, text <inputSourceType>
  take media-connect-flows, name <MediaConnectFlows>
    like list-of-media-connect-flow
    void take
    note <A list of MediaConnect Flows for this input.>
    host xml
      host name, text <mediaConnectFlows>
  take name, name <Name>
    like string
    void take
    note <The user-assigned name (This is a mutable value).>
    host xml
      host name, text <name>
  take role-arn, name <RoleArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the role this input assumes during and after creation.>
    host xml
      host name, text <roleArn>
  take security-groups, name <SecurityGroups>
    like list-of-string
    void take
    note <A list of IDs for all the Input Security Groups attached to the input.>
    host xml
      host name, text <securityGroups>
  take sources, name <Sources>
    like list-of-input-source
    void take
    note <A list of the sources of the input (PULL-type).>
    host xml
      host name, text <sources>
  take state, name <State>
    like input-state
    void take
    host xml
      host name, text <state>
  take tags, name <Tags>
    like tags
    void take
    note <A collection of key-value pairs.>
    host xml
      host name, text <tags>
  take type, name <Type>
    like input-type
    void take
    host xml
      host name, text <type>