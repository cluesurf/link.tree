
load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/input-type
  take form input-type

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/input-vpc-request
  take form input-vpc-request

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-input-destination-request
  take form list-of-input-destination-request

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-input-device-settings
  take form list-of-input-device-settings

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-input-source-request
  take form list-of-input-source-request

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-media-connect-flow-request
  take form list-of-media-connect-flow-request

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/list-of-string
  take form list-of-string

load @termsurf/snow/amazonaws.com/medialive/2017-10-14/base/tags
  take form tags

load @termsurf/snow/base/string
  take form string

form create-input-request, name <CreateInputRequest>
  note <The name of the input>
  take destinations, name <Destinations>
    like list-of-input-destination-request
    void take
    note <Destination settings for PUSH type inputs.>
    host xml
      host name, text <destinations>
  take input-devices, name <InputDevices>
    like list-of-input-device-settings
    void take
    note <Settings for the devices.>
    host xml
      host name, text <inputDevices>
  take input-security-groups, name <InputSecurityGroups>
    like list-of-string
    void take
    note <A list of security groups referenced by IDs to attach to the input.>
    host xml
      host name, text <inputSecurityGroups>
  take media-connect-flows, name <MediaConnectFlows>
    like list-of-media-connect-flow-request
    void take
    note <A list of the MediaConnect Flows that you want to use in this input. You can specify as few as one Flow and presently, as many as two. The only requirement is when you have more than one is that each Flow is in a separate Availability Zone as this ensures your EML input is redundant to AZ issues.>
    host xml
      host name, text <mediaConnectFlows>
  take name, name <Name>
    like string
    void take
    note <Name of the input.>
    host xml
      host name, text <name>
  take request-id, name <RequestId>
    like string
    void take
    note <Unique identifier of the request to ensure the request is handled exactly once in case of retries.>
    host xml
      host name, text <requestId>
  take role-arn, name <RoleArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the role this input assumes during and after creation.>
    host xml
      host name, text <roleArn>
  take sources, name <Sources>
    like list-of-input-source-request
    void take
    note <The source URLs for a PULL-type input. Every PULL type input needs exactly two source URLs for redundancy. Only specify sources for PULL type Inputs. Leave Destinations empty.>
    host xml
      host name, text <sources>
  take tags, name <Tags>
    like tags
    void take
    note <A collection of key-value pairs.>
    host xml
      host name, text <tags>
  take type, name <Type>
    like input-type
    void take
    host xml
      host name, text <type>
  take vpc, name <Vpc>
    like input-vpc-request
    void take
    host xml
      host name, text <vpc>