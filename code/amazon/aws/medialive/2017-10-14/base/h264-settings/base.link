
load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/afd-signaling
  take form afd-signaling

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/double
  take form double

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/fixed-afd
  take form fixed-afd

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-adaptive-quantization
  take form h264-adaptive-quantization

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-color-metadata
  take form h264-color-metadata

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-color-space-settings
  take form h264-color-space-settings

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-entropy-encoding
  take form h264-entropy-encoding

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-filter-settings
  take form h264-filter-settings

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-flicker-aq
  take form h264-flicker-aq

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-force-field-pictures
  take form h264-force-field-pictures

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-framerate-control
  take form h264-framerate-control

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-gop-b-reference
  take form h264-gop-b-reference

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-gop-size-units
  take form h264-gop-size-units

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-level
  take form h264-level

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-look-ahead-rate-control
  take form h264-look-ahead-rate-control

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-par-control
  take form h264-par-control

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-profile
  take form h264-profile

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-quality-level
  take form h264-quality-level

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-rate-control-mode
  take form h264-rate-control-mode

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-scan-type
  take form h264-scan-type

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-scene-change-detect
  take form h264-scene-change-detect

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-spatial-aq
  take form h264-spatial-aq

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-sub-gop-length
  take form h264-sub-gop-length

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-syntax
  take form h264-syntax

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-temporal-aq
  take form h264-temporal-aq

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/h264-timecode-insertion-behavior
  take form h264-timecode-insertion-behavior

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min0
  take form integer-min0

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min0-max100
  take form integer-min0-max100

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min0-max128
  take form integer-min0-max128

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min0-max30
  take form integer-min0-max30

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min0-max7
  take form integer-min0-max7

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min1
  take form integer-min1

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min1-max10
  take form integer-min1-max10

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min1-max32
  take form integer-min1-max32

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min1-max6
  take form integer-min1-max6

load @wavebond/snow/amazonaws.com/medialive/2017-10-14/base/integer-min1000
  take form integer-min1000

form h264-settings, name <H264Settings>
  note <H264 Settings>
  take adaptive-quantization, name <AdaptiveQuantization>
    like h264-adaptive-quantization
    void take
    note <Enables or disables adaptive quantization, which is a technique MediaLive can apply to video on a frame-by-frame basis to produce more compression without losing quality. There are three types of adaptive quantization: flicker, spatial, and temporal. Set the field in one of these ways: Set to Auto. Recommended. For each type of AQ, MediaLive will determine if AQ is needed, and if so, the appropriate strength. Set a strength (a value other than Auto or Disable). This strength will apply to any of the AQ fields that you choose to enable. Set to Disabled to disable all types of adaptive quantization.>
    host xml
      host name, text <adaptiveQuantization>
  take afd-signaling, name <AfdSignaling>
    like afd-signaling
    void take
    note <Indicates that AFD values will be written into the output stream. If afdSignaling is "auto", the system will try to preserve the input AFD value (in cases where multiple AFD values are valid). If set to "fixed", the AFD value will be the value configured in the fixedAfd parameter.>
    host xml
      host name, text <afdSignaling>
  take bitrate, name <Bitrate>
    like integer-min1000
    void take
    note <Average bitrate in bits/second. Required when the rate control mode is VBR or CBR. Not used for QVBR. In an MS Smooth output group, each output must have a unique value when its bitrate is rounded down to the nearest multiple of 1000.>
    host xml
      host name, text <bitrate>
  take buf-fill-pct, name <BufFillPct>
    like integer-min0-max100
    void take
    note <Percentage of the buffer that should initially be filled (HRD buffer model).>
    host xml
      host name, text <bufFillPct>
  take buf-size, name <BufSize>
    like integer-min0
    void take
    note <Size of buffer (HRD buffer model) in bits.>
    host xml
      host name, text <bufSize>
  take color-metadata, name <ColorMetadata>
    like h264-color-metadata
    void take
    note <Includes colorspace metadata in the output.>
    host xml
      host name, text <colorMetadata>
  take color-space-settings, name <ColorSpaceSettings>
    like h264-color-space-settings
    void take
    note <Color Space settings>
    host xml
      host name, text <colorSpaceSettings>
  take entropy-encoding, name <EntropyEncoding>
    like h264-entropy-encoding
    void take
    note <Entropy encoding mode. Use cabac (must be in Main or High profile) or cavlc.>
    host xml
      host name, text <entropyEncoding>
  take filter-settings, name <FilterSettings>
    like h264-filter-settings
    void take
    note <Optional filters that you can apply to an encode.>
    host xml
      host name, text <filterSettings>
  take fixed-afd, name <FixedAfd>
    like fixed-afd
    void take
    note <Four bit AFD value to write on all frames of video in the output stream. Only valid when afdSignaling is set to 'Fixed'.>
    host xml
      host name, text <fixedAfd>
  take flicker-aq, name <FlickerAq>
    like h264-flicker-aq
    void take
    note <Flicker AQ makes adjustments within each frame to reduce flicker or 'pop' on I-frames. The value to enter in this field depends on the value in the Adaptive quantization field: If you have set the Adaptive quantization field to Auto, MediaLive ignores any value in this field. MediaLive will determine if flicker AQ is appropriate and will apply the appropriate strength. If you have set the Adaptive quantization field to a strength, you can set this field to Enabled or Disabled. Enabled: MediaLive will apply flicker AQ using the specified strength. Disabled: MediaLive won't apply flicker AQ. If you have set the Adaptive quantization to Disabled, MediaLive ignores any value in this field and doesn't apply flicker AQ.>
    host xml
      host name, text <flickerAq>
  take force-field-pictures, name <ForceFieldPictures>
    like h264-force-field-pictures
    void take
    note <This setting applies only when scan type is "interlaced." It controls whether coding is performed on a field basis or on a frame basis. (When the video is progressive, the coding is always performed on a frame basis.) enabled: Force MediaLive to code on a field basis, so that odd and even sets of fields are coded separately. disabled: Code the two sets of fields separately (on a field basis) or together (on a frame basis using PAFF), depending on what is most appropriate for the content.>
    host xml
      host name, text <forceFieldPictures>
  take framerate-control, name <FramerateControl>
    like h264-framerate-control
    void take
    note <This field indicates how the output video frame rate is specified. If "specified" is selected then the output video frame rate is determined by framerateNumerator and framerateDenominator, else if "initializeFromSource" is selected then the output video frame rate will be set equal to the input video frame rate of the first input.>
    host xml
      host name, text <framerateControl>
  take framerate-denominator, name <FramerateDenominator>
    like integer-min1
    void take
    note <Framerate denominator.>
    host xml
      host name, text <framerateDenominator>
  take framerate-numerator, name <FramerateNumerator>
    like integer-min1
    void take
    note <Framerate numerator - framerate is a fraction, e.g. 24000 / 1001 = 23.976 fps.>
    host xml
      host name, text <framerateNumerator>
  take gop-b-reference, name <GopBReference>
    like h264-gop-b-reference
    void take
    note <Documentation update needed>
    host xml
      host name, text <gopBReference>
  take gop-closed-cadence, name <GopClosedCadence>
    like integer-min0
    void take
    note <Frequency of closed GOPs. In streaming applications, it is recommended that this be set to 1 so a decoder joining mid-stream will receive an IDR frame as quickly as possible. Setting this value to 0 will break output segmenting.>
    host xml
      host name, text <gopClosedCadence>
  take gop-num-b-frames, name <GopNumBFrames>
    like integer-min0-max7
    void take
    note <Number of B-frames between reference frames.>
    host xml
      host name, text <gopNumBFrames>
  take gop-size, name <GopSize>
    like double
    void take
    note <GOP size (keyframe interval) in units of either frames or seconds per gopSizeUnits. If gopSizeUnits is frames, gopSize must be an integer and must be greater than or equal to 1. If gopSizeUnits is seconds, gopSize must be greater than 0, but need not be an integer.>
    host xml
      host name, text <gopSize>
  take gop-size-units, name <GopSizeUnits>
    like h264-gop-size-units
    void take
    note <Indicates if the gopSize is specified in frames or seconds. If seconds the system will convert the gopSize into a frame count at run time.>
    host xml
      host name, text <gopSizeUnits>
  take level, name <Level>
    like h264-level
    void take
    note <H.264 Level.>
    host xml
      host name, text <level>
  take look-ahead-rate-control, name <LookAheadRateControl>
    like h264-look-ahead-rate-control
    void take
    note <Amount of lookahead. A value of low can decrease latency and memory usage, while high can produce better quality for certain content.>
    host xml
      host name, text <lookAheadRateControl>
  take max-bitrate, name <MaxBitrate>
    like integer-min1000
    void take
    note <For QVBR: See the tooltip for Quality level For VBR: Set the maximum bitrate in order to accommodate expected spikes in the complexity of the video.>
    host xml
      host name, text <maxBitrate>
  take min-i-interval, name <MinIInterval>
    like integer-min0-max30
    void take
    note <Only meaningful if sceneChangeDetect is set to enabled. Defaults to 5 if multiplex rate control is used. Enforces separation between repeated (cadence) I-frames and I-frames inserted by Scene Change Detection. If a scene change I-frame is within I-interval frames of a cadence I-frame, the GOP is shrunk and/or stretched to the scene change I-frame. GOP stretch requires enabling lookahead as well as setting I-interval. The normal cadence resumes for the next GOP. Note: Maximum GOP stretch = GOP size + Min-I-interval - 1>
    host xml
      host name, text <minIInterval>
  take num-ref-frames, name <NumRefFrames>
    like integer-min1-max6
    void take
    note <Number of reference frames to use. The encoder may use more than requested if using B-frames and/or interlaced encoding.>
    host xml
      host name, text <numRefFrames>
  take par-control, name <ParControl>
    like h264-par-control
    void take
    note <This field indicates how the output pixel aspect ratio is specified. If "specified" is selected then the output video pixel aspect ratio is determined by parNumerator and parDenominator, else if "initializeFromSource" is selected then the output pixsel aspect ratio will be set equal to the input video pixel aspect ratio of the first input.>
    host xml
      host name, text <parControl>
  take par-denominator, name <ParDenominator>
    like integer-min1
    void take
    note <Pixel Aspect Ratio denominator.>
    host xml
      host name, text <parDenominator>
  take par-numerator, name <ParNumerator>
    like integer-min1
    void take
    note <Pixel Aspect Ratio numerator.>
    host xml
      host name, text <parNumerator>
  take profile, name <Profile>
    like h264-profile
    void take
    note <H.264 Profile.>
    host xml
      host name, text <profile>
  take quality-level, name <QualityLevel>
    like h264-quality-level
    void take
    note <Leave as STANDARD_QUALITY or choose a different value (which might result in additional costs to run the channel). - ENHANCED_QUALITY: Produces a slightly better video quality without an increase in the bitrate. Has an effect only when the Rate control mode is QVBR or CBR. If this channel is in a MediaLive multiplex, the value must be ENHANCED_QUALITY. - STANDARD_QUALITY: Valid for any Rate control mode.>
    host xml
      host name, text <qualityLevel>
  take qvbr-quality-level, name <QvbrQualityLevel>
    like integer-min1-max10
    void take
    note <Controls the target quality for the video encode. Applies only when the rate control mode is QVBR. You can set a target quality or you can let MediaLive determine the best quality. To set a target quality, enter values in the QVBR quality level field and the Max bitrate field. Enter values that suit your most important viewing devices. Recommended values are: - Primary screen: Quality level: 8 to 10. Max bitrate: 4M - PC or tablet: Quality level: 7. Max bitrate: 1.5M to 3M - Smartphone: Quality level: 6. Max bitrate: 1M to 1.5M To let MediaLive decide, leave the QVBR quality level field empty, and in Max bitrate enter the maximum rate you want in the video. For more information, see the section called "Video - rate control mode" in the MediaLive user guide>
    host xml
      host name, text <qvbrQualityLevel>
  take rate-control-mode, name <RateControlMode>
    like h264-rate-control-mode
    void take
    note <Rate control mode. QVBR: Quality will match the specified quality level except when it is constrained by the maximum bitrate. Recommended if you or your viewers pay for bandwidth. VBR: Quality and bitrate vary, depending on the video complexity. Recommended instead of QVBR if you want to maintain a specific average bitrate over the duration of the channel. CBR: Quality varies, depending on the video complexity. Recommended only if you distribute your assets to devices that cannot handle variable bitrates. Multiplex: This rate control mode is only supported (and is required) when the video is being delivered to a MediaLive Multiplex in which case the rate control configuration is controlled by the properties within the Multiplex Program.>
    host xml
      host name, text <rateControlMode>
  take scan-type, name <ScanType>
    like h264-scan-type
    void take
    note <Sets the scan type of the output to progressive or top-field-first interlaced.>
    host xml
      host name, text <scanType>
  take scene-change-detect, name <SceneChangeDetect>
    like h264-scene-change-detect
    void take
    note <Scene change detection. - On: inserts I-frames when scene change is detected. - Off: does not force an I-frame when scene change is detected.>
    host xml
      host name, text <sceneChangeDetect>
  take slices, name <Slices>
    like integer-min1-max32
    void take
    note <Number of slices per picture. Must be less than or equal to the number of macroblock rows for progressive pictures, and less than or equal to half the number of macroblock rows for interlaced pictures. This field is optional; when no value is specified the encoder will choose the number of slices based on encode resolution.>
    host xml
      host name, text <slices>
  take softness, name <Softness>
    like integer-min0-max128
    void take
    note <Softness. Selects quantizer matrix, larger values reduce high-frequency content in the encoded image. If not set to zero, must be greater than 15.>
    host xml
      host name, text <softness>
  take spatial-aq, name <SpatialAq>
    like h264-spatial-aq
    void take
    note <Spatial AQ makes adjustments within each frame based on spatial variation of content complexity. The value to enter in this field depends on the value in the Adaptive quantization field: If you have set the Adaptive quantization field to Auto, MediaLive ignores any value in this field. MediaLive will determine if spatial AQ is appropriate and will apply the appropriate strength. If you have set the Adaptive quantization field to a strength, you can set this field to Enabled or Disabled. Enabled: MediaLive will apply spatial AQ using the specified strength. Disabled: MediaLive won't apply spatial AQ. If you have set the Adaptive quantization to Disabled, MediaLive ignores any value in this field and doesn't apply spatial AQ.>
    host xml
      host name, text <spatialAq>
  take subgop-length, name <SubgopLength>
    like h264-sub-gop-length
    void take
    note <If set to fixed, use gopNumBFrames B-frames per sub-GOP. If set to dynamic, optimize the number of B-frames used for each sub-GOP to improve visual quality.>
    host xml
      host name, text <subgopLength>
  take syntax, name <Syntax>
    like h264-syntax
    void take
    note <Produces a bitstream compliant with SMPTE RP-2027.>
    host xml
      host name, text <syntax>
  take temporal-aq, name <TemporalAq>
    like h264-temporal-aq
    void take
    note <Temporal makes adjustments within each frame based on temporal variation of content complexity. The value to enter in this field depends on the value in the Adaptive quantization field: If you have set the Adaptive quantization field to Auto, MediaLive ignores any value in this field. MediaLive will determine if temporal AQ is appropriate and will apply the appropriate strength. If you have set the Adaptive quantization field to a strength, you can set this field to Enabled or Disabled. Enabled: MediaLive will apply temporal AQ using the specified strength. Disabled: MediaLive won't apply temporal AQ. If you have set the Adaptive quantization to Disabled, MediaLive ignores any value in this field and doesn't apply temporal AQ.>
    host xml
      host name, text <temporalAq>
  take timecode-insertion, name <TimecodeInsertion>
    like h264-timecode-insertion-behavior
    void take
    note <Determines how timecodes should be inserted into the video elementary stream. - 'disabled': Do not include timecodes - 'picTimingSei': Pass through picture timing SEI messages from the source specified in Timecode Config>
    host xml
      host name, text <timecodeInsertion>