
load @tunebond/snow/amazonaws.com/codepipeline/2015-07-09/base/concurrent-modification-exception
  take form concurrent-modification-exception

load @tunebond/snow/amazonaws.com/codepipeline/2015-07-09/base/invalid-tags-exception
  take form invalid-tags-exception

load @tunebond/snow/amazonaws.com/codepipeline/2015-07-09/base/invalid-webhook-authentication-parameters-exception
  take form invalid-webhook-authentication-parameters-exception

load @tunebond/snow/amazonaws.com/codepipeline/2015-07-09/base/invalid-webhook-filter-pattern-exception
  take form invalid-webhook-filter-pattern-exception

load @tunebond/snow/amazonaws.com/codepipeline/2015-07-09/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @tunebond/snow/amazonaws.com/codepipeline/2015-07-09/base/pipeline-not-found-exception
  take form pipeline-not-found-exception

load @tunebond/snow/amazonaws.com/codepipeline/2015-07-09/base/put-webhook-output
  take form put-webhook-output

load @tunebond/snow/amazonaws.com/codepipeline/2015-07-09/base/too-many-tags-exception
  take form too-many-tags-exception

load @tunebond/snow/amazonaws.com/codepipeline/2015-07-09/base/validation-exception
  take form validation-exception

load @tunebond/snow/base/native-string
  take form native-string

boot put-webhook, name <PutWebhook>
  deed post
  note <Defines a webhook and returns a unique webhook URL generated by CodePipeline. This URL can be supplied to third party source hosting providers to call every time there's a code change. When CodePipeline receives a POST request on this URL, the pipeline defined in the webhook is started as long as the POST request satisfied the authentication and filtering requirements supplied when defining the webhook. RegisterWebhookWithThirdParty and DeregisterWebhookWithThirdParty APIs can be used to automatically configure supported third parties to call the generated webhook URL.>

  take x-amz-target
    like native-string
  take put-webhook-input, like put-webhook-input

  line </#X-Amz-Target=CodePipeline_20150709.PutWebhook>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan put-webhook-input

  loot 200
    seed json, like put-webhook-output
    note <Success>
  loot 480
    seed json, like validation-exception
    note <ValidationException>
  loot 481
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 482
    seed json, like invalid-webhook-filter-pattern-exception
    note <InvalidWebhookFilterPatternException>
  loot 483
    seed json, like invalid-webhook-authentication-parameters-exception
    note <InvalidWebhookAuthenticationParametersException>
  loot 484
    seed json, like pipeline-not-found-exception
    note <PipelineNotFoundException>
  loot 485
    seed json, like too-many-tags-exception
    note <TooManyTagsException>
  loot 486
    seed json, like invalid-tags-exception
    note <InvalidTagsException>
  loot 487
    seed json, like concurrent-modification-exception
    note <ConcurrentModificationException>