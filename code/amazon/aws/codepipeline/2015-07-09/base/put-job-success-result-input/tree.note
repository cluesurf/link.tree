
load @termsurf/snow/amazonaws.com/codepipeline/2015-07-09/base/continuation-token
  take form continuation-token

load @termsurf/snow/amazonaws.com/codepipeline/2015-07-09/base/current-revision
  take form current-revision

load @termsurf/snow/amazonaws.com/codepipeline/2015-07-09/base/execution-details
  take form execution-details

load @termsurf/snow/amazonaws.com/codepipeline/2015-07-09/base/job-id
  take form job-id

load @termsurf/snow/amazonaws.com/codepipeline/2015-07-09/base/output-variables-map
  take form output-variables-map

form put-job-success-result-input, name <PutJobSuccessResultInput>
  note <Represents the input of a `PutJobSuccessResult` action.>
  take job-id, name <jobId>
    like job-id
    note <The unique system-generated ID of the job that succeeded. This is the same ID returned from `PollForJobs`.>
  take current-revision, name <currentRevision>
    like current-revision
    void take
    note <The ID of the current revision of the artifact successfully worked on by the job.>
  take continuation-token, name <continuationToken>
    like continuation-token
    void take
    note <A token generated by a job worker, such as an AWS CodeDeploy deployment ID, that a successful job provides to identify a custom action in progress. Future jobs use this token to identify the running instance of the action. It can be reused to return more information about the progress of the custom action. When the action is complete, no continuation token should be supplied.>
  take execution-details, name <executionDetails>
    like execution-details
    void take
    note <The execution details of the successful job, such as the actions taken by the job worker.>
  take output-variables, name <outputVariables>
    like output-variables-map
    void take
    note <Key-value pairs produced as output by a job worker that can be made available to a downstream action configuration. `outputVariables` can be included only when there is no continuation token on the request.>