
load @wavebond/snow/amazonaws.com/resource-groups/2017-11-27/base/query
  take form query

load @wavebond/snow/amazonaws.com/resource-groups/2017-11-27/base/query-type
  take form query-type

form create-group-body
  take name, name <Name>
  take description, name <Description>
    void take
  take resource-query, name <ResourceQuery>
    like form
      take type, name <Type>
        like query-type
        void take
        note <The type of the query. You can use the following values:

- _`CLOUDFORMATION_STACK_1_0:`_ Specifies that the `Query` contains an ARN for a CloudFormation stack.

- _`TAG_FILTERS_1_0:`_ Specifies that the `Query` parameter contains a JSON string that represents a collection of simple tag filters for resource types and tags. The JSON string uses a syntax similar to the `[GetResources](https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html)` operation, but uses only the `[ResourceTypeFilters](https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-ResourceTypeFilters)` and `[TagFilters](https://docs.aws.amazon.com/resourcegroupstagging/latest/APIReference/API_GetResources.html#resourcegrouptagging-GetResources-request-TagFiltersTagFilters)` fields. If you specify more than one tag key, only resources that match all tag keys, and at least one value of each specified tag key, are returned in your query. If you specify more than one value for a tag key, a resource matches the filter if it has a tag key value that matches _any_ of the specified values.

  For example, consider the following sample query for resources that have two tags, `Stage` and `Version`, with two values each:

  `[{"Stage":["Test","Deploy"]},{"Version":["1","2"]}]`

  The results of this query could include the following.

  - An EC2 instance that has the following two tags: `{"Stage":"Deploy"}`, and `{"Version":"2"}`

  - An S3 bucket that has the following two tags: `{"Stage":"Test"}`, and `{"Version":"1"}`

  The query would not include the following items in the results, however.

  - An EC2 instance that has only the following tag: `{"Stage":"Deploy"}`.

    The instance does not have **all** of the tag keys specified in the filter, so it is excluded from the results.

  - An RDS database that has the following two tags: `{"Stage":"Archived"}` and `{"Version":"4"}`

    The database has all of the tag keys, but none of those keys has an associated value that matches at least one of the specified values in the filter.>
      take query, name <Query>
        like query
        void take
        note <The query that defines a group or a search.>
    void take
  take tags, name <Tags>
    void take
  take configuration, name <Configuration>
    void take