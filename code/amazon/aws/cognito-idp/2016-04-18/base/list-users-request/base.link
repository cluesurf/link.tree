
load @drumwork/snow/amazonaws.com/cognito-idp/2016-04-18/base/query-limit-type
  take form query-limit-type

load @drumwork/snow/amazonaws.com/cognito-idp/2016-04-18/base/search-pagination-token-type
  take form search-pagination-token-type

load @drumwork/snow/amazonaws.com/cognito-idp/2016-04-18/base/searched-attribute-names-list-type
  take form searched-attribute-names-list-type

load @drumwork/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-filter-type
  take form user-filter-type

load @drumwork/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-pool-id-type
  take form user-pool-id-type

form list-users-request, name <ListUsersRequest>
  note <Represents the request to list users.>
  take user-pool-id, name <UserPoolId>
    like user-pool-id-type
    note <The user pool ID for the user pool on which the search should be performed.>
  take attributes-to-get, name <AttributesToGet>
    like searched-attribute-names-list-type
    void take
    note <An array of strings, where each string is the name of a user attribute to be returned for each user in the search results. If the array is null, all attributes are returned.>
  take limit, name <Limit>
    like query-limit-type
    void take
    note <Maximum number of users to be returned.>
  take pagination-token, name <PaginationToken>
    like search-pagination-token-type
    void take
    note <An identifier that was returned from the previous call to this operation, which can be used to return the next set of items in the list.>
  take filter, name <Filter>
    like user-filter-type
    void take
    note <A filter string of the form "_AttributeName_ _Filter-Type_ "_AttributeValue_"". Quotation marks within the filter string must be escaped using the backslash (\) character. For example, "`family_name` = \"Reddy\"".

- _AttributeName_: The name of the attribute to search for. You can only search for one attribute at a time.

- _Filter-Type_: For an exact match, use =, for example, "`given_name` = \"Jon\"". For a prefix ("starts with") match, use ^=, for example, "`given_name` ^= \"Jon\"".

- _AttributeValue_: The attribute value that must be matched for each user.

If the filter string is empty, `ListUsers` returns all users in the user pool.

You can only search for the following standard attributes:

- `username` (case-sensitive)

- `email`

- `phone_number`

- `name`

- `given_name`

- `family_name`

- `preferred_username`

- `cognito:user_status` (called **Status** in the Console) (case-insensitive)

- `status (called **Enabled** in the Console) (case-sensitive)`

- `sub`

Custom attributes are not searchable.

For more information, see [Searching for Users Using the ListUsers API](https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-using-listusers-api) and [Examples of Using the ListUsers API](https://docs.aws.amazon.com/cognito/latest/developerguide/how-to-manage-user-accounts.html#cognito-user-pools-searching-for-users-listusers-api-examples) in the _Amazon Cognito Developer Guide_.>