
load @tunebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/analytics-metadata-type
  take form analytics-metadata-type

load @tunebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/client-id-type
  take form client-id-type

load @tunebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/client-metadata-type
  take form client-metadata-type

load @tunebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/confirmation-code-type
  take form confirmation-code-type

load @tunebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/force-alias-creation
  take form force-alias-creation

load @tunebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/secret-hash-type
  take form secret-hash-type

load @tunebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-context-data-type
  take form user-context-data-type

load @tunebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/username-type
  take form username-type

form confirm-sign-up-request, name <ConfirmSignUpRequest>
  note <Represents the request to confirm registration of a user.>
  take client-id, name <ClientId>
    like client-id-type
    note <The ID of the app client associated with the user pool.>
  take secret-hash, name <SecretHash>
    like secret-hash-type
    void take
    note <A keyed-hash message authentication code (HMAC) calculated using the secret key of a user pool client and username plus the client ID in the message.>
  take username, name <Username>
    like username-type
    note <The user name of the user whose registration you wish to confirm.>
  take confirmation-code, name <ConfirmationCode>
    like confirmation-code-type
    note <The confirmation code sent by a user's request to confirm registration.>
  take force-alias-creation, name <ForceAliasCreation>
    like force-alias-creation
    void take
    note <Boolean to be specified to force user confirmation irrespective of existing alias. By default set to `False`. If this parameter is set to `True` and the phone number/email used for sign up confirmation already exists as an alias with a different user, the API call will migrate the alias from the previous user to the newly created user being confirmed. If set to `False`, the API will throw an **AliasExistsException** error.>
  take analytics-metadata, name <AnalyticsMetadata>
    like analytics-metadata-type
    void take
    note <The Amazon Pinpoint analytics metadata for collecting metrics for `ConfirmSignUp` calls.>
  take user-context-data, name <UserContextData>
    like user-context-data-type
    void take
    note <Contextual data such as the user's device fingerprint, IP address, or location used for evaluating the risk of an unexpected event by Amazon Cognito advanced security.>
  take client-metadata, name <ClientMetadata>
    like client-metadata-type
    void take
    note <A map of custom key-value pairs that you can provide as input for any custom workflows that this action triggers.

You create custom workflows by assigning Lambda functions to user pool triggers. When you use the ConfirmSignUp API action, Amazon Cognito invokes the function that is assigned to the _post confirmation_ trigger. When Amazon Cognito invokes this function, it passes a JSON payload, which the function receives as input. This payload contains a `clientMetadata` attribute, which provides the data that you assigned to the ClientMetadata parameter in your ConfirmSignUp request. In your function code in Lambda, you can process the `clientMetadata` value to enhance your workflow for your specific needs.

For more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html) in the _Amazon Cognito Developer Guide_.

Take the following limitations into consideration when you use the ClientMetadata parameter:

- Amazon Cognito does not store the ClientMetadata value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose.

- Amazon Cognito does not validate the ClientMetadata value.

- Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide sensitive information.>