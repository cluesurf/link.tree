
load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/account-recovery-setting-type
  take form account-recovery-setting-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/admin-create-user-config-type
  take form admin-create-user-config-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/alias-attributes-list-type
  take form alias-attributes-list-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/arn-type
  take form arn-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/date-type
  take form date-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/device-configuration-type
  take form device-configuration-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/domain-type
  take form domain-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/email-configuration-type
  take form email-configuration-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/email-verification-message-type
  take form email-verification-message-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/email-verification-subject-type
  take form email-verification-subject-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/integer-type
  take form integer-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/lambda-config-type
  take form lambda-config-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/schema-attributes-list-type
  take form schema-attributes-list-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/sms-configuration-type
  take form sms-configuration-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/sms-verification-message-type
  take form sms-verification-message-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/status-type
  take form status-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/string-type
  take form string-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-pool-add-ons-type
  take form user-pool-add-ons-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-pool-id-type
  take form user-pool-id-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-pool-mfa-type
  take form user-pool-mfa-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-pool-name-type
  take form user-pool-name-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-pool-policy-type
  take form user-pool-policy-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-pool-tags-type
  take form user-pool-tags-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/username-attributes-list-type
  take form username-attributes-list-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/username-configuration-type
  take form username-configuration-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/verification-message-template-type
  take form verification-message-template-type

load @textsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/verified-attributes-list-type
  take form verified-attributes-list-type

form user-pool-type, name <UserPoolType>
  note <A container for information about the user pool.>
  take id, name <Id>
    like user-pool-id-type
    void take
    note <The ID of the user pool.>
  take name, name <Name>
    like user-pool-name-type
    void take
    note <The name of the user pool.>
  take policies, name <Policies>
    like user-pool-policy-type
    void take
    note <The policies associated with the user pool.>
  take lambda-config, name <LambdaConfig>
    like lambda-config-type
    void take
    note <The Lambda triggers associated with the user pool.>
  take status, name <Status>
    like status-type
    void take
    note <The status of a user pool.>
  take last-modified-date, name <LastModifiedDate>
    like date-type
    void take
    note <The date the user pool was last modified.>
  take creation-date, name <CreationDate>
    like date-type
    void take
    note <The date the user pool was created.>
  take schema-attributes, name <SchemaAttributes>
    like schema-attributes-list-type
    void take
    note <A container with the schema attributes of a user pool.>
  take auto-verified-attributes, name <AutoVerifiedAttributes>
    like verified-attributes-list-type
    void take
    note <Specifies the attributes that are auto-verified in a user pool.>
  take alias-attributes, name <AliasAttributes>
    like alias-attributes-list-type
    void take
    note <Specifies the attributes that are aliased in a user pool.>
  take username-attributes, name <UsernameAttributes>
    like username-attributes-list-type
    void take
    note <Specifies whether email addresses or phone numbers can be specified as usernames when a user signs up.>
  take sms-verification-message, name <SmsVerificationMessage>
    like sms-verification-message-type
    void take
    note <The contents of the SMS verification message.>
  take email-verification-message, name <EmailVerificationMessage>
    like email-verification-message-type
    void take
    note <The contents of the email verification message.>
  take email-verification-subject, name <EmailVerificationSubject>
    like email-verification-subject-type
    void take
    note <The subject of the email verification message.>
  take verification-message-template, name <VerificationMessageTemplate>
    like verification-message-template-type
    void take
    note <The template for verification messages.>
  take sms-authentication-message, name <SmsAuthenticationMessage>
    like sms-verification-message-type
    void take
    note <The contents of the SMS authentication message.>
  take mfa-configuration, name <MfaConfiguration>
    like user-pool-mfa-type
    void take
    note <Can be one of the following values:

- `OFF` - MFA tokens are not required and cannot be specified during user registration.

- `ON` - MFA tokens are required for all user registrations. You can only specify required when you are initially creating a user pool.

- `OPTIONAL` - Users have the option when registering to create an MFA token.>
  take device-configuration, name <DeviceConfiguration>
    like device-configuration-type
    void take
    note <The device configuration.>
  take estimated-number-of-users, name <EstimatedNumberOfUsers>
    like integer-type
    void take
    note <A number estimating the size of the user pool.>
  take email-configuration, name <EmailConfiguration>
    like email-configuration-type
    void take
    note <The email configuration.>
  take sms-configuration, name <SmsConfiguration>
    like sms-configuration-type
    void take
    note <The SMS configuration.>
  take user-pool-tags, name <UserPoolTags>
    like user-pool-tags-type
    void take
    note <The tags that are assigned to the user pool. A tag is a label that you can apply to user pools to categorize and manage them in different ways, such as by purpose, owner, environment, or other criteria.>
  take sms-configuration-failure, name <SmsConfigurationFailure>
    like string-type
    void take
    note <The reason why the SMS configuration cannot send the messages to your users.

This message might include comma-separated values to describe why your SMS configuration can't send messages to user pool end users.

- InvalidSmsRoleAccessPolicyException - The IAM role which Cognito uses to send SMS messages is not properly configured. For more information, see [SmsConfigurationType](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SmsConfigurationType.html).

- SNSSandbox - The account is in SNS Sandbox and messages won’t reach unverified end users. This parameter won’t get populated with SNSSandbox if the IAM user creating the user pool doesn’t have SNS permissions. To learn how to move your account out of the sandbox, see [Moving out of the SMS sandbox](https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox-moving-to-production.html).>
  take email-configuration-failure, name <EmailConfigurationFailure>
    like string-type
    void take
    note <The reason why the email configuration cannot send the messages to your users.>
  take domain, name <Domain>
    like domain-type
    void take
    note <Holds the domain prefix if the user pool has a domain associated with it.>
  take custom-domain, name <CustomDomain>
    like domain-type
    void take
    note <A custom domain name that you provide to Amazon Cognito. This parameter applies only if you use a custom domain to host the sign-up and sign-in pages for your application. For example: `auth.example.com`.

For more information about adding a custom domain to your user pool, see [Using Your Own Domain for the Hosted UI](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-add-custom-domain.html).>
  take admin-create-user-config, name <AdminCreateUserConfig>
    like admin-create-user-config-type
    void take
    note <The configuration for `AdminCreateUser` requests.>
  take user-pool-add-ons, name <UserPoolAddOns>
    like user-pool-add-ons-type
    void take
    note <The user pool add-ons.>
  take username-configuration, name <UsernameConfiguration>
    like username-configuration-type
    void take
    note <You can choose to enable case sensitivity on the username input for the selected sign-in option. For example, when this is set to `False`, users will be able to sign in using either "username" or "Username". This configuration is immutable once it has been set. For more information, see [UsernameConfigurationType](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UsernameConfigurationType.html).>
  take arn, name <Arn>
    like arn-type
    void take
    note <The Amazon Resource Name (ARN) for the user pool.>
  take account-recovery-setting, name <AccountRecoverySetting>
    like account-recovery-setting-type
    void take
    note <Use this setting to define which verified available method a user can use to recover their password when they call `ForgotPassword`. It allows you to define a preferred method when a user has more than one method available. With this setting, SMS does not qualify for a valid password recovery mechanism if the user also has SMS MFA enabled. In the absence of this setting, Cognito uses the legacy behavior to determine the recovery method where SMS is preferred over email.>