
load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/attribute-name-type
  take form attribute-name-type

load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/client-metadata-type
  take form client-metadata-type

load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/token-model-type
  take form token-model-type

form get-user-attribute-verification-code-request, name <GetUserAttributeVerificationCodeRequest>
  note <Represents the request to get user attribute verification.>
  take access-token, name <AccessToken>
    like token-model-type
    note <The access token returned by the server response to get the user attribute verification code.>
  take attribute-name, name <AttributeName>
    like attribute-name-type
    note <The attribute name returned by the server response to get the user attribute verification code.>
  take client-metadata, name <ClientMetadata>
    like client-metadata-type
    void take
    note <A map of custom key-value pairs that you can provide as input for any custom workflows that this action triggers.

You create custom workflows by assigning Lambda functions to user pool triggers. When you use the GetUserAttributeVerificationCode API action, Amazon Cognito invokes the function that is assigned to the _custom message_ trigger. When Amazon Cognito invokes this function, it passes a JSON payload, which the function receives as input. This payload contains a `clientMetadata` attribute, which provides the data that you assigned to the ClientMetadata parameter in your GetUserAttributeVerificationCode request. In your function code in Lambda, you can process the `clientMetadata` value to enhance your workflow for your specific needs.

For more information, see [Customizing User Pool Workflows with Lambda Triggers](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-working-with-aws-lambda-triggers.html) in the _Amazon Cognito Developer Guide_.

Take the following limitations into consideration when you use the ClientMetadata parameter:

- Amazon Cognito does not store the ClientMetadata value. This data is available only to Lambda triggers that are assigned to a user pool to support custom workflows. If your user pool configuration does not include triggers, the ClientMetadata parameter serves no purpose.

- Amazon Cognito does not validate the ClientMetadata value.

- Amazon Cognito does not encrypt the the ClientMetadata value, so don't use it to provide sensitive information.>