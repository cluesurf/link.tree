
load @treesurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/attribute-data-type
  take form attribute-data-type

load @treesurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/boolean-type
  take form boolean-type

load @treesurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/custom-attribute-name-type
  take form custom-attribute-name-type

load @treesurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/number-attribute-constraints-type
  take form number-attribute-constraints-type

load @treesurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/string-attribute-constraints-type
  take form string-attribute-constraints-type

form schema-attribute-type, name <SchemaAttributeType>
  note <Contains information about the schema attribute.>
  take name, name <Name>
    like custom-attribute-name-type
    void take
    note <A schema attribute of the name type.>
  take attribute-data-type, name <AttributeDataType>
    like attribute-data-type
    void take
    note <The attribute data type.>
  take developer-only-attribute, name <DeveloperOnlyAttribute>
    like boolean-type
    void take
    note <We recommend that you use [WriteAttributes](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_UserPoolClientType.html#CognitoUserPools-Type-UserPoolClientType-WriteAttributes) in the user pool client to control how attributes can be mutated for new use cases instead of using `DeveloperOnlyAttribute`.

Specifies whether the attribute type is developer only. This attribute can only be modified by an administrator. Users will not be able to modify this attribute using their access token. For example, `DeveloperOnlyAttribute` can be modified using AdminUpdateUserAttributes but cannot be updated using UpdateUserAttributes.>
  take mutable, name <Mutable>
    like boolean-type
    void take
    note <Specifies whether the value of the attribute can be changed.

For any user pool attribute that's mapped to an identity provider attribute, you must set this parameter to `true`. Amazon Cognito updates mapped attributes when users sign in to your application through an identity provider. If an attribute is immutable, Amazon Cognito throws an error when it attempts to update the attribute. For more information, see [Specifying Identity Provider Attribute Mappings for Your User Pool](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-pools-specifying-attribute-mapping.html).>
  take required, name <Required>
    like boolean-type
    void take
    note <Specifies whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.>
  take number-attribute-constraints, name <NumberAttributeConstraints>
    like number-attribute-constraints-type
    void take
    note <Specifies the constraints for an attribute of the number type.>
  take string-attribute-constraints, name <StringAttributeConstraints>
    like string-attribute-constraints-type
    void take
    note <Specifies the constraints for an attribute of the string type.>