
load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/admin-reset-user-password-response
  take form admin-reset-user-password-response

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/internal-error-exception
  take form internal-error-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/invalid-email-role-access-policy-exception
  take form invalid-email-role-access-policy-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/invalid-lambda-response-exception
  take form invalid-lambda-response-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/invalid-sms-role-access-policy-exception
  take form invalid-sms-role-access-policy-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/invalid-sms-role-trust-relationship-exception
  take form invalid-sms-role-trust-relationship-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/not-authorized-exception
  take form not-authorized-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/resource-not-found-exception
  take form resource-not-found-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/too-many-requests-exception
  take form too-many-requests-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/unexpected-lambda-exception
  take form unexpected-lambda-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-lambda-validation-exception
  take form user-lambda-validation-exception

load @wavebond/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-not-found-exception
  take form user-not-found-exception

load @wavebond/snow/base/native-string
  take form native-string

boot admin-reset-user-password, name <AdminResetUserPassword>
  deed post
  note <Resets the specified user's password in a user pool as an administrator. Works on any user.

When a developer calls this API, the current password is invalidated, so it must be changed. If a user tries to sign in after the API is called, the app will get a PasswordResetRequiredException exception back and should direct the user down the flow to reset the password, which is the same as the forgot password flow. In addition, if the user pool has phone verification selected and a verified phone number exists for the user, or if email verification is selected and a verified email exists for the user, calling this API will also result in sending a message to the end user with the code to change their password.

This action might generate an SMS text message. Starting June 1, 2021, U.S. telecom carriers require that you register an origination phone number before you can send SMS messages to U.S. phone numbers. If you use SMS text messages in Amazon Cognito, you must register a phone number with [Amazon Pinpoint](https://console.aws.amazon.com/pinpoint/home/). Cognito will use the the registered number automatically. Otherwise, Cognito users that must receive SMS messages might be unable to sign up, activate their accounts, or sign in.

If you have never used SMS text messages with Amazon Cognito or any other Amazon Web Service, Amazon SNS might place your account in SMS sandbox. In _[sandbox mode](https://docs.aws.amazon.com/sns/latest/dg/sns-sms-sandbox.html)_ , youâ€™ll have limitations, such as sending messages to only verified phone numbers. After testing in the sandbox environment, you can move out of the SMS sandbox and into production. For more information, see [SMS message settings for Cognito User Pools](https://docs.aws.amazon.com/cognito/latest/developerguide/cognito-user-identity-pools-sms-userpool-settings.html) in the _Amazon Cognito Developer Guide_.

Calling this action requires developer credentials.>

  take x-amz-target
    like native-string
  take admin-reset-user-password-request, like admin-reset-user-password-request

  line </#X-Amz-Target=AWSCognitoIdentityProviderService.AdminResetUserPassword>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan admin-reset-user-password-request

  loot 200
    seed json, like admin-reset-user-password-response
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 482
    seed json, like unexpected-lambda-exception
    note <UnexpectedLambdaException>
  loot 483
    seed json, like user-lambda-validation-exception
    note <UserLambdaValidationException>
  loot 484
    seed json, like not-authorized-exception
    note <NotAuthorizedException>
  loot 485
    seed json, like invalid-lambda-response-exception
    note <InvalidLambdaResponseException>
  loot 486
    seed json, like too-many-requests-exception
    note <TooManyRequestsException>
  loot 487
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 488
    seed json, like user-not-found-exception
    note <UserNotFoundException>
  loot 489
    seed json, like invalid-sms-role-access-policy-exception
    note <InvalidSmsRoleAccessPolicyException>
  loot 490
    seed json, like invalid-email-role-access-policy-exception
    note <InvalidEmailRoleAccessPolicyException>
  loot 491
    seed json, like invalid-sms-role-trust-relationship-exception
    note <InvalidSmsRoleTrustRelationshipException>
  loot 492
    seed json, like internal-error-exception
    note <InternalErrorException>