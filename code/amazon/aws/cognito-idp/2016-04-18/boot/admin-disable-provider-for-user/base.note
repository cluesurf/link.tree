
load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/admin-disable-provider-for-user-response
  take form admin-disable-provider-for-user-response

load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/alias-exists-exception
  take form alias-exists-exception

load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/internal-error-exception
  take form internal-error-exception

load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/not-authorized-exception
  take form not-authorized-exception

load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/resource-not-found-exception
  take form resource-not-found-exception

load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/too-many-requests-exception
  take form too-many-requests-exception

load @termsurf/snow/amazonaws.com/cognito-idp/2016-04-18/base/user-not-found-exception
  take form user-not-found-exception

load @termsurf/snow/base/native-string
  take form native-string

boot admin-disable-provider-for-user, name <AdminDisableProviderForUser>
  deed post
  note <Disables the user from signing in with the specified external (SAML or social) identity provider. If the user to disable is a Cognito User Pools native username + password user, they are not permitted to use their password to sign-in. If the user to disable is a linked external IdP user, any link between that user and an existing user is removed. The next time the external user (no longer attached to the previously linked `DestinationUser`) signs in, they must create a new user account. See [AdminLinkProviderForUser](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminLinkProviderForUser.html).

This action is enabled only for admin access and requires developer credentials.

The `ProviderName` must match the value specified when creating an IdP for the pool.

To disable a native username + password user, the `ProviderName` value must be `Cognito` and the `ProviderAttributeName` must be `Cognito_Subject`, with the `ProviderAttributeValue` being the name that is used in the user pool for the user.

The `ProviderAttributeName` must always be `Cognito_Subject` for social identity providers. The `ProviderAttributeValue` must always be the exact subject that was used when the user was originally linked as a source user.

For de-linking a SAML identity, there are two scenarios. If the linked identity has not yet been used to sign-in, the `ProviderAttributeName` and `ProviderAttributeValue` must be the same values that were used for the `SourceUser` when the identities were originally linked using `AdminLinkProviderForUser` call. (If the linking was done with `ProviderAttributeName` set to `Cognito_Subject`, the same applies here). However, if the user has already signed in, the `ProviderAttributeName` must be `Cognito_Subject` and `ProviderAttributeValue` must be the subject of the SAML assertion.>

  take x-amz-target
    like native-string
  take admin-disable-provider-for-user-request, like admin-disable-provider-for-user-request

  line </#X-Amz-Target=AWSCognitoIdentityProviderService.AdminDisableProviderForUser>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan admin-disable-provider-for-user-request

  loot 200
    seed json, like admin-disable-provider-for-user-response
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 482
    seed json, like too-many-requests-exception
    note <TooManyRequestsException>
  loot 483
    seed json, like not-authorized-exception
    note <NotAuthorizedException>
  loot 484
    seed json, like user-not-found-exception
    note <UserNotFoundException>
  loot 485
    seed json, like alias-exists-exception
    note <AliasExistsException>
  loot 486
    seed json, like internal-error-exception
    note <InternalErrorException>