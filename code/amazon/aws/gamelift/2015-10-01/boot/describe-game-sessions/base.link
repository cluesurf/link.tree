
load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/describe-game-sessions-output
  take form describe-game-sessions-output

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/internal-service-exception
  take form internal-service-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/invalid-request-exception
  take form invalid-request-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/not-found-exception
  take form not-found-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/terminal-routing-strategy-exception
  take form terminal-routing-strategy-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/unauthorized-exception
  take form unauthorized-exception

load @drumwork/snow/base/native-string
  take form native-string

boot describe-game-sessions, name <DescribeGameSessions>
  note <Retrieves a set of one or more game sessions in a specific fleet location. You can optionally filter the results by current game session status. Alternatively, use SearchGameSessions to request a set of active game sessions that are filtered by certain criteria. To retrieve the protection policy for game sessions, use DescribeGameSessionDetails.

This operation can be used in the following ways:

- To retrieve all game sessions that are currently running on all locations in a fleet, provide a fleet or alias ID, with an optional status filter. This approach returns all game sessions in the fleet's home Region and all remote locations.

- To retrieve all game sessions that are currently running on a specific fleet location, provide a fleet or alias ID and a location name, with optional status filter. The location can be the fleet's home Region or any remote location.

- To retrieve a specific game session, provide the game session ID. This approach looks for the game session ID in all fleets that reside in the AWS Region defined in the request.

Use the pagination parameters to retrieve results as a set of sequential pages.

If successful, a `GameSession` object is returned for each game session that matches the request.

_Available in GameLift Local._

**Learn more** [Find a game session](https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-client-api.html#gamelift-sdk-client-api-find)

**Related actions** CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl | StartGameSessionPlacement | DescribeGameSessionPlacement | StopGameSessionPlacement | [All APIs by task](https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets)>

  take x-amz-target
    like native-string
  take limit
    like native-string
    note <Pagination limit>
    void take
  take next-token
    like native-string
    note <Pagination token>
    void take
  take describe-game-sessions-input, like describe-game-sessions-input

  line </#X-Amz-Target=GameLift.DescribeGameSessions>

  hint <X-Amz-Target>, loan x-amz-target

  find <Limit>, loan limit
  find <NextToken>, loan next-token

  seed json, loan describe-game-sessions-input

  loot 200
    seed json, like describe-game-sessions-output
    note <Success>
  loot 480
    seed json, like internal-service-exception
    note <InternalServiceException>
  loot 481
    seed json, like not-found-exception
    note <NotFoundException>
  loot 482
    seed json, like invalid-request-exception
    note <InvalidRequestException>
  loot 483
    seed json, like unauthorized-exception
    note <UnauthorizedException>
  loot 484
    seed json, like terminal-routing-strategy-exception
    note <TerminalRoutingStrategyException>