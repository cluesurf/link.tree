
load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/conflict-exception
  take form conflict-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/create-game-session-output
  take form create-game-session-output

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/fleet-capacity-exceeded-exception
  take form fleet-capacity-exceeded-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/idempotent-parameter-mismatch-exception
  take form idempotent-parameter-mismatch-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/internal-service-exception
  take form internal-service-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/invalid-fleet-status-exception
  take form invalid-fleet-status-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/invalid-request-exception
  take form invalid-request-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/not-found-exception
  take form not-found-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/terminal-routing-strategy-exception
  take form terminal-routing-strategy-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/unauthorized-exception
  take form unauthorized-exception

load @drumwork/snow/base/native-string
  take form native-string

boot create-game-session, name <CreateGameSession>
  deed post
  note <Creates a multiplayer game session for players in a specific fleet location. This operation prompts an available server process to start a game session and retrieves connection information for the new game session. As an alternative, consider using the GameLift game session placement feature with

with StartGameSessionPlacement, which uses FleetIQ algorithms and queues to optimize the placement process.

When creating a game session, you specify exactly where you want to place it and provide a set of game session configuration settings. The fleet must be in `ACTIVE` status before a game session can be created in it.

This operation can be used in the following ways:

- To create a game session on an instance in a fleet's home Region, provide a fleet or alias ID along with your game session configuration.

- To create a game session on an instance in a fleet's remote location, provide a fleet or alias ID and a location name, along with your game session configuration.

If successful, a workflow is initiated to start a new game session. A `GameSession` object is returned containing the game session configuration and status. When the status is `ACTIVE`, game session connection information is provided and player sessions can be created for the game session. By default, newly created game sessions are open to new players. You can restrict new player access by using UpdateGameSession to change the game session's player session creation policy.

Game session logs are retained for all active game sessions for 14 days. To access the logs, call GetGameSessionLogUrl to download the log files.

_Available in GameLift Local._

**Learn more** [Start a game session](https://docs.aws.amazon.com/gamelift/latest/developerguide/gamelift-sdk-server-api.html#gamelift-sdk-server-startsession)

**Related actions** CreateGameSession | DescribeGameSessions | DescribeGameSessionDetails | SearchGameSessions | UpdateGameSession | GetGameSessionLogUrl | StartGameSessionPlacement | DescribeGameSessionPlacement | StopGameSessionPlacement | [All APIs by task](https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets)>

  take x-amz-target
    like native-string
  take create-game-session-input, like create-game-session-input

  line </#X-Amz-Target=GameLift.CreateGameSession>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-game-session-input

  loot 200
    seed json, like create-game-session-output
    note <Success>
  loot 480
    seed json, like conflict-exception
    note <ConflictException>
  loot 481
    seed json, like internal-service-exception
    note <InternalServiceException>
  loot 482
    seed json, like unauthorized-exception
    note <UnauthorizedException>
  loot 483
    seed json, like invalid-fleet-status-exception
    note <InvalidFleetStatusException>
  loot 484
    seed json, like terminal-routing-strategy-exception
    note <TerminalRoutingStrategyException>
  loot 485
    seed json, like invalid-request-exception
    note <InvalidRequestException>
  loot 486
    seed json, like not-found-exception
    note <NotFoundException>
  loot 487
    seed json, like fleet-capacity-exceeded-exception
    note <FleetCapacityExceededException>
  loot 488
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 489
    seed json, like idempotent-parameter-mismatch-exception
    note <IdempotentParameterMismatchException>