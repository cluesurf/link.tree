
load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/create-vpc-peering-authorization-output
  take form create-vpc-peering-authorization-output

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/internal-service-exception
  take form internal-service-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/invalid-request-exception
  take form invalid-request-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/not-found-exception
  take form not-found-exception

load @drumwork/snow/amazonaws.com/gamelift/2015-10-01/base/unauthorized-exception
  take form unauthorized-exception

load @drumwork/snow/base/native-string
  take form native-string

boot create-vpc-peering-authorization, name <CreateVpcPeeringAuthorization>
  note <Requests authorization to create or delete a peer connection between the VPC for your Amazon GameLift fleet and a virtual private cloud (VPC) in your AWS account. VPC peering enables the game servers on your fleet to communicate directly with other AWS resources. Once you've received authorization, call CreateVpcPeeringConnection to establish the peering connection. For more information, see [VPC Peering with Amazon GameLift Fleets](https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html).

You can peer with VPCs that are owned by any AWS account you have access to, including the account that you use to manage your Amazon GameLift fleets. You cannot peer with VPCs that are in different Regions.

To request authorization to create a connection, call this operation from the AWS account with the VPC that you want to peer to your Amazon GameLift fleet. For example, to enable your game servers to retrieve data from a DynamoDB table, use the account that manages that DynamoDB resource. Identify the following values: (1) The ID of the VPC that you want to peer with, and (2) the ID of the AWS account that you use to manage Amazon GameLift. If successful, VPC peering is authorized for the specified VPC.

To request authorization to delete a connection, call this operation from the AWS account with the VPC that is peered with your Amazon GameLift fleet. Identify the following values: (1) VPC ID that you want to delete the peering connection for, and (2) ID of the AWS account that you use to manage Amazon GameLift.

The authorization remains valid for 24 hours unless it is canceled by a call to DeleteVpcPeeringAuthorization. You must create or delete the peering connection while the authorization is valid.

**Related actions** CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations | DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection | DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | [All APIs by task](https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets)>

  take x-amz-target
    like native-string
  take create-vpc-peering-authorization-input, like create-vpc-peering-authorization-input

  line </#X-Amz-Target=GameLift.CreateVpcPeeringAuthorization>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-vpc-peering-authorization-input

  loot 200
    seed json, like create-vpc-peering-authorization-output
    note <Success>
  loot 480
    seed json, like unauthorized-exception
    note <UnauthorizedException>
  loot 481
    seed json, like invalid-request-exception
    note <InvalidRequestException>
  loot 482
    seed json, like not-found-exception
    note <NotFoundException>
  loot 483
    seed json, like internal-service-exception
    note <InternalServiceException>