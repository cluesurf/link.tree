
load @treesurf/snow/amazonaws.com/gamelift/2015-10-01/base/filter-configuration
  take form filter-configuration

load @treesurf/snow/amazonaws.com/gamelift/2015-10-01/base/game-session-queue-destination-list
  take form game-session-queue-destination-list

load @treesurf/snow/amazonaws.com/gamelift/2015-10-01/base/game-session-queue-name-or-arn
  take form game-session-queue-name-or-arn

load @treesurf/snow/amazonaws.com/gamelift/2015-10-01/base/player-latency-policy-list
  take form player-latency-policy-list

load @treesurf/snow/amazonaws.com/gamelift/2015-10-01/base/priority-configuration
  take form priority-configuration

load @treesurf/snow/amazonaws.com/gamelift/2015-10-01/base/queue-custom-event-data
  take form queue-custom-event-data

load @treesurf/snow/amazonaws.com/gamelift/2015-10-01/base/queue-sns-arn-string-model
  take form queue-sns-arn-string-model

load @treesurf/snow/amazonaws.com/gamelift/2015-10-01/base/whole-number
  take form whole-number

form update-game-session-queue-input, name <UpdateGameSessionQueueInput>
  note <Represents the input for a request operation.>
  take name, name <Name>
    like game-session-queue-name-or-arn
    note <A descriptive label that is associated with game session queue. Queue names must be unique within each Region. You can use either the queue ID or ARN value.>
  take timeout-in-seconds, name <TimeoutInSeconds>
    like whole-number
    void take
    note <The maximum time, in seconds, that a new game session placement request remains in the queue. When a request exceeds this time, the game session placement changes to a `TIMED_OUT` status.>
  take player-latency-policies, name <PlayerLatencyPolicies>
    like player-latency-policy-list
    void take
    note <A set of policies that act as a sliding cap on player latency. FleetIQ works to deliver low latency for most players in a game session. These policies ensure that no individual player can be placed into a game with unreasonably high latency. Use multiple policies to gradually relax latency requirements a step at a time. Multiple policies are applied based on their maximum allowed latency, starting with the lowest value. When updating policies, provide a complete collection of policies.>
  take destinations, name <Destinations>
    like game-session-queue-destination-list
    void take
    note <A list of fleets and/or fleet aliases that can be used to fulfill game session placement requests in the queue. Destinations are identified by either a fleet ARN or a fleet alias ARN, and are listed in order of placement preference. When updating this list, provide a complete list of destinations.>
  take filter-configuration, name <FilterConfiguration>
    like filter-configuration
    void take
    note <A list of locations where a queue is allowed to place new game sessions. Locations are specified in the form of AWS Region codes, such as `us-west-2`. If this parameter is not set, game sessions can be placed in any queue location. To remove an existing filter configuration, pass in an empty set.>
  take priority-configuration, name <PriorityConfiguration>
    like priority-configuration
    void take
    note <Custom settings to use when prioritizing destinations and locations for game session placements. This configuration replaces the FleetIQ default prioritization process. Priority types that are not explicitly named will be automatically applied at the end of the prioritization process. To remove an existing priority configuration, pass in an empty set.>
  take custom-event-data, name <CustomEventData>
    like queue-custom-event-data
    void take
    note <Information to be added to all events that are related to this game session queue.>
  take notification-target, name <NotificationTarget>
    like queue-sns-arn-string-model
    void take
    note <An SNS topic ARN that is set up to receive game session placement notifications. See [Setting up notifications for game session placement](https://docs.aws.amazon.com/gamelift/latest/developerguide/queue-notification.html).>