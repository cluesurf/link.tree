
load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/non-zero-and-max-string
  take form non-zero-and-max-string

load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/operating-system
  take form operating-system

load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/s3-location
  take form s3-location

load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/tag-list
  take form tag-list

form create-build-input, name <CreateBuildInput>
  note <Represents the input for a request operation.>
  take name, name <Name>
    like non-zero-and-max-string
    void take
    note <A descriptive label that is associated with a build. Build names do not need to be unique. You can use UpdateBuild to change this value later.>
  take version, name <Version>
    like non-zero-and-max-string
    void take
    note <Version information that is associated with a build or script. Version strings do not need to be unique. You can use UpdateBuild to change this value later.>
  take storage-location, name <StorageLocation>
    like s3-location
    void take
    note <Information indicating where your game build files are stored. Use this parameter only when creating a build with files stored in an Amazon S3 bucket that you own. The storage location must specify an Amazon S3 bucket name and key. The location must also specify a role ARN that you set up to allow Amazon GameLift to access your Amazon S3 bucket. The S3 bucket and your new build must be in the same Region.>
  take operating-system, name <OperatingSystem>
    like operating-system
    void take
    note <The operating system that the game server binaries are built to run on. This value determines the type of fleet resources that you can use for this build. If your game build contains multiple executables, they all must run on the same operating system. If an operating system is not specified when creating a build, Amazon GameLift uses the default value (WINDOWS_2012). This value cannot be changed later.>
  take tags, name <Tags>
    like tag-list
    void take
    note <A list of labels to assign to the new build resource. Tags are developer-defined key-value pairs. Tagging AWS resources are useful for resource management, access management and cost allocation. For more information, see [Tagging AWS Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html) in the _AWS General Reference_. Once the resource is created, you can use TagResource, UntagResource, and ListTagsForResource to add, remove, and view tags. The maximum tag limit may be lower than stated. See the AWS General Reference for actual tagging limits.>