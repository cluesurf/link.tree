
load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/latency-map
  take form latency-map

load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/non-zero-and-max-string
  take form non-zero-and-max-string

load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/player-attribute-map
  take form player-attribute-map

form player, name <Player>
  note <Represents a player in matchmaking. When starting a matchmaking request, a player has a player ID, attributes, and may have latency data. Team information is added after a match has been successfully completed.>
  take player-id, name <PlayerId>
    like non-zero-and-max-string
    void take
    note <A unique identifier for a player>
  take player-attributes, name <PlayerAttributes>
    like player-attribute-map
    void take
    note <A collection of key:value pairs containing player information for use in matchmaking. Player attribute keys must match the _playerAttributes_ used in a matchmaking rule set. Example: `"PlayerAttributes": {"skill": {"N": "23"}, "gameMode": {"S": "deathmatch"}}`.>
  take team, name <Team>
    like non-zero-and-max-string
    void take
    note <Name of the team that the player is assigned to in a match. Team names are defined in a matchmaking rule set.>
  take latency-in-ms, name <LatencyInMs>
    like latency-map
    void take
    note <A set of values, expressed in milliseconds, that indicates the amount of latency that a player experiences when connected to AWS Regions. If this property is present, FlexMatch considers placing the match only in Regions for which latency is reported.

If a matchmaker has a rule that evaluates player latency, players must report latency in order to be matched. If no latency is reported in this scenario, FlexMatch assumes that no Regions are available to the player and the ticket is not matchable.>