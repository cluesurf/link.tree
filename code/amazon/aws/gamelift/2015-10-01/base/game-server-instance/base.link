
load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/game-server-group-arn
  take form game-server-group-arn

load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/game-server-group-name
  take form game-server-group-name

load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/game-server-instance-id
  take form game-server-instance-id

load @wavebond/snow/amazonaws.com/gamelift/2015-10-01/base/game-server-instance-status
  take form game-server-instance-status

form game-server-instance, name <GameServerInstance>
  note <**This data type is used with the GameLift FleetIQ and game server groups.** Additional properties, including status, that describe an EC2 instance in a game server group. Instance configurations are set with game server group properties (see `DescribeGameServerGroup` and with the EC2 launch template that was used when creating the game server group.

Retrieve game server instances for a game server group by calling `DescribeGameServerInstances`.

**Related actions** CreateGameServerGroup | ListGameServerGroups | DescribeGameServerGroup | UpdateGameServerGroup | DeleteGameServerGroup | ResumeGameServerGroup | SuspendGameServerGroup | DescribeGameServerInstances | [All APIs by task](https://docs.aws.amazon.com/gamelift/latest/fleetiqguide/reference-awssdk-fleetiq.html)>
  take game-server-group-name, name <GameServerGroupName>
    like game-server-group-name
    void take
    note <A developer-defined identifier for the game server group that includes the game server instance. The name is unique for each Region in each AWS account.>
  take game-server-group-arn, name <GameServerGroupArn>
    like game-server-group-arn
    void take
    note <A generated unique identifier for the game server group that includes the game server instance.>
  take instance-id, name <InstanceId>
    like game-server-instance-id
    void take
    note <The unique identifier for the instance where the game server is running. This ID is available in the instance metadata. EC2 instance IDs use a 17-character format, for example: `i-1234567890abcdef0`.>
  take instance-status, name <InstanceStatus>
    like game-server-instance-status
    void take
    note <Current status of the game server instance.

- **ACTIVE** -- The instance is viable for hosting game servers.

- **DRAINING** -- The instance is not viable for hosting game servers. Existing game servers are in the process of ending, and new game servers are not started on this instance unless no other resources are available. When the instance is put in DRAINING, a new instance is started up to replace it. Once the instance has no UTILIZED game servers, it will be terminated in favor of the new instance.

- **SPOT_TERMINATING** -- The instance is in the process of shutting down due to a Spot instance interruption. No new game servers are started on this instance.>