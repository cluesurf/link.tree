
load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/game-session-connection-info
  take form game-session-connection-info

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/matchmaking-configuration-arn
  take form matchmaking-configuration-arn

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/matchmaking-configuration-status
  take form matchmaking-configuration-status

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/matchmaking-id-string-model
  take form matchmaking-id-string-model

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/player-list
  take form player-list

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/string-model
  take form string-model

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/timestamp
  take form timestamp

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/whole-number
  take form whole-number

form matchmaking-ticket, name <MatchmakingTicket>
  note <Ticket generated to track the progress of a matchmaking request. Each ticket is uniquely identified by a ticket ID, supplied by the requester, when creating a matchmaking request with StartMatchmaking. Tickets can be retrieved by calling DescribeMatchmaking with the ticket ID.>
  take ticket-id, name <TicketId>
    like matchmaking-id-string-model
    void take
    note <A unique identifier for a matchmaking ticket.>
  take configuration-name, name <ConfigurationName>
    like matchmaking-id-string-model
    void take
    note <Name of the MatchmakingConfiguration that is used with this ticket. Matchmaking configurations determine how players are grouped into a match and how a new game session is created for the match.>
  take configuration-arn, name <ConfigurationArn>
    like matchmaking-configuration-arn
    void take
    note <The Amazon Resource Name ([ARN](https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html)) associated with the GameLift matchmaking configuration resource that is used with this ticket.>
  take status, name <Status>
    like matchmaking-configuration-status
    void take
    note <Current status of the matchmaking request.

- **QUEUED** -- The matchmaking request has been received and is currently waiting to be processed.

- **SEARCHING** -- The matchmaking request is currently being processed.

- **REQUIRES_ACCEPTANCE** -- A match has been proposed and the players must accept the match (see AcceptMatch). This status is used only with requests that use a matchmaking configuration with a player acceptance requirement.

- **PLACING** -- The FlexMatch engine has matched players and is in the process of placing a new game session for the match.

- **COMPLETED** -- Players have been matched and a game session is ready to host the players. A ticket in this state contains the necessary connection information for players.

- **FAILED** -- The matchmaking request was not completed.

- **CANCELLED** -- The matchmaking request was canceled. This may be the result of a call to StopMatchmaking or a proposed match that one or more players failed to accept.

- **TIMED_OUT** -- The matchmaking request was not successful within the duration specified in the matchmaking configuration.

Matchmaking requests that fail to successfully complete (statuses FAILED, CANCELLED, TIMED_OUT) can be resubmitted as new requests with new ticket IDs.>
  take status-reason, name <StatusReason>
    like string-model
    void take
    note <Code to explain the current status. For example, a status reason may indicate when a ticket has returned to `SEARCHING` status after a proposed match fails to receive player acceptances.>
  take status-message, name <StatusMessage>
    like string-model
    void take
    note <Additional information about the current status.>
  take start-time, name <StartTime>
    like timestamp
    void take
    note <Time stamp indicating when this matchmaking request was received. Format is a number expressed in Unix time as milliseconds (for example `"1469498468.057"`).>
  take end-time, name <EndTime>
    like timestamp
    void take
    note <Time stamp indicating when this matchmaking request stopped being processed due to success, failure, or cancellation. Format is a number expressed in Unix time as milliseconds (for example `"1469498468.057"`).>
  take players, name <Players>
    like player-list
    void take
    note <A set of `Player` objects, each representing a player to find matches for. Players are identified by a unique player ID and may include latency data for use during matchmaking. If the ticket is in status `COMPLETED`, the `Player` objects include the team the players were assigned to in the resulting match.>
  take game-session-connection-info, name <GameSessionConnectionInfo>
    like game-session-connection-info
    void take
    note <Identifier and connection information of the game session created for the match. This information is added to the ticket only after the matchmaking request has been successfully completed. This parameter is not set when FlexMatch is being used without GameLift hosting.>
  take estimated-wait-time, name <EstimatedWaitTime>
    like whole-number
    void take
    note <Average amount of time (in seconds) that players are currently waiting for a match. If there is not enough recent data, this property may be empty.>