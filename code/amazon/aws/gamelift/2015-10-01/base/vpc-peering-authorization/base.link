
load @termsurf/snow/amazonaws.com/gamelift/2015-10-01/base/non-zero-and-max-string
  take form non-zero-and-max-string

load @termsurf/snow/amazonaws.com/gamelift/2015-10-01/base/timestamp
  take form timestamp

form vpc-peering-authorization, name <VpcPeeringAuthorization>
  note <Represents an authorization for a VPC peering connection between the VPC for an Amazon GameLift fleet and another VPC on an account you have access to. This authorization must exist and be valid for the peering connection to be established. Authorizations are valid for 24 hours after they are issued.

**Related actions** CreateVpcPeeringAuthorization | DescribeVpcPeeringAuthorizations | DeleteVpcPeeringAuthorization | CreateVpcPeeringConnection | DescribeVpcPeeringConnections | DeleteVpcPeeringConnection | [All APIs by task](https://docs.aws.amazon.com/gamelift/latest/developerguide/reference-awssdk.html#reference-awssdk-resources-fleets)>
  take game-lift-aws-account-id, name <GameLiftAwsAccountId>
    like non-zero-and-max-string
    void take
    note <A unique identifier for the AWS account that you use to manage your GameLift fleet. You can find your Account ID in the AWS Management Console under account settings.>
  take peer-vpc-aws-account-id, name <PeerVpcAwsAccountId>
    like non-zero-and-max-string
    void take
  take peer-vpc-id, name <PeerVpcId>
    like non-zero-and-max-string
    void take
    note <A unique identifier for a VPC with resources to be accessed by your GameLift fleet. The VPC must be in the same Region as your fleet. To look up a VPC ID, use the [VPC Dashboard](https://console.aws.amazon.com/vpc/) in the AWS Management Console. Learn more about VPC peering in [VPC Peering with GameLift Fleets](https://docs.aws.amazon.com/gamelift/latest/developerguide/vpc-peering.html).>
  take creation-time, name <CreationTime>
    like timestamp
    void take
    note <Time stamp indicating when this authorization was issued. Format is a number expressed in Unix time as milliseconds (for example `"1469498468.057"`).>
  take expiration-time, name <ExpirationTime>
    like timestamp
    void take
    note <Time stamp indicating when this authorization expires (24 hours after issuance). Format is a number expressed in Unix time as milliseconds (for example `"1469498468.057"`).>