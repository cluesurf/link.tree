
load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/dns-name
  take form dns-name

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/ec2-instance-type
  take form ec2-instance-type

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/fleet-arn
  take form fleet-arn

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/fleet-id
  take form fleet-id

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/instance-id
  take form instance-id

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/instance-status
  take form instance-status

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/ip-address
  take form ip-address

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/location-string-model
  take form location-string-model

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/operating-system
  take form operating-system

load @nerdbond/snow/amazonaws.com/gamelift/2015-10-01/base/timestamp
  take form timestamp

form instance, name <Instance>
  note <Represents an EC2 instance of virtual computing resources that hosts one or more game servers. In GameLift, a fleet can contain zero or more instances.

**Related actions** DescribeInstances>
  take fleet-id, name <FleetId>
    like fleet-id
    void take
    note <A unique identifier for the fleet that the instance is in.>
  take fleet-arn, name <FleetArn>
    like fleet-arn
    void take
    note <The Amazon Resource Name ([ARN](https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-arn-format.html)) that is assigned to a GameLift fleet resource and uniquely identifies it. ARNs are unique across all Regions. Format is `arn:aws:gamelift:&lt;region&gt;::fleet/fleet-a1234567-b8c9-0d1e-2fa3-b45c6d7e8912`.>
  take instance-id, name <InstanceId>
    like instance-id
    void take
    note <A unique identifier for the instance.>
  take ip-address, name <IpAddress>
    like ip-address
    void take
    note <IP address that is assigned to the instance.>
  take dns-name, name <DnsName>
    like dns-name
    void take
    note <The DNS identifier assigned to the instance that is running the game session. Values have the following format:

- TLS-enabled fleets: `&lt;unique identifier&gt;.&lt;region identifier&gt;.amazongamelift.com`.

- Non-TLS-enabled fleets: `ec2-&lt;unique identifier&gt;.compute.amazonaws.com`. (See [Amazon EC2 Instance IP Addressing](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses).)

When connecting to a game session that is running on a TLS-enabled fleet, you must use the DNS name, not the IP address.>
  take operating-system, name <OperatingSystem>
    like operating-system
    void take
    note <Operating system that is running on this instance.>
  take type, name <Type>
    like ec2-instance-type
    void take
    note <EC2 instance type that defines the computing resources of this instance.>
  take status, name <Status>
    like instance-status
    void take
    note <Current status of the instance. Possible statuses include the following:

- **PENDING** -- The instance is in the process of being created and launching server processes as defined in the fleet's run-time configuration.

- **ACTIVE** -- The instance has been successfully created and at least one server process has successfully launched and reported back to GameLift that it is ready to host a game session. The instance is now considered ready to host game sessions.

- **TERMINATING** -- The instance is in the process of shutting down. This may happen to reduce capacity during a scaling down event or to recycle resources in the event of a problem.>
  take creation-time, name <CreationTime>
    like timestamp
    void take
    note <A time stamp indicating when this data object was created. Format is a number expressed in Unix time as milliseconds (for example `"1469498468.057"`).>
  take location, name <Location>
    like location-string-model
    void take
    note <The fleet location of the instance, expressed as an AWS Region code, such as `us-west-2`.>