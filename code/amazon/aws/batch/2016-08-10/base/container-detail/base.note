
load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/environment-variables
  take form environment-variables

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/fargate-platform-configuration
  take form fargate-platform-configuration

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/linux-parameters
  take form linux-parameters

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/log-configuration
  take form log-configuration

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/mount-points
  take form mount-points

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/network-configuration
  take form network-configuration

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/network-interface-list
  take form network-interface-list

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/resource-requirements
  take form resource-requirements

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/secret-list
  take form secret-list

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/string-list
  take form string-list

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/ulimits
  take form ulimits

load @termsurf/snow/amazonaws.com/batch/2016-08-10/base/volumes
  take form volumes

load @termsurf/snow/base/boolean
  take form boolean

load @termsurf/snow/base/integer
  take form integer

load @termsurf/snow/base/string
  take form string

form container-detail, name <ContainerDetail>
  note <An object representing the details of a container that's part of a job.>
  take image, name <image>
    like string
    void take
    note <The image used to start the container.>
  take vcpus, name <vcpus>
    like integer
    void take
    note <The number of vCPUs reserved for the container. For jobs that run on EC2 resources, you can specify the vCPU requirement for the job using `resourceRequirements`, but you can't specify the vCPU requirements in both the `vcpus` and `resourceRequirement` object. This parameter maps to `CpuShares` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--cpu-shares` option to [docker run](https://docs.docker.com/engine/reference/run/). Each vCPU is equivalent to 1,024 CPU shares. You must specify at least one vCPU. This is required but can be specified in several places. It must be specified for each node at least once.

This parameter isn't applicable to jobs that run on Fargate resources. For jobs that run on Fargate resources, you must specify the vCPU requirement for the job using `resourceRequirements`.>
  take memory, name <memory>
    like integer
    void take
    note <For jobs run on EC2 resources that didn't specify memory requirements using `ResourceRequirement`, the number of MiB of memory reserved for the job. For other jobs, including all run on Fargate resources, see `resourceRequirements`.>
  take command, name <command>
    like string-list
    void take
    note <The command that's passed to the container.>
  take job-role-arn, name <jobRoleArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) associated with the job upon execution.>
  take execution-role-arn, name <executionRoleArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the execution role that Batch can assume. For more information, see [Batch execution IAM role](https://docs.aws.amazon.com/batch/latest/userguide/execution-IAM-role.html) in the _Batch User Guide_.>
  take volumes, name <volumes>
    like volumes
    void take
    note <A list of volumes associated with the job.>
  take environment, name <environment>
    like environment-variables
    void take
    note <The environment variables to pass to a container.

Environment variables must not start with `AWS_BATCH`; this naming convention is reserved for variables that are set by the Batch service.>
  take mount-points, name <mountPoints>
    like mount-points
    void take
    note <The mount points for data volumes in your container.>
  take readonly-root-filesystem, name <readonlyRootFilesystem>
    like boolean
    void take
    note <When this parameter is true, the container is given read-only access to its root file system. This parameter maps to `ReadonlyRootfs` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--read-only` option to [`docker run`](https://docs.docker.com/engine/reference/commandline/run/) .>
  take ulimits, name <ulimits>
    like ulimits
    void take
    note <A list of `ulimit` values to set in the container. This parameter maps to `Ulimits` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--ulimit` option to [docker run](https://docs.docker.com/engine/reference/run/).

This parameter isn't applicable to jobs that are running on Fargate resources.>
  take privileged, name <privileged>
    like boolean
    void take
    note <When this parameter is true, the container is given elevated permissions on the host container instance (similar to the `root` user). The default value is false.

This parameter isn't applicable to jobs that are running on Fargate resources and shouldn't be provided, or specified as false.>
  take user, name <user>
    like string
    void take
    note <The user name to use inside the container. This parameter maps to `User` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--user` option to [docker run](https://docs.docker.com/engine/reference/run/).>
  take exit-code, name <exitCode>
    like integer
    void take
    note <The exit code to return upon completion.>
  take reason, name <reason>
    like string
    void take
    note <A short (255 max characters) human-readable string to provide additional details about a running or stopped container.>
  take container-instance-arn, name <containerInstanceArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the container instance that the container is running on.>
  take task-arn, name <taskArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the Amazon ECS task that's associated with the container job. Each container attempt receives a task ARN when they reach the `STARTING` status.>
  take log-stream-name, name <logStreamName>
    like string
    void take
    note <The name of the CloudWatch Logs log stream associated with the container. The log group for Batch jobs is `/aws/batch/job`. Each container attempt receives a log stream name when they reach the `RUNNING` status.>
  take instance-type, name <instanceType>
    like string
    void take
    note <The instance type of the underlying host infrastructure of a multi-node parallel job.

This parameter isn't applicable to jobs that are running on Fargate resources.>
  take network-interfaces, name <networkInterfaces>
    like network-interface-list
    void take
    note <The network interfaces associated with the job.>
  take resource-requirements, name <resourceRequirements>
    like resource-requirements
    void take
    note <The type and amount of resources to assign to a container. The supported resources include `GPU`, `MEMORY`, and `VCPU`.>
  take linux-parameters, name <linuxParameters>
    like linux-parameters
    void take
    note <Linux-specific modifications that are applied to the container, such as details for device mappings.>
  take log-configuration, name <logConfiguration>
    like log-configuration
    void take
    note <The log configuration specification for the container.

This parameter maps to `LogConfig` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--log-driver` option to [docker run](https://docs.docker.com/engine/reference/run/). By default, containers use the same logging driver that the Docker daemon uses. However, the container might use a different logging driver than the Docker daemon by specifying a log driver with this parameter in the container definition. To use a different logging driver for a container, the log system must be configured properly on the container instance. Or, alternatively, it must be configured on a different log server for remote logging options. For more information on the options for different supported log drivers, see [Configure logging drivers](https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation.

Batch currently supports a subset of the logging drivers available to the Docker daemon (shown in the LogConfiguration data type). Additional log drivers might be available in future releases of the Amazon ECS container agent.

This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log into your container instance and run the following command: `sudo docker version | grep "Server API version"`

The Amazon ECS container agent running on a container instance must register the logging drivers available on that instance with the `ECS_AVAILABLE_LOGGING_DRIVERS` environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS Container Agent Configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the _Amazon Elastic Container Service Developer Guide_.>
  take secrets, name <secrets>
    like secret-list
    void take
    note <The secrets to pass to the container. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html) in the _Batch User Guide_.>
  take network-configuration, name <networkConfiguration>
    like network-configuration
    void take
    note <The network configuration for jobs that are running on Fargate resources. Jobs that are running on EC2 resources must not specify this parameter.>
  take fargate-platform-configuration, name <fargatePlatformConfiguration>
    like fargate-platform-configuration
    void take
    note <The platform configuration for jobs that are running on Fargate resources. Jobs that are running on EC2 resources must not specify this parameter.>