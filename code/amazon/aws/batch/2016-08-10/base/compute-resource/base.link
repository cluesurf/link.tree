
load @wavebond/snow/amazonaws.com/batch/2016-08-10/base/cr-allocation-strategy
  take form cr-allocation-strategy

load @wavebond/snow/amazonaws.com/batch/2016-08-10/base/cr-type
  take form cr-type

load @wavebond/snow/amazonaws.com/batch/2016-08-10/base/ec2-configuration-list
  take form ec2-configuration-list

load @wavebond/snow/amazonaws.com/batch/2016-08-10/base/launch-template-specification
  take form launch-template-specification

load @wavebond/snow/amazonaws.com/batch/2016-08-10/base/string-list
  take form string-list

load @wavebond/snow/amazonaws.com/batch/2016-08-10/base/tags-map
  take form tags-map

load @wavebond/snow/base/integer
  take form integer

load @wavebond/snow/base/string
  take form string

form compute-resource, name <ComputeResource>
  note <An object representing an Batch compute resource. For more information, see [Compute Environments](https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html) in the _Batch User Guide_.>
  take type, name <type>
    like cr-type
    note <The type of compute environment: `EC2`, `SPOT`, `FARGATE`, or `FARGATE_SPOT`. For more information, see [Compute Environments](https://docs.aws.amazon.com/batch/latest/userguide/compute_environments.html) in the _Batch User Guide_.

If you choose `SPOT`, you must also specify an Amazon EC2 Spot Fleet role with the `spotIamFleetRole` parameter. For more information, see [Amazon EC2 Spot Fleet role](https://docs.aws.amazon.com/batch/latest/userguide/spot_fleet_IAM_role.html) in the _Batch User Guide_.>
  take allocation-strategy, name <allocationStrategy>
    like cr-allocation-strategy
    void take
    note <The allocation strategy to use for the compute resource if not enough instances of the best fitting instance type can be allocated. This might be because of availability of the instance type in the Region or [Amazon EC2 service limits](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html). For more information, see [Allocation Strategies](https://docs.aws.amazon.com/batch/latest/userguide/allocation-strategies.html) in the _Batch User Guide_.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.

BEST_FIT (default)

Batch selects an instance type that best fits the needs of the jobs with a preference for the lowest-cost instance type. If additional instances of the selected instance type aren't available, Batch waits for the additional instances to be available. If there aren't enough instances available, or if the user is reaching [Amazon EC2 service limits](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-resource-limits.html) then additional jobs aren't run until the currently running jobs have completed. This allocation strategy keeps costs lower but can limit scaling. If you are using Spot Fleets with `BEST_FIT` then the Spot Fleet IAM Role must be specified.

BEST_FIT_PROGRESSIVE

Batch will select additional instance types that are large enough to meet the requirements of the jobs in the queue, with a preference for instance types with a lower cost per unit vCPU. If additional instances of the previously selected instance types aren't available, Batch will select new instance types.

SPOT_CAPACITY_OPTIMIZED

Batch will select one or more instance types that are large enough to meet the requirements of the jobs in the queue, with a preference for instance types that are less likely to be interrupted. This allocation strategy is only available for Spot Instance compute resources.

With both `BEST_FIT_PROGRESSIVE` and `SPOT_CAPACITY_OPTIMIZED` strategies, Batch might need to go above `maxvCpus` to meet your capacity requirements. In this event, Batch never exceeds `maxvCpus` by more than a single instance.>
  take minv-cpus, name <minvCpus>
    like integer
    void take
    note <The minimum number of Amazon EC2 vCPUs that an environment should maintain (even if the compute environment is `DISABLED`).

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.>
  take maxv-cpus, name <maxvCpus>
    like integer
    note <The maximum number of Amazon EC2 vCPUs that a compute environment can reach.

With both `BEST_FIT_PROGRESSIVE` and `SPOT_CAPACITY_OPTIMIZED` allocation strategies, Batch might need to exceed `maxvCpus` to meet your capacity requirements. In this event, Batch never exceeds `maxvCpus` by more than a single instance. For example, no more than a single instance from among those specified in your compute environment is allocated.>
  take desiredv-cpus, name <desiredvCpus>
    like integer
    void take
    note <The desired number of Amazon EC2 vCPUS in the compute environment. Batch modifies this value between the minimum and maximum values, based on job queue demand.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.>
  take instance-types, name <instanceTypes>
    like string-list
    void take
    note <The instances types that can be launched. You can specify instance families to launch any instance type within those families (for example, `c5` or `p3`), or you can specify specific sizes within a family (such as `c5.8xlarge`). You can also choose `optimal` to select instance types (from the C4, M4, and R4 instance families) that match the demand of your job queues.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.

When you create a compute environment, the instance types that you select for the compute environment must share the same architecture. For example, you can't mix x86 and ARM instances in the same compute environment.

Currently, `optimal` uses instance types from the C4, M4, and R4 instance families. In Regions that don't have instance types from those instance families, instance types from the C5, M5. and R5 instance families are used.>
  take image-id, name <imageId>
    like string
    void take
    note <The Amazon Machine Image (AMI) ID used for instances launched in the compute environment. This parameter is overridden by the `imageIdOverride` member of the `Ec2Configuration` structure.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.

The AMI that you choose for a compute environment must match the architecture of the instance types that you intend to use for that compute environment. For example, if your compute environment uses A1 instance types, the compute resource AMI that you choose must support ARM instances. Amazon ECS vends both x86 and ARM versions of the Amazon ECS-optimized Amazon Linux 2 AMI. For more information, see [Amazon ECS-optimized Amazon Linux 2 AMI](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html#ecs-optimized-ami-linux-variants.html) in the _Amazon Elastic Container Service Developer Guide_.

This field is deprecated, use ec2Configuration[].imageIdOverride instead.>
  take subnets, name <subnets>
    like string-list
    note <The VPC subnets where the compute resources are launched. These subnets must be within the same VPC. Fargate compute resources can contain up to 16 subnets. For more information, see [VPCs and Subnets](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Subnets.html) in the _Amazon VPC User Guide_.>
  take security-group-ids, name <securityGroupIds>
    like string-list
    void take
    note <The Amazon EC2 security groups associated with instances launched in the compute environment. One or more security groups must be specified, either in `securityGroupIds` or using a launch template referenced in `launchTemplate`. This parameter is required for jobs that are running on Fargate resources and must contain at least one security group. Fargate doesn't support launch templates. If security groups are specified using both `securityGroupIds` and `launchTemplate`, the values in `securityGroupIds` are used.>
  take ec2-key-pair, name <ec2KeyPair>
    like string
    void take
    note <The Amazon EC2 key pair that's used for instances launched in the compute environment. You can use this key pair to log in to your instances with SSH.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.>
  take instance-role, name <instanceRole>
    like string
    void take
    note <The Amazon ECS instance profile applied to Amazon EC2 instances in a compute environment. You can specify the short name or full Amazon Resource Name (ARN) of an instance profile. For example, `_ecsInstanceRole_` or `arn:aws:iam::_&lt;aws_account_id&gt;_:instance-profile/_ecsInstanceRole_` . For more information, see [Amazon ECS Instance Role](https://docs.aws.amazon.com/batch/latest/userguide/instance_IAM_role.html) in the _Batch User Guide_.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.>
  take tags, name <tags>
    like tags-map
    void take
    note <Key-value pair tags to be applied to EC2 resources that are launched in the compute environment. For Batch, these take the form of "String1": "String2", where String1 is the tag key and String2 is the tag valueâˆ’for example, `{ "Name": "Batch Instance - C4OnDemand" }`. This is helpful for recognizing your Batch instances in the Amazon EC2 console. These tags can't be updated or removed after the compute environment is created.Aany changes to these tags require that you create a new compute environment and remove the old compute environment. These tags aren't seen when using the Batch `ListTagsForResource` API operation.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.>
  take placement-group, name <placementGroup>
    like string
    void take
    note <The Amazon EC2 placement group to associate with your compute resources. If you intend to submit multi-node parallel jobs to your compute environment, you should consider creating a cluster placement group and associate it with your compute resources. This keeps your multi-node parallel job on a logical grouping of instances within a single Availability Zone with high network flow potential. For more information, see [Placement Groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the _Amazon EC2 User Guide for Linux Instances_.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.>
  take bid-percentage, name <bidPercentage>
    like integer
    void take
    note <The maximum percentage that a Spot Instance price can be when compared with the On-Demand price for that instance type before instances are launched. For example, if your maximum percentage is 20%, then the Spot price must be less than 20% of the current On-Demand price for that Amazon EC2 instance. You always pay the lowest (market) price and never more than your maximum percentage. If you leave this field empty, the default value is 100% of the On-Demand price.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.>
  take spot-iam-fleet-role, name <spotIamFleetRole>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the Amazon EC2 Spot Fleet IAM role applied to a `SPOT` compute environment. This role is required if the allocation strategy set to `BEST_FIT` or if the allocation strategy isn't specified. For more information, see [Amazon EC2 Spot Fleet Role](https://docs.aws.amazon.com/batch/latest/userguide/spot_fleet_IAM_role.html) in the _Batch User Guide_.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.

To tag your Spot Instances on creation, the Spot Fleet IAM role specified here must use the newer **AmazonEC2SpotFleetTaggingRole** managed policy. The previously recommended **AmazonEC2SpotFleetRole** managed policy doesn't have the required permissions to tag Spot Instances. For more information, see [Spot Instances not tagged on creation](https://docs.aws.amazon.com/batch/latest/userguide/troubleshooting.html#spot-instance-no-tag) in the _Batch User Guide_.>
  take launch-template, name <launchTemplate>
    like launch-template-specification
    void take
    note <The launch template to use for your compute resources. Any other compute resource parameters that you specify in a CreateComputeEnvironment API operation override the same parameters in the launch template. You must specify either the launch template ID or launch template name in the request, but not both. For more information, see [Launch Template Support](https://docs.aws.amazon.com/batch/latest/userguide/launch-templates.html) in the _Batch User Guide_.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.>
  take ec2-configuration, name <ec2Configuration>
    like ec2-configuration-list
    void take
    note <Provides information used to select Amazon Machine Images (AMIs) for EC2 instances in the compute environment. If `Ec2Configuration` isn't specified, the default is `ECS_AL1`.

This parameter isn't applicable to jobs that are running on Fargate resources, and shouldn't be specified.>