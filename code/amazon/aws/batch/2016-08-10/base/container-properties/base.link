
load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/environment-variables
  take form environment-variables

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/fargate-platform-configuration
  take form fargate-platform-configuration

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/linux-parameters
  take form linux-parameters

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/log-configuration
  take form log-configuration

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/mount-points
  take form mount-points

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/network-configuration
  take form network-configuration

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/resource-requirements
  take form resource-requirements

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/secret-list
  take form secret-list

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/string-list
  take form string-list

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/ulimits
  take form ulimits

load @drumwork/snow/amazonaws.com/batch/2016-08-10/base/volumes
  take form volumes

load @drumwork/snow/base/boolean
  take form boolean

load @drumwork/snow/base/integer
  take form integer

load @drumwork/snow/base/string
  take form string

form container-properties, name <ContainerProperties>
  note <Container properties are used in job definitions to describe the container that's launched as part of a job.>
  take image, name <image>
    like string
    void take
    note <The image used to start a container. This string is passed directly to the Docker daemon. Images in the Docker Hub registry are available by default. Other repositories are specified with `_repository-url_/_image_:_tag_` . Up to 255 letters (uppercase and lowercase), numbers, hyphens, underscores, colons, periods, forward slashes, and number signs are allowed. This parameter maps to `Image` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `IMAGE` parameter of [docker run](https://docs.docker.com/engine/reference/run/).

Docker image architecture must match the processor architecture of the compute resources that they're scheduled on. For example, ARM-based Docker images can only run on ARM-based compute resources.

- Images in Amazon ECR repositories use the full registry and repository URI (for example, `012345678910.dkr.ecr.&lt;region-name&gt;.amazonaws.com/&lt;repository-name&gt;`).

- Images in official repositories on Docker Hub use a single name (for example, `ubuntu` or `mongo`).

- Images in other repositories on Docker Hub are qualified with an organization name (for example, `amazon/amazon-ecs-agent`).

- Images in other online repositories are qualified further by a domain name (for example, `quay.io/assemblyline/ubuntu`).>
  take vcpus, name <vcpus>
    like integer
    void take
    note <The number of vCPUs reserved for the job. Each vCPU is equivalent to 1,024 CPU shares. This parameter maps to `CpuShares` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--cpu-shares` option to [docker run](https://docs.docker.com/engine/reference/run/). The number of vCPUs must be specified but can be specified in several places. You must specify it at least once for each node.

This parameter is supported on EC2 resources but isn't supported for jobs that run on Fargate resources. For these resources, use `resourceRequirement` instead. You can use this parameter or `resourceRequirements` structure but not both.

This parameter isn't applicable to jobs that are running on Fargate resources and shouldn't be provided. For jobs that run on Fargate resources, you must specify the vCPU requirement for the job using `resourceRequirements`.

This field is deprecated, use resourceRequirements instead.>
  take memory, name <memory>
    like integer
    void take
    note <This parameter indicates the memory hard limit (in MiB) for a container. If your container attempts to exceed the specified number, it's terminated. You must specify at least 4 MiB of memory for a job using this parameter. The memory hard limit can be specified in several places. It must be specified for each node at least once.

This parameter maps to `Memory` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--memory` option to [docker run](https://docs.docker.com/engine/reference/run/).

This parameter is supported on EC2 resources but isn't supported on Fargate resources. For Fargate resources, you should specify the memory requirement using `resourceRequirement`. You can also do this for EC2 resources.

If you're trying to maximize your resource utilization by providing your jobs as much memory as possible for a particular instance type, see [Memory Management](https://docs.aws.amazon.com/batch/latest/userguide/memory-management.html) in the _Batch User Guide_.

This field is deprecated, use resourceRequirements instead.>
  take command, name <command>
    like string-list
    void take
    note <The command that's passed to the container. This parameter maps to `Cmd` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `COMMAND` parameter to [docker run](https://docs.docker.com/engine/reference/run/). For more information, see [https://docs.docker.com/engine/reference/builder/#cmd](https://docs.docker.com/engine/reference/builder/#cmd).>
  take job-role-arn, name <jobRoleArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the IAM role that the container can assume for Amazon Web Services permissions. For more information, see [IAM Roles for Tasks](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-iam-roles.html) in the _Amazon Elastic Container Service Developer Guide_.>
  take execution-role-arn, name <executionRoleArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the execution role that Batch can assume. For jobs that run on Fargate resources, you must provide an execution role. For more information, see [Batch execution IAM role](https://docs.aws.amazon.com/batch/latest/userguide/execution-IAM-role.html) in the _Batch User Guide_.>
  take volumes, name <volumes>
    like volumes
    void take
    note <A list of data volumes used in a job.>
  take environment, name <environment>
    like environment-variables
    void take
    note <The environment variables to pass to a container. This parameter maps to `Env` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--env` option to [docker run](https://docs.docker.com/engine/reference/run/).

We don't recommend using plaintext environment variables for sensitive information, such as credential data.

Environment variables must not start with `AWS_BATCH`; this naming convention is reserved for variables that are set by the Batch service.>
  take mount-points, name <mountPoints>
    like mount-points
    void take
    note <The mount points for data volumes in your container. This parameter maps to `Volumes` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--volume` option to [docker run](https://docs.docker.com/engine/reference/run/).>
  take readonly-root-filesystem, name <readonlyRootFilesystem>
    like boolean
    void take
    note <When this parameter is true, the container is given read-only access to its root file system. This parameter maps to `ReadonlyRootfs` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--read-only` option to `docker run`.>
  take privileged, name <privileged>
    like boolean
    void take
    note <When this parameter is true, the container is given elevated permissions on the host container instance (similar to the `root` user). This parameter maps to `Privileged` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--privileged` option to [docker run](https://docs.docker.com/engine/reference/run/). The default value is false.

This parameter isn't applicable to jobs that are running on Fargate resources and shouldn't be provided, or specified as false.>
  take ulimits, name <ulimits>
    like ulimits
    void take
    note <A list of `ulimits` to set in the container. This parameter maps to `Ulimits` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--ulimit` option to [docker run](https://docs.docker.com/engine/reference/run/).

This parameter isn't applicable to jobs that are running on Fargate resources and shouldn't be provided.>
  take user, name <user>
    like string
    void take
    note <The user name to use inside the container. This parameter maps to `User` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--user` option to [docker run](https://docs.docker.com/engine/reference/run/).>
  take instance-type, name <instanceType>
    like string
    void take
    note <The instance type to use for a multi-node parallel job. All node groups in a multi-node parallel job must use the same instance type.

This parameter isn't applicable to single-node container jobs or jobs that run on Fargate resources, and shouldn't be provided.>
  take resource-requirements, name <resourceRequirements>
    like resource-requirements
    void take
    note <The type and amount of resources to assign to a container. The supported resources include `GPU`, `MEMORY`, and `VCPU`.>
  take linux-parameters, name <linuxParameters>
    like linux-parameters
    void take
    note <Linux-specific modifications that are applied to the container, such as details for device mappings.>
  take log-configuration, name <logConfiguration>
    like log-configuration
    void take
    note <The log configuration specification for the container.

This parameter maps to `LogConfig` in the [Create a container](https://docs.docker.com/engine/api/v1.23/#create-a-container) section of the [Docker Remote API](https://docs.docker.com/engine/api/v1.23/) and the `--log-driver` option to [docker run](https://docs.docker.com/engine/reference/run/). By default, containers use the same logging driver that the Docker daemon uses. However the container might use a different logging driver than the Docker daemon by specifying a log driver with this parameter in the container definition. To use a different logging driver for a container, the log system must be configured properly on the container instance (or on a different log server for remote logging options). For more information on the options for different supported log drivers, see [Configure logging drivers](https://docs.docker.com/engine/admin/logging/overview/) in the Docker documentation.

Batch currently supports a subset of the logging drivers available to the Docker daemon (shown in the LogConfiguration data type).

This parameter requires version 1.18 of the Docker Remote API or greater on your container instance. To check the Docker Remote API version on your container instance, log into your container instance and run the following command: `sudo docker version | grep "Server API version"`

The Amazon ECS container agent running on a container instance must register the logging drivers available on that instance with the `ECS_AVAILABLE_LOGGING_DRIVERS` environment variable before containers placed on that instance can use these log configuration options. For more information, see [Amazon ECS Container Agent Configuration](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-agent-config.html) in the _Amazon Elastic Container Service Developer Guide_.>
  take secrets, name <secrets>
    like secret-list
    void take
    note <The secrets for the container. For more information, see [Specifying sensitive data](https://docs.aws.amazon.com/batch/latest/userguide/specifying-sensitive-data.html) in the _Batch User Guide_.>
  take network-configuration, name <networkConfiguration>
    like network-configuration
    void take
    note <The network configuration for jobs that are running on Fargate resources. Jobs that are running on EC2 resources must not specify this parameter.>
  take fargate-platform-configuration, name <fargatePlatformConfiguration>
    like fargate-platform-configuration
    void take
    note <The platform configuration for jobs that are running on Fargate resources. Jobs that are running on EC2 resources must not specify this parameter.>