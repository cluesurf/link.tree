
load @tunebond/snow/amazonaws.com/batch/2016-08-10/base/container-properties
  take form container-properties

load @tunebond/snow/amazonaws.com/batch/2016-08-10/base/job-definition-type
  take form job-definition-type

load @tunebond/snow/amazonaws.com/batch/2016-08-10/base/job-timeout
  take form job-timeout

load @tunebond/snow/amazonaws.com/batch/2016-08-10/base/node-properties
  take form node-properties

load @tunebond/snow/amazonaws.com/batch/2016-08-10/base/parameters-map
  take form parameters-map

load @tunebond/snow/amazonaws.com/batch/2016-08-10/base/platform-capability-list
  take form platform-capability-list

load @tunebond/snow/amazonaws.com/batch/2016-08-10/base/retry-strategy
  take form retry-strategy

load @tunebond/snow/amazonaws.com/batch/2016-08-10/base/tagris-tags-map
  take form tagris-tags-map

load @tunebond/snow/base/boolean
  take form boolean

load @tunebond/snow/base/string
  take form string

form register-job-definition-request, name <RegisterJobDefinitionRequest>
  note <Contains the parameters for `RegisterJobDefinition`.>
  take job-definition-name, name <jobDefinitionName>
    like string
    note <The name of the job definition to register. Up to 128 letters (uppercase and lowercase), numbers, hyphens, and underscores are allowed.>
  take type, name <type>
    like job-definition-type
    note <The type of job definition. For more information about multi-node parallel jobs, see [Creating a multi-node parallel job definition](https://docs.aws.amazon.com/batch/latest/userguide/multi-node-job-def.html) in the _Batch User Guide_.

If the job is run on Fargate resources, then `multinode` isn't supported.>
  take parameters, name <parameters>
    like parameters-map
    void take
    note <Default parameter substitution placeholders to set in the job definition. Parameters are specified as a key-value pair mapping. Parameters in a `SubmitJob` request override any corresponding parameter defaults from the job definition.>
  take container-properties, name <containerProperties>
    like container-properties
    void take
    note <An object with various properties specific to single-node container-based jobs. If the job definition's `type` parameter is `container`, then you must specify either `containerProperties` or `nodeProperties`.

If the job runs on Fargate resources, then you must not specify `nodeProperties`; use only `containerProperties`.>
  take node-properties, name <nodeProperties>
    like node-properties
    void take
    note <An object with various properties specific to multi-node parallel jobs. If you specify node properties for a job, it becomes a multi-node parallel job. For more information, see [Multi-node Parallel Jobs](https://docs.aws.amazon.com/batch/latest/userguide/multi-node-parallel-jobs.html) in the _Batch User Guide_. If the job definition's `type` parameter is `container`, then you must specify either `containerProperties` or `nodeProperties`.

If the job runs on Fargate resources, then you must not specify `nodeProperties`; use `containerProperties` instead.>
  take retry-strategy, name <retryStrategy>
    like retry-strategy
    void take
    note <The retry strategy to use for failed jobs that are submitted with this job definition. Any retry strategy that's specified during a SubmitJob operation overrides the retry strategy defined here. If a job is terminated due to a timeout, it isn't retried.>
  take propagate-tags, name <propagateTags>
    like boolean
    void take
    note <Specifies whether to propagate the tags from the job or job definition to the corresponding Amazon ECS task. If no value is specified, the tags are not propagated. Tags can only be propagated to the tasks during task creation. For tags with the same name, job tags are given priority over job definitions tags. If the total number of combined tags from the job and job definition is over 50, the job is moved to the `FAILED` state.>
  take timeout, name <timeout>
    like job-timeout
    void take
    note <The timeout configuration for jobs that are submitted with this job definition, after which Batch terminates your jobs if they have not finished. If a job is terminated due to a timeout, it isn't retried. The minimum value for the timeout is 60 seconds. Any timeout configuration that's specified during a SubmitJob operation overrides the timeout configuration defined here. For more information, see [Job Timeouts](https://docs.aws.amazon.com/batch/latest/userguide/job_timeouts.html) in the _Batch User Guide_.>
  take tags, name <tags>
    like tagris-tags-map
    void take
    note <The tags that you apply to the job definition to help you categorize and organize your resources. Each tag consists of a key and an optional value. For more information, see [Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/batch/latest/userguide/using-tags.html) in _Batch User Guide_.>
  take platform-capabilities, name <platformCapabilities>
    like platform-capability-list
    void take
    note <The platform capabilities required by the job definition. If no value is specified, it defaults to `EC2`. To run the job on Fargate resources, specify `FARGATE`.>