
load @wavebond/snow/amazonaws.com/mediapackage-vod/2018-11-07/base/cmaf-encryption
  take form cmaf-encryption

load @wavebond/snow/amazonaws.com/mediapackage-vod/2018-11-07/base/dash-encryption
  take form dash-encryption

load @wavebond/snow/amazonaws.com/mediapackage-vod/2018-11-07/base/hls-encryption
  take form hls-encryption

load @wavebond/snow/amazonaws.com/mediapackage-vod/2018-11-07/base/list-of-dash-manifest
  take form list-of-dash-manifest

load @wavebond/snow/amazonaws.com/mediapackage-vod/2018-11-07/base/list-of-hls-manifest
  take form list-of-hls-manifest

load @wavebond/snow/amazonaws.com/mediapackage-vod/2018-11-07/base/list-of-mss-manifest
  take form list-of-mss-manifest

load @wavebond/snow/amazonaws.com/mediapackage-vod/2018-11-07/base/list-of-period-triggers-element
  take form list-of-period-triggers-element

load @wavebond/snow/amazonaws.com/mediapackage-vod/2018-11-07/base/mss-encryption
  take form mss-encryption

load @wavebond/snow/amazonaws.com/mediapackage-vod/2018-11-07/base/segment-template-format
  take form segment-template-format

load @wavebond/snow/base/boolean
  take form boolean

load @wavebond/snow/base/integer
  take form integer

form create-packaging-configuration-body
  take cmaf-package, name <cmafPackage>
    like form
      take encryption, name <Encryption>
        like cmaf-encryption
        void take
        host xml
          host name, text <encryption>
      take hls-manifests, name <HlsManifests>
        like list-of-hls-manifest
        void take
        note <A list of HLS manifest configurations.>
        host xml
          host name, text <hlsManifests>
      take include-encoder-configuration-in-segments, name <IncludeEncoderConfigurationInSegments>
        like boolean
        void take
        note <When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.>
        host xml
          host name, text <includeEncoderConfigurationInSegments>
      take segment-duration-seconds, name <SegmentDurationSeconds>
        like integer
        void take
        note <Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.>
        host xml
          host name, text <segmentDurationSeconds>
    void take
  take dash-package, name <dashPackage>
    like form
      take dash-manifests, name <DashManifests>
        like list-of-dash-manifest
        void take
        note <A list of DASH manifest configurations.>
        host xml
          host name, text <dashManifests>
      take encryption, name <Encryption>
        like dash-encryption
        void take
        host xml
          host name, text <encryption>
      take include-encoder-configuration-in-segments, name <IncludeEncoderConfigurationInSegments>
        like boolean
        void take
        note <When includeEncoderConfigurationInSegments is set to true, MediaPackage places your encoder's Sequence Parameter Set (SPS), Picture Parameter Set (PPS), and Video Parameter Set (VPS) metadata in every video segment instead of in the init fragment. This lets you use different SPS/PPS/VPS settings for your assets during content playback.>
        host xml
          host name, text <includeEncoderConfigurationInSegments>
      take period-triggers, name <PeriodTriggers>
        like list-of-period-triggers-element
        void take
        note <A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Asset contains SCTE-35 ad markers.>
        host xml
          host name, text <periodTriggers>
      take segment-duration-seconds, name <SegmentDurationSeconds>
        like integer
        void take
        note <Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.>
        host xml
          host name, text <segmentDurationSeconds>
      take segment-template-format, name <SegmentTemplateFormat>
        like segment-template-format
        void take
        note <Determines the type of SegmentTemplate included in the Media Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs. When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.>
        host xml
          host name, text <segmentTemplateFormat>
    void take
  take hls-package, name <hlsPackage>
    like form
      take encryption, name <Encryption>
        like hls-encryption
        void take
        host xml
          host name, text <encryption>
      take hls-manifests, name <HlsManifests>
        like list-of-hls-manifest
        void take
        note <A list of HLS manifest configurations.>
        host xml
          host name, text <hlsManifests>
      take segment-duration-seconds, name <SegmentDurationSeconds>
        like integer
        void take
        note <Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.>
        host xml
          host name, text <segmentDurationSeconds>
      take use-audio-rendition-group, name <UseAudioRenditionGroup>
        like boolean
        void take
        note <When enabled, audio streams will be placed in rendition groups in the output.>
        host xml
          host name, text <useAudioRenditionGroup>
    void take
  take id, name <id>
  take mss-package, name <mssPackage>
    like form
      take encryption, name <Encryption>
        like mss-encryption
        void take
        host xml
          host name, text <encryption>
      take mss-manifests, name <MssManifests>
        like list-of-mss-manifest
        void take
        note <A list of MSS manifest configurations.>
        host xml
          host name, text <mssManifests>
      take segment-duration-seconds, name <SegmentDurationSeconds>
        like integer
        void take
        note <The duration (in seconds) of each segment.>
        host xml
          host name, text <segmentDurationSeconds>
    void take
  take packaging-group-id, name <packagingGroupId>
  take tags, name <tags>
    void take
