
load @wavebond/snow/amazonaws.com/opsworkscm/2016-11-01/base/custom-domain
  take form custom-domain

load @wavebond/snow/amazonaws.com/opsworkscm/2016-11-01/base/engine-attributes
  take form engine-attributes

load @wavebond/snow/amazonaws.com/opsworkscm/2016-11-01/base/maintenance-status
  take form maintenance-status

load @wavebond/snow/amazonaws.com/opsworkscm/2016-11-01/base/server-status
  take form server-status

load @wavebond/snow/amazonaws.com/opsworkscm/2016-11-01/base/strings
  take form strings

load @wavebond/snow/amazonaws.com/opsworkscm/2016-11-01/base/time-window-definition
  take form time-window-definition

load @wavebond/snow/amazonaws.com/opsworkscm/2016-11-01/base/timestamp
  take form timestamp

load @wavebond/snow/base/boolean
  take form boolean

load @wavebond/snow/base/integer
  take form integer

load @wavebond/snow/base/string
  take form string

form server, name <Server>
  note <Describes a configuration management server.>
  take associate-public-ip-address, name <AssociatePublicIpAddress>
    like boolean
    void take
    note <Associate a public IP address with a server that you are launching.>
  take backup-retention-count, name <BackupRetentionCount>
    like integer
    void take
    note <The number of automated backups to keep.>
  take server-name, name <ServerName>
    like string
    void take
    note <The name of the server.>
  take created-at, name <CreatedAt>
    like timestamp
    void take
    note <Time stamp of server creation. Example `2016-07-29T13:38:47.520Z`>
  take cloud-formation-stack-arn, name <CloudFormationStackArn>
    like string
    void take
    note <The ARN of the CloudFormation stack that was used to create the server.>
  take custom-domain, name <CustomDomain>
    like custom-domain
    void take
    note <An optional public endpoint of a server, such as `https://aws.my-company.com`. You cannot access the server by using the `Endpoint` value if the server has a `CustomDomain` specified.>
  take disable-automated-backup, name <DisableAutomatedBackup>
    like boolean
    void take
    note <Disables automated backups. The number of stored backups is dependent on the value of PreferredBackupCount.>
  take endpoint, name <Endpoint>
    like string
    void take
    note <A DNS name that can be used to access the engine. Example: `myserver-asdfghjkl.us-east-1.opsworks.io`. You cannot access the server by using the `Endpoint` value if the server has a `CustomDomain` specified.>
  take engine, name <Engine>
    like string
    void take
    note <The engine type of the server. Valid values in this release include `ChefAutomate` and `Puppet`.>
  take engine-model, name <EngineModel>
    like string
    void take
    note <The engine model of the server. Valid values in this release include `Monolithic` for Puppet and `Single` for Chef.>
  take engine-attributes, name <EngineAttributes>
    like engine-attributes
    void take
    note <The response of a createServer() request returns the master credential to access the server in EngineAttributes. These credentials are not stored by AWS OpsWorks CM; they are returned only as part of the result of createServer().

**Attributes returned in a createServer response for Chef** - `CHEF_AUTOMATE_PIVOTAL_KEY`: A base64-encoded RSA private key that is generated by AWS OpsWorks for Chef Automate. This private key is required to access the Chef API.

- `CHEF_STARTER_KIT`: A base64-encoded ZIP file. The ZIP file contains a Chef starter kit, which includes a README, a configuration file, and the required RSA private key. Save this file, unzip it, and then change to the directory where you've unzipped the file contents. From this directory, you can run Knife commands.

**Attributes returned in a createServer response for Puppet** - `PUPPET_STARTER_KIT`: A base64-encoded ZIP file. The ZIP file contains a Puppet starter kit, including a README and a required private key. Save this file, unzip it, and then change to the directory where you've unzipped the file contents.

- `PUPPET_ADMIN_PASSWORD`: An administrator password that you can use to sign in to the Puppet Enterprise console after the server is online.>
  take engine-version, name <EngineVersion>
    like string
    void take
    note <The engine version of the server. For a Chef server, the valid value for EngineVersion is currently `2`. For a Puppet server, specify either `2019` or `2017`.>
  take instance-profile-arn, name <InstanceProfileArn>
    like string
    void take
    note <The instance profile ARN of the server.>
  take instance-type, name <InstanceType>
    like string
    void take
    note <The instance type for the server, as specified in the CloudFormation stack. This might not be the same instance type that is shown in the EC2 console.>
  take key-pair, name <KeyPair>
    like string
    void take
    note <The key pair associated with the server.>
  take maintenance-status, name <MaintenanceStatus>
    like maintenance-status
    void take
    note <The status of the most recent server maintenance run. Shows `SUCCESS` or `FAILED`.>
  take preferred-maintenance-window, name <PreferredMaintenanceWindow>
    like time-window-definition
    void take
    note <The preferred maintenance period specified for the server.>
  take preferred-backup-window, name <PreferredBackupWindow>
    like time-window-definition
    void take
    note <The preferred backup period specified for the server.>
  take security-group-ids, name <SecurityGroupIds>
    like strings
    void take
    note <The security group IDs for the server, as specified in the CloudFormation stack. These might not be the same security groups that are shown in the EC2 console.>
  take service-role-arn, name <ServiceRoleArn>
    like string
    void take
    note <The service role ARN used to create the server.>
  take status, name <Status>
    like server-status
    void take
    note <The server's status. This field displays the states of actions in progress, such as creating, running, or backing up the server, as well as the server's health state.>
  take status-reason, name <StatusReason>
    like string
    void take
    note <Depending on the server status, this field has either a human-readable message (such as a create or backup error), or an escaped block of JSON (used for health check results).>
  take subnet-ids, name <SubnetIds>
    like strings
    void take
    note <The subnet IDs specified in a CreateServer request.>
  take server-arn, name <ServerArn>
    like string
    void take
    note <The ARN of the server.>