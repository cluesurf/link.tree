
load @textsurf/snow/amazonaws.com/organizations/2016-11-28/base/access-denied-exception
  take form access-denied-exception

load @textsurf/snow/amazonaws.com/organizations/2016-11-28/base/aws-organizations-not-in-use-exception
  take form aws-organizations-not-in-use-exception

load @textsurf/snow/amazonaws.com/organizations/2016-11-28/base/concurrent-modification-exception
  take form concurrent-modification-exception

load @textsurf/snow/amazonaws.com/organizations/2016-11-28/base/constraint-violation-exception
  take form constraint-violation-exception

load @textsurf/snow/amazonaws.com/organizations/2016-11-28/base/invalid-input-exception
  take form invalid-input-exception

load @textsurf/snow/amazonaws.com/organizations/2016-11-28/base/service-exception
  take form service-exception

load @textsurf/snow/amazonaws.com/organizations/2016-11-28/base/too-many-requests-exception
  take form too-many-requests-exception

load @textsurf/snow/amazonaws.com/organizations/2016-11-28/base/unsupported-api-endpoint-exception
  take form unsupported-api-endpoint-exception

load @textsurf/snow/base/native-string
  take form native-string

boot disable-aws-service-access, name <DisableAWSServiceAccess>
  deed post
  note <Disables the integration of an AWS service (the service that is specified by `ServicePrincipal`) with AWS Organizations. When you disable integration, the specified service no longer can create a [service-linked role](http://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html) in _new_ accounts in your organization. This means the service can't perform operations on your behalf on any new accounts in your organization. The service can still perform operations in older accounts until the service completes its clean-up from AWS Organizations.

We **_strongly recommend_** that you don't use this command to disable integration between AWS Organizations and the specified AWS service. Instead, use the console or commands that are provided by the specified service. This lets the trusted service perform any required initialization when enabling trusted access, such as creating any required resources and any required clean up of resources when disabling trusted access.

For information about how to disable trusted service access to your organization using the trusted service, see the **Learn more** link under the **Supports Trusted Access** column at [AWS services that you can use with AWS Organizations](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services_list.html). on this page.

If you disable access by using this command, it causes the following actions to occur:

- The service can no longer create a service-linked role in the accounts in your organization. This means that the service can't perform operations on your behalf on any new accounts in your organization. The service can still perform operations in older accounts until the service completes its clean-up from AWS Organizations.

- The service can no longer perform tasks in the member accounts in the organization, unless those operations are explicitly permitted by the IAM policies that are attached to your roles. This includes any data aggregation from the member accounts to the management account, or to a delegated administrator account, where relevant.

- Some services detect this and clean up any remaining data or resources related to the integration, while other services stop accessing the organization but leave any historical data and configuration in place to support a possible re-enabling of the integration.

Using the other service's console or commands to disable the integration ensures that the other service is aware that it can clean up any resources that are required only for the integration. How the service cleans up its resources in the organization's accounts depends on that service. For more information, see the documentation for the other AWS service.

After you perform the `DisableAWSServiceAccess` operation, the specified service can no longer perform operations in your organization's accounts

For more information about integrating other services with AWS Organizations, including the list of services that work with Organizations, see [Integrating AWS Organizations with Other AWS Services](http://docs.aws.amazon.com/organizations/latest/userguide/orgs_integrate_services.html) in the _AWS Organizations User Guide._

This operation can be called only from the organization's management account.>

  take x-amz-target
    like native-string
  take disable-aws-service-access-request, like disable-aws-service-access-request

  line </#X-Amz-Target=AWSOrganizationsV20161128.DisableAWSServiceAccess>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan disable-aws-service-access-request

  loot 200
    note <Success>
  loot 480
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 481
    seed json, like aws-organizations-not-in-use-exception
    note <AWSOrganizationsNotInUseException>
  loot 482
    seed json, like concurrent-modification-exception
    note <ConcurrentModificationException>
  loot 483
    seed json, like constraint-violation-exception
    note <ConstraintViolationException>
  loot 484
    seed json, like invalid-input-exception
    note <InvalidInputException>
  loot 485
    seed json, like service-exception
    note <ServiceException>
  loot 486
    seed json, like too-many-requests-exception
    note <TooManyRequestsException>
  loot 487
    seed json, like unsupported-api-endpoint-exception
    note <UnsupportedAPIEndpointException>