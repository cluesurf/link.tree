
load @termsurf/snow/amazonaws.com/organizations/2016-11-28/base/access-denied-exception
  take form access-denied-exception

load @termsurf/snow/amazonaws.com/organizations/2016-11-28/base/access-denied-for-dependency-exception
  take form access-denied-for-dependency-exception

load @termsurf/snow/amazonaws.com/organizations/2016-11-28/base/already-in-organization-exception
  take form already-in-organization-exception

load @termsurf/snow/amazonaws.com/organizations/2016-11-28/base/concurrent-modification-exception
  take form concurrent-modification-exception

load @termsurf/snow/amazonaws.com/organizations/2016-11-28/base/constraint-violation-exception
  take form constraint-violation-exception

load @termsurf/snow/amazonaws.com/organizations/2016-11-28/base/create-organization-response
  take form create-organization-response

load @termsurf/snow/amazonaws.com/organizations/2016-11-28/base/invalid-input-exception
  take form invalid-input-exception

load @termsurf/snow/amazonaws.com/organizations/2016-11-28/base/service-exception
  take form service-exception

load @termsurf/snow/amazonaws.com/organizations/2016-11-28/base/too-many-requests-exception
  take form too-many-requests-exception

load @termsurf/snow/base/native-string
  take form native-string

boot create-organization, name <CreateOrganization>
  deed post
  note <Creates an AWS organization. The account whose user is calling the `CreateOrganization` operation automatically becomes the [management account](https://docs.aws.amazon.com/organizations/latest/userguide/orgs_getting-started_concepts.html#account) of the new organization.

This operation must be called using credentials from the account that is to become the new organization's management account. The principal must also have the relevant IAM permissions.

By default (or if you set the `FeatureSet` parameter to `ALL`), the new organization is created with all features enabled and service control policies automatically enabled in the root. If you instead choose to create the organization supporting only the consolidated billing features by setting the `FeatureSet` parameter to `CONSOLIDATED_BILLING"`, no policy types are enabled by default, and you can't use organization policies>

  take x-amz-target
    like native-string
  take create-organization-request, like create-organization-request

  line </#X-Amz-Target=AWSOrganizationsV20161128.CreateOrganization>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-organization-request

  loot 200
    seed json, like create-organization-response
    note <Success>
  loot 480
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 481
    seed json, like already-in-organization-exception
    note <AlreadyInOrganizationException>
  loot 482
    seed json, like concurrent-modification-exception
    note <ConcurrentModificationException>
  loot 483
    seed json, like constraint-violation-exception
    note <ConstraintViolationException>
  loot 484
    seed json, like invalid-input-exception
    note <InvalidInputException>
  loot 485
    seed json, like service-exception
    note <ServiceException>
  loot 486
    seed json, like too-many-requests-exception
    note <TooManyRequestsException>
  loot 487
    seed json, like access-denied-for-dependency-exception
    note <AccessDeniedForDependencyException>