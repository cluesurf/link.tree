
load @wavebond/snow/amazonaws.com/swf/2012-01-25/base/data
  take form data

load @wavebond/snow/amazonaws.com/swf/2012-01-25/base/event-id
  take form event-id

load @wavebond/snow/amazonaws.com/swf/2012-01-25/base/start-child-workflow-execution-failed-cause
  take form start-child-workflow-execution-failed-cause

load @wavebond/snow/amazonaws.com/swf/2012-01-25/base/workflow-id
  take form workflow-id

load @wavebond/snow/amazonaws.com/swf/2012-01-25/base/workflow-type
  take form workflow-type

form start-child-workflow-execution-failed-event-attributes, name <StartChildWorkflowExecutionFailedEventAttributes>
  note <Provides the details of the `StartChildWorkflowExecutionFailed` event.>
  take workflow-type, name <workflowType>
    like workflow-type
    note <The workflow type provided in the `StartChildWorkflowExecution` Decision that failed.>
  take cause, name <cause>
    like start-child-workflow-execution-failed-cause
    note <The cause of the failure. This information is generated by the system and can be useful for diagnostic purposes.

When `cause` is set to `OPERATION_NOT_PERMITTED`, the decision fails because it lacks sufficient permissions. For details and example IAM policies, see [Using IAM to Manage Access to Amazon SWF Workflows](https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html) in the _Amazon SWF Developer Guide_.>
  take workflow-id, name <workflowId>
    like workflow-id
    note <The `workflowId` of the child workflow execution.>
  take initiated-event-id, name <initiatedEventId>
    like event-id
    note <When the `cause` is `WORKFLOW_ALREADY_RUNNING`, `initiatedEventId` is the ID of the `StartChildWorkflowExecutionInitiated` event that corresponds to the `StartChildWorkflowExecution` Decision to start the workflow execution. You can use this information to diagnose problems by tracing back the chain of events leading up to this event.

When the `cause` isn't `WORKFLOW_ALREADY_RUNNING`, `initiatedEventId` is set to `0` because the `StartChildWorkflowExecutionInitiated` event doesn't exist.>
  take decision-task-completed-event-id, name <decisionTaskCompletedEventId>
    like event-id
    note <The ID of the `DecisionTaskCompleted` event corresponding to the decision task that resulted in the `StartChildWorkflowExecution` Decision to request this child workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events.>
  take control, name <control>
    like data
    void take
    note <The data attached to the event that the decider can use in subsequent workflow tasks. This data isn't sent to the child workflow execution.>
