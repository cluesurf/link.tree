
load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/arn
  take form arn

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/child-policy
  take form child-policy

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/data
  take form data

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/duration-in-seconds-optional
  take form duration-in-seconds-optional

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/tag-list
  take form tag-list

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/task-list
  take form task-list

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/task-priority
  take form task-priority

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/workflow-id
  take form workflow-id

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/workflow-type
  take form workflow-type

form start-child-workflow-execution-decision-attributes, name <StartChildWorkflowExecutionDecisionAttributes>
  note <Provides the details of the `StartChildWorkflowExecution` decision.

**Access Control** You can use IAM policies to control this decision's access to Amazon SWF resources as follows:

- Use a `Resource` element with the domain name to limit the action to only specified domains.

- Use an `Action` element to allow or deny permission to call this action.

- Constrain the following parameters by using a `Condition` element with the appropriate keys.

  - `tagList.member.N` - The key is "swf:tagList.N" where N is the tag number from 0 to 4, inclusive.

  - `taskList` - String constraint. The key is `swf:taskList.name`.

  - `workflowType.name` - String constraint. The key is `swf:workflowType.name`.

  - `workflowType.version` - String constraint. The key is `swf:workflowType.version`.

If the caller doesn't have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's `cause` parameter is set to `OPERATION_NOT_PERMITTED`. For details and example IAM policies, see [Using IAM to Manage Access to Amazon SWF Workflows](https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html) in the _Amazon SWF Developer Guide_.>
  take workflow-type, name <workflowType>
    like workflow-type
    note <The type of the workflow execution to be started.>
  take workflow-id, name <workflowId>
    like workflow-id
    note <The `workflowId` of the workflow execution.

The specified string must not start or end with whitespace. It must not contain a `:` (colon), `/` (slash), `|` (vertical bar), or any control characters (`\u0000-\u001f` | `\u007f-\u009f`). Also, it must not contain the literal string `arn`.>
  take control, name <control>
    like data
    void take
    note <The data attached to the event that can be used by the decider in subsequent workflow tasks. This data isn't sent to the child workflow execution.>
  take input, name <input>
    like data
    void take
    note <The input to be provided to the workflow execution.>
  take execution-start-to-close-timeout, name <executionStartToCloseTimeout>
    like duration-in-seconds-optional
    void take
    note <The total duration for this workflow execution. This overrides the defaultExecutionStartToCloseTimeout specified when registering the workflow type.

The duration is specified in seconds, an integer greater than or equal to `0`. You can use `NONE` to specify unlimited duration.

An execution start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default execution start-to-close timeout was specified at registration time then a fault is returned.>
  take task-list, name <taskList>
    like task-list
    void take
    note <The name of the task list to be used for decision tasks of the child workflow execution.

A task list for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default task list was specified at registration time then a fault is returned.

The specified string must not start or end with whitespace. It must not contain a `:` (colon), `/` (slash), `|` (vertical bar), or any control characters (`\u0000-\u001f` | `\u007f-\u009f`). Also, it must not contain the literal string `arn`.>
  take task-priority, name <taskPriority>
    like task-priority
    void take
    note <A task priority that, if set, specifies the priority for a decision task of this workflow execution. This overrides the defaultTaskPriority specified when registering the workflow type. Valid values are integers that range from Java's `Integer.MIN_VALUE` (-2147483648) to `Integer.MAX_VALUE` (2147483647). Higher numbers indicate higher priority.

For more information about setting task priority, see [Setting Task Priority](https://docs.aws.amazon.com/amazonswf/latest/developerguide/programming-priority.html) in the _Amazon SWF Developer Guide_.>
  take task-start-to-close-timeout, name <taskStartToCloseTimeout>
    like duration-in-seconds-optional
    void take
    note <Specifies the maximum duration of decision tasks for this workflow execution. This parameter overrides the `defaultTaskStartToCloseTimout` specified when registering the workflow type using RegisterWorkflowType.

The duration is specified in seconds, an integer greater than or equal to `0`. You can use `NONE` to specify unlimited duration.

A task start-to-close timeout for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default task start-to-close timeout was specified at registration time then a fault is returned.>
  take child-policy, name <childPolicy>
    like child-policy
    void take
    note <If set, specifies the policy to use for the child workflow executions if the workflow execution being started is terminated by calling the TerminateWorkflowExecution action explicitly or due to an expired timeout. This policy overrides the default child policy specified when registering the workflow type using RegisterWorkflowType.

The supported child policies are:

- `TERMINATE` - The child executions are terminated.

- `REQUEST_CANCEL` - A request to cancel is attempted for each child execution by recording a `WorkflowExecutionCancelRequested` event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.

- `ABANDON` - No action is taken. The child executions continue to run.

A child policy for this workflow execution must be specified either as a default for the workflow type or through this parameter. If neither this parameter is set nor a default child policy was specified at registration time then a fault is returned.>
  take tag-list, name <tagList>
    like tag-list
    void take
    note <The list of tags to associate with the child workflow execution. A maximum of 5 tags can be specified. You can list workflow executions with a specific tag by calling ListOpenWorkflowExecutions or ListClosedWorkflowExecutions and specifying a TagFilter.>
  take lambda-role, name <lambdaRole>
    like arn
    void take
    note <The IAM role attached to the child workflow execution.>
