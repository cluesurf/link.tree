
load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/event-id
  take form event-id

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/function-id
  take form function-id

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/function-name
  take form function-name

load @termsurf/snow/amazonaws.com/swf/2012-01-25/base/schedule-lambda-function-failed-cause
  take form schedule-lambda-function-failed-cause

form schedule-lambda-function-failed-event-attributes, name <ScheduleLambdaFunctionFailedEventAttributes>
  note <Provides the details of the `ScheduleLambdaFunctionFailed` event. It isn't set for other event types.>
  take id, name <id>
    like function-id
    note <The ID provided in the `ScheduleLambdaFunction` decision that failed.>
  take name, name <name>
    like function-name
    note <The name of the Lambda function.>
  take cause, name <cause>
    like schedule-lambda-function-failed-cause
    note <The cause of the failure. To help diagnose issues, use this information to trace back the chain of events leading up to this event.

If `cause` is set to `OPERATION_NOT_PERMITTED`, the decision failed because it lacked sufficient permissions. For details and example IAM policies, see [Using IAM to Manage Access to Amazon SWF Workflows](https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html) in the _Amazon SWF Developer Guide_.>
  take decision-task-completed-event-id, name <decisionTaskCompletedEventId>
    like event-id
    note <The ID of the `LambdaFunctionCompleted` event corresponding to the decision that resulted in scheduling this Lambda task. To help diagnose issues, use this information to trace back the chain of events leading up to this event.>
