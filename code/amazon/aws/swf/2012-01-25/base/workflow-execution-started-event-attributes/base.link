
load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/arn
  take form arn

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/child-policy
  take form child-policy

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/data
  take form data

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/duration-in-seconds-optional
  take form duration-in-seconds-optional

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/event-id
  take form event-id

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/tag-list
  take form tag-list

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/task-list
  take form task-list

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/task-priority
  take form task-priority

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/workflow-execution
  take form workflow-execution

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/workflow-run-id-optional
  take form workflow-run-id-optional

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/workflow-type
  take form workflow-type

form workflow-execution-started-event-attributes, name <WorkflowExecutionStartedEventAttributes>
  note <Provides details of `WorkflowExecutionStarted` event.>
  take input, name <input>
    like data
    void take
    note <The input provided to the workflow execution.>
  take execution-start-to-close-timeout, name <executionStartToCloseTimeout>
    like duration-in-seconds-optional
    void take
    note <The maximum duration for this workflow execution.

The duration is specified in seconds, an integer greater than or equal to `0`. You can use `NONE` to specify unlimited duration.>
  take task-start-to-close-timeout, name <taskStartToCloseTimeout>
    like duration-in-seconds-optional
    void take
    note <The maximum duration of decision tasks for this workflow type.

The duration is specified in seconds, an integer greater than or equal to `0`. You can use `NONE` to specify unlimited duration.>
  take child-policy, name <childPolicy>
    like child-policy
    note <The policy to use for the child workflow executions if this workflow execution is terminated, by calling the TerminateWorkflowExecution action explicitly or due to an expired timeout.

The supported child policies are:

- `TERMINATE` - The child executions are terminated.

- `REQUEST_CANCEL` - A request to cancel is attempted for each child execution by recording a `WorkflowExecutionCancelRequested` event in its history. It is up to the decider to take appropriate actions when it receives an execution history with this event.

- `ABANDON` - No action is taken. The child executions continue to run.>
  take task-list, name <taskList>
    like task-list
    note <The name of the task list for scheduling the decision tasks for this workflow execution.>
  take task-priority, name <taskPriority>
    like task-priority
    void take
    note <The priority of the decision tasks in the workflow execution.>
  take workflow-type, name <workflowType>
    like workflow-type
    note <The workflow type of this execution.>
  take tag-list, name <tagList>
    like tag-list
    void take
    note <The list of tags associated with this workflow execution. An execution can have up to 5 tags.>
  take continued-execution-run-id, name <continuedExecutionRunId>
    like workflow-run-id-optional
    void take
    note <If this workflow execution was started due to a `ContinueAsNewWorkflowExecution` decision, then it contains the `runId` of the previous workflow execution that was closed and continued as this execution.>
  take parent-workflow-execution, name <parentWorkflowExecution>
    like workflow-execution
    void take
    note <The source workflow execution that started this workflow execution. The member isn't set if the workflow execution was not started by a workflow.>
  take parent-initiated-event-id, name <parentInitiatedEventId>
    like event-id
    void take
    note <The ID of the `StartChildWorkflowExecutionInitiated` event corresponding to the `StartChildWorkflowExecution` Decision to start this workflow execution. The source event with this ID can be found in the history of the source workflow execution. This information can be useful for diagnosing problems by tracing back the chain of events leading up to this event.>
  take lambda-role, name <lambdaRole>
    like arn
    void take
    note <The IAM role attached to the workflow execution.>
