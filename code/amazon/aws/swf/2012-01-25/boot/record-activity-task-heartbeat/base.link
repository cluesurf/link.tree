
load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/activity-task-status
  take form activity-task-status

load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/operation-not-permitted-fault
  take form operation-not-permitted-fault

load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/unknown-resource-fault
  take form unknown-resource-fault

load @drumwork/snow/base/native-string
  take form native-string

boot record-activity-task-heartbeat, name <RecordActivityTaskHeartbeat>
  deed post
  note <Used by activity workers to report to the service that the ActivityTask represented by the specified `taskToken` is still making progress. The worker can also specify details of the progress, for example percent complete, using the `details` parameter. This action can also be used by the worker as a mechanism to check if cancellation is being requested for the activity task. If a cancellation is being attempted for the specified task, then the boolean `cancelRequested` flag returned by the service is set to `true`.

This action resets the `taskHeartbeatTimeout` clock. The `taskHeartbeatTimeout` is specified in RegisterActivityType.

This action doesn't in itself create an event in the workflow execution history. However, if the task times out, the workflow execution history contains a `ActivityTaskTimedOut` event that contains the information from the last heartbeat generated by the activity worker.

The `taskStartToCloseTimeout` of an activity type is the maximum duration of an activity task, regardless of the number of RecordActivityTaskHeartbeat requests received. The `taskStartToCloseTimeout` is also specified in RegisterActivityType.

This operation is only useful for long-lived activities to report liveliness of the task and to determine if a cancellation is being attempted.

If the `cancelRequested` flag returns `true`, a cancellation is being attempted. If the worker can cancel the activity, it should respond with RespondActivityTaskCanceled. Otherwise, it should ignore the cancellation request.

**Access Control** You can use IAM policies to control this action's access to Amazon SWF resources as follows:

- Use a `Resource` element with the domain name to limit the action to only specified domains.

- Use an `Action` element to allow or deny permission to call this action.

- You cannot use an IAM policy to constrain this action's parameters.

If the caller doesn't have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's `cause` parameter is set to `OPERATION_NOT_PERMITTED`. For details and example IAM policies, see [Using IAM to Manage Access to Amazon SWF Workflows](https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html) in the _Amazon SWF Developer Guide_.>

  take x-amz-target
    like native-string
  take record-activity-task-heartbeat-input, like record-activity-task-heartbeat-input

  line </#X-Amz-Target=SimpleWorkflowService.RecordActivityTaskHeartbeat>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan record-activity-task-heartbeat-input

  loot 200
    seed json, like activity-task-status
    note <Success>
  loot 480
    seed json, like unknown-resource-fault
    note <UnknownResourceFault>
  loot 481
    seed json, like operation-not-permitted-fault
    note <OperationNotPermittedFault>