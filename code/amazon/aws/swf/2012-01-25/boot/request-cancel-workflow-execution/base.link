
load @treesurf/snow/amazonaws.com/swf/2012-01-25/base/operation-not-permitted-fault
  take form operation-not-permitted-fault

load @treesurf/snow/amazonaws.com/swf/2012-01-25/base/unknown-resource-fault
  take form unknown-resource-fault

load @treesurf/snow/base/native-string
  take form native-string

boot request-cancel-workflow-execution, name <RequestCancelWorkflowExecution>
  deed post
  note <Records a `WorkflowExecutionCancelRequested` event in the currently running workflow execution identified by the given domain, workflowId, and runId. This logically requests the cancellation of the workflow execution as a whole. It is up to the decider to take appropriate actions when it receives an execution history with this event.

If the runId isn't specified, the `WorkflowExecutionCancelRequested` event is recorded in the history of the current open workflow execution with the specified workflowId in the domain.

Because this action allows the workflow to properly clean up and gracefully close, it should be used instead of TerminateWorkflowExecution when possible.

**Access Control** You can use IAM policies to control this action's access to Amazon SWF resources as follows:

- Use a `Resource` element with the domain name to limit the action to only specified domains.

- Use an `Action` element to allow or deny permission to call this action.

- You cannot use an IAM policy to constrain this action's parameters.

If the caller doesn't have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's `cause` parameter is set to `OPERATION_NOT_PERMITTED`. For details and example IAM policies, see [Using IAM to Manage Access to Amazon SWF Workflows](https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html) in the _Amazon SWF Developer Guide_.>

  take x-amz-target
    like native-string
  take request-cancel-workflow-execution-input, like request-cancel-workflow-execution-input

  line </#X-Amz-Target=SimpleWorkflowService.RequestCancelWorkflowExecution>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan request-cancel-workflow-execution-input

  loot 200
    note <Success>
  loot 480
    seed json, like unknown-resource-fault
    note <UnknownResourceFault>
  loot 481
    seed json, like operation-not-permitted-fault
    note <OperationNotPermittedFault>