
load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/default-undefined-fault
  take form default-undefined-fault

load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/limit-exceeded-fault
  take form limit-exceeded-fault

load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/operation-not-permitted-fault
  take form operation-not-permitted-fault

load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/run
  take form run

load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/type-deprecated-fault
  take form type-deprecated-fault

load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/unknown-resource-fault
  take form unknown-resource-fault

load @drumwork/snow/amazonaws.com/swf/2012-01-25/base/workflow-execution-already-started-fault
  take form workflow-execution-already-started-fault

load @drumwork/snow/base/native-string
  take form native-string

boot start-workflow-execution, name <StartWorkflowExecution>
  deed post
  note <Starts an execution of the workflow type in the specified domain using the provided `workflowId` and input data.

This action returns the newly started workflow execution.

**Access Control** You can use IAM policies to control this action's access to Amazon SWF resources as follows:

- Use a `Resource` element with the domain name to limit the action to only specified domains.

- Use an `Action` element to allow or deny permission to call this action.

- Constrain the following parameters by using a `Condition` element with the appropriate keys.

  - `tagList.member.0`: The key is `swf:tagList.member.0`.

  - `tagList.member.1`: The key is `swf:tagList.member.1`.

  - `tagList.member.2`: The key is `swf:tagList.member.2`.

  - `tagList.member.3`: The key is `swf:tagList.member.3`.

  - `tagList.member.4`: The key is `swf:tagList.member.4`.

  - `taskList`: String constraint. The key is `swf:taskList.name`.

  - `workflowType.name`: String constraint. The key is `swf:workflowType.name`.

  - `workflowType.version`: String constraint. The key is `swf:workflowType.version`.

If the caller doesn't have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's `cause` parameter is set to `OPERATION_NOT_PERMITTED`. For details and example IAM policies, see [Using IAM to Manage Access to Amazon SWF Workflows](https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html) in the _Amazon SWF Developer Guide_.>

  take x-amz-target
    like native-string
  take start-workflow-execution-input, like start-workflow-execution-input

  line </#X-Amz-Target=SimpleWorkflowService.StartWorkflowExecution>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan start-workflow-execution-input

  loot 200
    seed json, like run
    note <Success>
  loot 480
    seed json, like unknown-resource-fault
    note <UnknownResourceFault>
  loot 481
    seed json, like type-deprecated-fault
    note <TypeDeprecatedFault>
  loot 482
    seed json, like workflow-execution-already-started-fault
    note <WorkflowExecutionAlreadyStartedFault>
  loot 483
    seed json, like limit-exceeded-fault
    note <LimitExceededFault>
  loot 484
    seed json, like operation-not-permitted-fault
    note <OperationNotPermittedFault>
  loot 485
    seed json, like default-undefined-fault
    note <DefaultUndefinedFault>