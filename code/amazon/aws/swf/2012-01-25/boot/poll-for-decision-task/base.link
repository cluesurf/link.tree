
load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/decision-task
  take form decision-task

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/limit-exceeded-fault
  take form limit-exceeded-fault

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/operation-not-permitted-fault
  take form operation-not-permitted-fault

load @tunebond/snow/amazonaws.com/swf/2012-01-25/base/unknown-resource-fault
  take form unknown-resource-fault

load @tunebond/snow/base/native-string
  take form native-string

boot poll-for-decision-task, name <PollForDecisionTask>
  deed post
  note <Used by deciders to get a DecisionTask from the specified decision `taskList`. A decision task may be returned for any open workflow execution that is using the specified task list. The task includes a paginated view of the history of the workflow execution. The decider should use the workflow type and the history to determine how to properly handle the task.

This action initiates a long poll, where the service holds the HTTP connection open and responds as soon a task becomes available. If no decision task is available in the specified task list before the timeout of 60 seconds expires, an empty result is returned. An empty result, in this context, means that a DecisionTask is returned, but that the value of taskToken is an empty string.

Deciders should set their client side socket timeout to at least 70 seconds (10 seconds higher than the timeout).

Because the number of workflow history events for a single workflow execution might be very large, the result returned might be split up across a number of pages. To retrieve subsequent pages, make additional calls to `PollForDecisionTask` using the `nextPageToken` returned by the initial call. Note that you do _not_ call `GetWorkflowExecutionHistory` with this `nextPageToken`. Instead, call `PollForDecisionTask` again.

**Access Control** You can use IAM policies to control this action's access to Amazon SWF resources as follows:

- Use a `Resource` element with the domain name to limit the action to only specified domains.

- Use an `Action` element to allow or deny permission to call this action.

- Constrain the `taskList.name` parameter by using a `Condition` element with the `swf:taskList.name` key to allow the action to access only certain task lists.

If the caller doesn't have sufficient permissions to invoke the action, or the parameter values fall outside the specified constraints, the action fails. The associated event attribute's `cause` parameter is set to `OPERATION_NOT_PERMITTED`. For details and example IAM policies, see [Using IAM to Manage Access to Amazon SWF Workflows](https://docs.aws.amazon.com/amazonswf/latest/developerguide/swf-dev-iam.html) in the _Amazon SWF Developer Guide_.>

  take x-amz-target
    like native-string
  take maximum-page-size
    like native-string
    note <Pagination limit>
    void take
  take next-page-token
    like native-string
    note <Pagination token>
    void take
  take poll-for-decision-task-input, like poll-for-decision-task-input

  line </#X-Amz-Target=SimpleWorkflowService.PollForDecisionTask>

  hint <X-Amz-Target>, loan x-amz-target

  find <maximumPageSize>, loan maximum-page-size
  find <nextPageToken>, loan next-page-token

  seed json, loan poll-for-decision-task-input

  loot 200
    seed json, like decision-task
    note <Success>
  loot 480
    seed json, like unknown-resource-fault
    note <UnknownResourceFault>
  loot 481
    seed json, like operation-not-permitted-fault
    note <OperationNotPermittedFault>
  loot 482
    seed json, like limit-exceeded-fault
    note <LimitExceededFault>
