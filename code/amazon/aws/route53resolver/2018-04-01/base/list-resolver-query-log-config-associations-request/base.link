
load @nerdbond/snow/amazonaws.com/route53resolver/2018-04-01/base/filters
  take form filters

load @nerdbond/snow/amazonaws.com/route53resolver/2018-04-01/base/max-results
  take form max-results

load @nerdbond/snow/amazonaws.com/route53resolver/2018-04-01/base/next-token
  take form next-token

load @nerdbond/snow/amazonaws.com/route53resolver/2018-04-01/base/sort-by-key
  take form sort-by-key

load @nerdbond/snow/amazonaws.com/route53resolver/2018-04-01/base/sort-order
  take form sort-order

form list-resolver-query-log-config-associations-request, name <ListResolverQueryLogConfigAssociationsRequest>
  take max-results, name <MaxResults>
    like max-results
    void take
    note <The maximum number of query logging associations that you want to return in the response to a `ListResolverQueryLogConfigAssociations` request. If you don't specify a value for `MaxResults`, Resolver returns up to 100 query logging associations.>
  take next-token, name <NextToken>
    like next-token
    void take
    note <For the first `ListResolverQueryLogConfigAssociations` request, omit this value.

If there are more than `MaxResults` query logging associations that match the values that you specify for `Filters`, you can submit another `ListResolverQueryLogConfigAssociations` request to get the next group of associations. In the next request, specify the value of `NextToken` from the previous response.>
  take filters, name <Filters>
    like filters
    void take
    note <An optional specification to return a subset of query logging associations.

If you submit a second or subsequent `ListResolverQueryLogConfigAssociations` request and specify the `NextToken` parameter, you must use the same values for `Filters`, if any, as in the previous request.>
  take sort-by, name <SortBy>
    like sort-by-key
    void take
    note <The element that you want Resolver to sort query logging associations by.

If you submit a second or subsequent `ListResolverQueryLogConfigAssociations` request and specify the `NextToken` parameter, you must use the same value for `SortBy`, if any, as in the previous request.

Valid values include the following elements:

- `CreationTime`: The ID of the query logging association.

- `Error`: If the value of `Status` is `FAILED`, the value of `Error` indicates the cause:

  - `DESTINATION_NOT_FOUND`: The specified destination (for example, an Amazon S3 bucket) was deleted.

  - `ACCESS_DENIED`: Permissions don't allow sending logs to the destination.

  If `Status` is a value other than `FAILED`, `ERROR` is null.

- `Id`: The ID of the query logging association

- `ResolverQueryLogConfigId`: The ID of the query logging configuration

- `ResourceId`: The ID of the VPC that is associated with the query logging configuration

- `Status`: The current status of the configuration. Valid values include the following:

  - `CREATING`: Resolver is creating an association between an Amazon VPC and a query logging configuration.

  - `CREATED`: The association between an Amazon VPC and a query logging configuration was successfully created. Resolver is logging queries that originate in the specified VPC.

  - `DELETING`: Resolver is deleting this query logging association.

  - `FAILED`: Resolver either couldn't create or couldn't delete the query logging association. Here are two common causes:

    - The specified destination (for example, an Amazon S3 bucket) was deleted.

    - Permissions don't allow sending logs to the destination.>
  take sort-order, name <SortOrder>
    like sort-order
    void take
    note <If you specified a value for `SortBy`, the order that you want query logging associations to be listed in, `ASCENDING` or `DESCENDING`.

If you submit a second or subsequent `ListResolverQueryLogConfigAssociations` request and specify the `NextToken` parameter, you must use the same value for `SortOrder`, if any, as in the previous request.>