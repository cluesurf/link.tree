
load @termsurf/snow/amazonaws.com/athena/2017-05-18/base/engine-version
  take form engine-version

load @termsurf/snow/amazonaws.com/athena/2017-05-18/base/query-execution-context
  take form query-execution-context

load @termsurf/snow/amazonaws.com/athena/2017-05-18/base/query-execution-id
  take form query-execution-id

load @termsurf/snow/amazonaws.com/athena/2017-05-18/base/query-execution-statistics
  take form query-execution-statistics

load @termsurf/snow/amazonaws.com/athena/2017-05-18/base/query-execution-status
  take form query-execution-status

load @termsurf/snow/amazonaws.com/athena/2017-05-18/base/query-string
  take form query-string

load @termsurf/snow/amazonaws.com/athena/2017-05-18/base/result-configuration
  take form result-configuration

load @termsurf/snow/amazonaws.com/athena/2017-05-18/base/statement-type
  take form statement-type

load @termsurf/snow/amazonaws.com/athena/2017-05-18/base/work-group-name
  take form work-group-name

form query-execution, name <QueryExecution>
  note <Information about a single instance of a query execution.>
  take query-execution-id, name <QueryExecutionId>
    like query-execution-id
    void take
    note <The unique identifier for each query execution.>
  take query, name <Query>
    like query-string
    void take
    note <The SQL query statements which the query execution ran.>
  take statement-type, name <StatementType>
    like statement-type
    void take
    note <The type of query statement that was run. `DDL` indicates DDL query statements. `DML` indicates DML (Data Manipulation Language) query statements, such as `CREATE TABLE AS SELECT`. `UTILITY` indicates query statements other than DDL and DML, such as `SHOW CREATE TABLE`, or `DESCRIBE TABLE`.>
  take result-configuration, name <ResultConfiguration>
    like result-configuration
    void take
    note <The location in Amazon S3 where query results were stored and the encryption option, if any, used for query results. These are known as "client-side settings". If workgroup settings override client-side settings, then the query uses the location for the query results and the encryption configuration that are specified for the workgroup.>
  take query-execution-context, name <QueryExecutionContext>
    like query-execution-context
    void take
    note <The database in which the query execution occurred.>
  take status, name <Status>
    like query-execution-status
    void take
    note <The completion date, current state, submission time, and state change reason (if applicable) for the query execution.>
  take statistics, name <Statistics>
    like query-execution-statistics
    void take
    note <Query execution statistics, such as the amount of data scanned, the amount of time that the query took to process, and the type of statement that was run.>
  take work-group, name <WorkGroup>
    like work-group-name
    void take
    note <The name of the workgroup in which the query ran.>
  take engine-version, name <EngineVersion>
    like engine-version
    void take
    note <The engine version that executed the query.>
