
load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/arn-string
  take form arn-string

load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/availability-zone-string
  take form availability-zone-string

load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/instance-type-string
  take form instance-type-string

load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/node-framework-attributes
  take form node-framework-attributes

load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/node-log-publishing-configuration
  take form node-log-publishing-configuration

load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/node-status
  take form node-status

load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/output-tag-map
  take form output-tag-map

load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/resource-id-string
  take form resource-id-string

load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/state-db-type
  take form state-db-type

load @termsurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/timestamp
  take form timestamp

load @termsurf/snow/base/string
  take form string

form node, name <Node>
  note <Configuration properties of a node.>
  take network-id, name <NetworkId>
    like resource-id-string
    void take
    note <The unique identifier of the network that the node is on.>
  take member-id, name <MemberId>
    like resource-id-string
    void take
    note <The unique identifier of the member to which the node belongs.

Applies only to Hyperledger Fabric.>
  take id, name <Id>
    like resource-id-string
    void take
    note <The unique identifier of the node.>
  take instance-type, name <InstanceType>
    like instance-type-string
    void take
    note <The instance type of the node.>
  take availability-zone, name <AvailabilityZone>
    like availability-zone-string
    void take
    note <The Availability Zone in which the node exists. Required for Ethereum nodes.>
  take framework-attributes, name <FrameworkAttributes>
    like node-framework-attributes
    void take
    note <Attributes of the blockchain framework being used.>
  take log-publishing-configuration, name <LogPublishingConfiguration>
    like node-log-publishing-configuration
    void take
    note <Configuration properties for logging events associated with a peer node on a Hyperledger Fabric network on Managed Blockchain.>
  take state-db, name <StateDB>
    like state-db-type
    void take
    note <The state database that the node uses. Values are `LevelDB` or `CouchDB`.

Applies only to Hyperledger Fabric.>
  take status, name <Status>
    like node-status
    void take
    note <The status of the node.

- `CREATING` - The AWS account is in the process of creating a node.

- `AVAILABLE` - The node has been created and can participate in the network.

- `UNHEALTHY` - The node is impaired and might not function as expected. Amazon Managed Blockchain automatically finds nodes in this state and tries to recover them. If a node is recoverable, it returns to `AVAILABLE`. Otherwise, it moves to `FAILED` status.

- `CREATE_FAILED` - The AWS account attempted to create a node and creation failed.

- `UPDATING` - The node is in the process of being updated.

- `DELETING` - The node is in the process of being deleted.

- `DELETED` - The node can no longer participate on the network.

- `FAILED` - The node is no longer functional, cannot be recovered, and must be deleted.

- `INACCESSIBLE_ENCRYPTION_KEY` - The node is impaired and might not function as expected because it cannot access the specified customer managed key in AWS KMS for encryption at rest. Either the KMS key was disabled or deleted, or the grants on the key were revoked.

  The effect of disabling or deleting a key, or revoking a grant is not immediate. The node resource might take some time to find that the key is inaccessible. When a resource is in this state, we recommend deleting and recreating the resource.>
  take creation-date, name <CreationDate>
    like timestamp
    void take
    note <The date and time that the node was created.>
  take tags, name <Tags>
    like output-tag-map
    void take
    note <Tags assigned to the node. Each tag consists of a key and optional value.

For more information about tags, see [Tagging Resources](https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html) in the _Amazon Managed Blockchain Ethereum Developer Guide_, or [Tagging Resources](https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html) in the _Amazon Managed Blockchain Hyperledger Fabric Developer Guide_.>
  take arn, name <Arn>
    like arn-string
    void take
    note <The Amazon Resource Name (ARN) of the node. For more information about ARNs and their format, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the _AWS General Reference_.>
  take kms-key-arn, name <KmsKeyArn>
    like string
    void take
    note <The Amazon Resource Name (ARN) of the customer managed key in AWS Key Management Service (AWS KMS) that the node uses for encryption at rest. If the value of this parameter is `"AWS Owned KMS Key"`, the node uses an AWS owned KMS key for encryption. The node inherits this parameter from the member that it belongs to.

Applies only to Hyperledger Fabric.>