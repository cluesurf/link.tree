
load @treesurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/arn-string
  take form arn-string

load @treesurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/description-string
  take form description-string

load @treesurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/network-member-name-string
  take form network-member-name-string

load @treesurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/output-tag-map
  take form output-tag-map

load @treesurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/proposal-actions
  take form proposal-actions

load @treesurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/proposal-status
  take form proposal-status

load @treesurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/resource-id-string
  take form resource-id-string

load @treesurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/timestamp
  take form timestamp

load @treesurf/snow/amazonaws.com/managedblockchain/2018-09-24/base/vote-count
  take form vote-count

form proposal, name <Proposal>
  note <Properties of a proposal on a Managed Blockchain network.

Applies only to Hyperledger Fabric.>
  take proposal-id, name <ProposalId>
    like resource-id-string
    void take
    note <The unique identifier of the proposal.>
  take network-id, name <NetworkId>
    like resource-id-string
    void take
    note <The unique identifier of the network for which the proposal is made.>
  take description, name <Description>
    like description-string
    void take
    note <The description of the proposal.>
  take actions, name <Actions>
    like proposal-actions
    void take
    note <The actions to perform on the network if the proposal is `APPROVED`.>
  take proposed-by-member-id, name <ProposedByMemberId>
    like resource-id-string
    void take
    note <The unique identifier of the member that created the proposal.>
  take proposed-by-member-name, name <ProposedByMemberName>
    like network-member-name-string
    void take
    note <The name of the member that created the proposal.>
  take status, name <Status>
    like proposal-status
    void take
    note <The status of the proposal. Values are as follows:

- `IN_PROGRESS` - The proposal is active and open for member voting.

- `APPROVED` - The proposal was approved with sufficient `YES` votes among members according to the `VotingPolicy` specified for the `Network`. The specified proposal actions are carried out.

- `REJECTED` - The proposal was rejected with insufficient `YES` votes among members according to the `VotingPolicy` specified for the `Network`. The specified `ProposalActions` are not carried out.

- `EXPIRED` - Members did not cast the number of votes required to determine the proposal outcome before the proposal expired. The specified `ProposalActions` are not carried out.

- `ACTION_FAILED` - One or more of the specified `ProposalActions` in a proposal that was approved could not be completed because of an error. The `ACTION_FAILED` status occurs even if only one ProposalAction fails and other actions are successful.>
  take creation-date, name <CreationDate>
    like timestamp
    void take
    note <The date and time that the proposal was created.>
  take expiration-date, name <ExpirationDate>
    like timestamp
    void take
    note <The date and time that the proposal expires. This is the `CreationDate` plus the `ProposalDurationInHours` that is specified in the `ProposalThresholdPolicy`. After this date and time, if members have not cast enough votes to determine the outcome according to the voting policy, the proposal is `EXPIRED` and `Actions` are not carried out.>
  take yes-vote-count, name <YesVoteCount>
    like vote-count
    void take
    note <The current total of `YES` votes cast on the proposal by members.>
  take no-vote-count, name <NoVoteCount>
    like vote-count
    void take
    note <The current total of `NO` votes cast on the proposal by members.>
  take outstanding-vote-count, name <OutstandingVoteCount>
    like vote-count
    void take
    note <The number of votes remaining to be cast on the proposal by members. In other words, the number of members minus the sum of `YES` votes and `NO` votes.>
  take tags, name <Tags>
    like output-tag-map
    void take
    note <Tags assigned to the proposal. Each tag consists of a key and optional value.

For more information about tags, see [Tagging Resources](https://docs.aws.amazon.com/managed-blockchain/latest/ethereum-dev/tagging-resources.html) in the _Amazon Managed Blockchain Ethereum Developer Guide_, or [Tagging Resources](https://docs.aws.amazon.com/managed-blockchain/latest/hyperledger-fabric-dev/tagging-resources.html) in the _Amazon Managed Blockchain Hyperledger Fabric Developer Guide_.>
  take arn, name <Arn>
    like arn-string
    void take
    note <The Amazon Resource Name (ARN) of the proposal. For more information about ARNs and their format, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) in the _AWS General Reference_.>