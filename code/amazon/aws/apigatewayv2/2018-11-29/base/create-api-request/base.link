
load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/arn
  take form arn

load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/cors
  take form cors

load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/protocol-type
  take form protocol-type

load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/selection-expression
  take form selection-expression

load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/selection-key
  take form selection-key

load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/string-with-length-between0-and1024
  take form string-with-length-between0-and1024

load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/string-with-length-between1-and128
  take form string-with-length-between1-and128

load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/string-with-length-between1-and64
  take form string-with-length-between1-and64

load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/tags
  take form tags

load @treesurf/snow/amazonaws.com/apigatewayv2/2018-11-29/base/uri-with-length-between1-and2048
  take form uri-with-length-between1-and2048

load @treesurf/snow/base/boolean
  take form boolean

form create-api-request, name <CreateApiRequest>
  note <Creates a new Api resource to represent an API.>
  take api-key-selection-expression, name <ApiKeySelectionExpression>
    like selection-expression
    void take
    note <An API key selection expression. Supported only for WebSocket APIs. See [API Key Selection Expressions](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-apikey-selection-expressions).>
    host xml
      host name, text <apiKeySelectionExpression>
  take cors-configuration, name <CorsConfiguration>
    like cors
    void take
    note <A CORS configuration. Supported only for HTTP APIs. See [Configuring CORS](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-cors.html) for more information.>
    host xml
      host name, text <corsConfiguration>
  take credentials-arn, name <CredentialsArn>
    like arn
    void take
    note <This property is part of quick create. It specifies the credentials required for the integration, if any. For a Lambda integration, three options are available. To specify an IAM Role for API Gateway to assume, use the role's Amazon Resource Name (ARN). To require that the caller's identity be passed through from the request, specify arn:aws:iam::*:user/*. To use resource-based permissions on supported AWS services, specify null. Currently, this property is not used for HTTP integrations. Supported only for HTTP APIs.>
    host xml
      host name, text <credentialsArn>
  take description, name <Description>
    like string-with-length-between0-and1024
    void take
    note <The description of the API.>
    host xml
      host name, text <description>
  take disable-schema-validation, name <DisableSchemaValidation>
    like boolean
    void take
    note <Avoid validating models when creating a deployment. Supported only for WebSocket APIs.>
    host xml
      host name, text <disableSchemaValidation>
  take disable-execute-api-endpoint, name <DisableExecuteApiEndpoint>
    like boolean
    void take
    note <Specifies whether clients can invoke your API by using the default execute-api endpoint. By default, clients can invoke your API with the default https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To require that clients use a custom domain name to invoke your API, disable the default endpoint.>
    host xml
      host name, text <disableExecuteApiEndpoint>
  take name, name <Name>
    like string-with-length-between1-and128
    note <The name of the API.>
    host xml
      host name, text <name>
  take protocol-type, name <ProtocolType>
    like protocol-type
    note <The API protocol.>
    host xml
      host name, text <protocolType>
  take route-key, name <RouteKey>
    like selection-key
    void take
    note <This property is part of quick create. If you don't specify a routeKey, a default route of $default is created. The $default route acts as a catch-all for any request made to your API, for a particular stage. The $default route key can't be modified. You can add routes after creating the API, and you can update the route keys of additional routes. Supported only for HTTP APIs.>
    host xml
      host name, text <routeKey>
  take route-selection-expression, name <RouteSelectionExpression>
    like selection-expression
    void take
    note <The route selection expression for the API. For HTTP APIs, the routeSelectionExpression must be ${request.method} ${request.path}. If not provided, this will be the default for HTTP APIs. This property is required for WebSocket APIs.>
    host xml
      host name, text <routeSelectionExpression>
  take tags, name <Tags>
    like tags
    void take
    note <The collection of tags. Each tag element is associated with a given resource.>
    host xml
      host name, text <tags>
  take target, name <Target>
    like uri-with-length-between1-and2048
    void take
    note <This property is part of quick create. Quick create produces an API with an integration, a default catch-all route, and a default stage which is configured to automatically deploy changes. For HTTP integrations, specify a fully qualified URL. For Lambda integrations, specify a function ARN. The type of the integration will be HTTP_PROXY or AWS_PROXY, respectively. Supported only for HTTP APIs.>
    host xml
      host name, text <target>
  take version, name <Version>
    like string-with-length-between1-and64
    void take
    note <A version identifier for the API.>
    host xml
      host name, text <version>