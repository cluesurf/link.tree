
load @tunebond/snow/amazonaws.com/apigatewayv2/2018-11-29/base/authorization-scopes
  take form authorization-scopes

load @tunebond/snow/amazonaws.com/apigatewayv2/2018-11-29/base/authorization-type
  take form authorization-type

load @tunebond/snow/amazonaws.com/apigatewayv2/2018-11-29/base/id
  take form id

load @tunebond/snow/amazonaws.com/apigatewayv2/2018-11-29/base/route-models
  take form route-models

load @tunebond/snow/amazonaws.com/apigatewayv2/2018-11-29/base/route-parameters
  take form route-parameters

load @tunebond/snow/amazonaws.com/apigatewayv2/2018-11-29/base/selection-expression
  take form selection-expression

load @tunebond/snow/amazonaws.com/apigatewayv2/2018-11-29/base/selection-key
  take form selection-key

load @tunebond/snow/amazonaws.com/apigatewayv2/2018-11-29/base/string-with-length-between1-and128
  take form string-with-length-between1-and128

load @tunebond/snow/amazonaws.com/apigatewayv2/2018-11-29/base/string-with-length-between1-and64
  take form string-with-length-between1-and64

load @tunebond/snow/base/boolean
  take form boolean

form route, name <Route>
  note <Represents a route.>
  take api-gateway-managed, name <ApiGatewayManaged>
    like boolean
    void take
    note <Specifies whether a route is managed by API Gateway. If you created an API using quick create, the $default route is managed by API Gateway. You can't modify the $default route key.>
    host xml
      host name, text <apiGatewayManaged>
  take api-key-required, name <ApiKeyRequired>
    like boolean
    void take
    note <Specifies whether an API key is required for this route. Supported only for WebSocket APIs.>
    host xml
      host name, text <apiKeyRequired>
  take authorization-scopes, name <AuthorizationScopes>
    like authorization-scopes
    void take
    note <A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.>
    host xml
      host name, text <authorizationScopes>
  take authorization-type, name <AuthorizationType>
    like authorization-type
    void take
    note <The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer.>
    host xml
      host name, text <authorizationType>
  take authorizer-id, name <AuthorizerId>
    like id
    void take
    note <The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.>
    host xml
      host name, text <authorizerId>
  take model-selection-expression, name <ModelSelectionExpression>
    like selection-expression
    void take
    note <The model selection expression for the route. Supported only for WebSocket APIs.>
    host xml
      host name, text <modelSelectionExpression>
  take operation-name, name <OperationName>
    like string-with-length-between1-and64
    void take
    note <The operation name for the route.>
    host xml
      host name, text <operationName>
  take request-models, name <RequestModels>
    like route-models
    void take
    note <The request models for the route. Supported only for WebSocket APIs.>
    host xml
      host name, text <requestModels>
  take request-parameters, name <RequestParameters>
    like route-parameters
    void take
    note <The request parameters for the route. Supported only for WebSocket APIs.>
    host xml
      host name, text <requestParameters>
  take route-id, name <RouteId>
    like id
    void take
    note <The route ID.>
    host xml
      host name, text <routeId>
  take route-key, name <RouteKey>
    like selection-key
    note <The route key for the route.>
    host xml
      host name, text <routeKey>
  take route-response-selection-expression, name <RouteResponseSelectionExpression>
    like selection-expression
    void take
    note <The route response selection expression for the route. Supported only for WebSocket APIs.>
    host xml
      host name, text <routeResponseSelectionExpression>
  take target, name <Target>
    like string-with-length-between1-and128
    void take
    note <The target for the route.>
    host xml
      host name, text <target>