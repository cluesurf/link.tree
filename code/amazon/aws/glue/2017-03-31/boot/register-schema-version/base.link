
load @drumwork/snow/amazonaws.com/glue/2017-03-31/base/access-denied-exception
  take form access-denied-exception

load @drumwork/snow/amazonaws.com/glue/2017-03-31/base/concurrent-modification-exception
  take form concurrent-modification-exception

load @drumwork/snow/amazonaws.com/glue/2017-03-31/base/entity-not-found-exception
  take form entity-not-found-exception

load @drumwork/snow/amazonaws.com/glue/2017-03-31/base/internal-service-exception
  take form internal-service-exception

load @drumwork/snow/amazonaws.com/glue/2017-03-31/base/invalid-input-exception
  take form invalid-input-exception

load @drumwork/snow/amazonaws.com/glue/2017-03-31/base/register-schema-version-response
  take form register-schema-version-response

load @drumwork/snow/amazonaws.com/glue/2017-03-31/base/resource-number-limit-exceeded-exception
  take form resource-number-limit-exceeded-exception

load @drumwork/snow/base/native-string
  take form native-string

boot register-schema-version, name <RegisterSchemaVersion>
  note <Adds a new version to the existing schema. Returns an error if new version of schema does not meet the compatibility requirements of the schema set. This API will not create a new schema set and will return a 404 error if the schema set is not already present in the Schema Registry.

If this is the first schema definition to be registered in the Schema Registry, this API will store the schema version and return immediately. Otherwise, this call has the potential to run longer than other operations due to compatibility modes. You can call the `GetSchemaVersion` API with the `SchemaVersionId` to check compatibility modes.

If the same schema definition is already stored in Schema Registry as a version, the schema ID of the existing schema is returned to the caller.>

  take x-amz-target
    like native-string
  take register-schema-version-input, like register-schema-version-input

  line </#X-Amz-Target=AWSGlue.RegisterSchemaVersion>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan register-schema-version-input

  loot 200
    seed json, like register-schema-version-response
    note <Success>
  loot 480
    seed json, like invalid-input-exception
    note <InvalidInputException>
  loot 481
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 482
    seed json, like entity-not-found-exception
    note <EntityNotFoundException>
  loot 483
    seed json, like resource-number-limit-exceeded-exception
    note <ResourceNumberLimitExceededException>
  loot 484
    seed json, like concurrent-modification-exception
    note <ConcurrentModificationException>
  loot 485
    seed json, like internal-service-exception
    note <InternalServiceException>