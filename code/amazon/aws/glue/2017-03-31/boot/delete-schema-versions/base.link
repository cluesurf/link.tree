
load @textsurf/snow/amazonaws.com/glue/2017-03-31/base/access-denied-exception
  take form access-denied-exception

load @textsurf/snow/amazonaws.com/glue/2017-03-31/base/concurrent-modification-exception
  take form concurrent-modification-exception

load @textsurf/snow/amazonaws.com/glue/2017-03-31/base/delete-schema-versions-response
  take form delete-schema-versions-response

load @textsurf/snow/amazonaws.com/glue/2017-03-31/base/entity-not-found-exception
  take form entity-not-found-exception

load @textsurf/snow/amazonaws.com/glue/2017-03-31/base/invalid-input-exception
  take form invalid-input-exception

load @textsurf/snow/base/native-string
  take form native-string

boot delete-schema-versions, name <DeleteSchemaVersions>
  deed post
  note <Remove versions from the specified schema. A version number or range may be supplied. If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned. Calling the `GetSchemaVersions` API after this call will list the status of the deleted versions.

When the range of version numbers contain check pointed version, the API will return a 409 conflict and will not proceed with the deletion. You have to remove the checkpoint first using the `DeleteSchemaCheckpoint` API before using this API.

You cannot use the `DeleteSchemaVersions` API to delete the first schema version in the schema set. The first schema version can only be deleted by the `DeleteSchema` API. This operation will also delete the attached `SchemaVersionMetadata` under the schema versions. Hard deletes will be enforced on the database.

If the compatibility mode forbids deleting of a version that is necessary, such as BACKWARDS_FULL, an error is returned.>

  take x-amz-target
    like native-string
  take delete-schema-versions-input, like delete-schema-versions-input

  line </#X-Amz-Target=AWSGlue.DeleteSchemaVersions>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan delete-schema-versions-input

  loot 200
    seed json, like delete-schema-versions-response
    note <Success>
  loot 480
    seed json, like invalid-input-exception
    note <InvalidInputException>
  loot 481
    seed json, like entity-not-found-exception
    note <EntityNotFoundException>
  loot 482
    seed json, like access-denied-exception
    note <AccessDeniedException>
  loot 483
    seed json, like concurrent-modification-exception
    note <ConcurrentModificationException>