
load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/generic-string
  take form generic-string

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/glue-version-string
  take form glue-version-string

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/integer-value
  take form integer-value

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/map-value
  take form map-value

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/name-string
  take form name-string

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/nullable-integer
  take form nullable-integer

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/public-keys-list
  take form public-keys-list

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/role-arn
  take form role-arn

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/string-list
  take form string-list

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/timestamp-value
  take form timestamp-value

load @nerdbond/snow/amazonaws.com/glue/2017-03-31/base/worker-type
  take form worker-type

form dev-endpoint, name <DevEndpoint>
  note <A development endpoint where a developer can remotely debug extract, transform, and load (ETL) scripts.>
  take endpoint-name, name <EndpointName>
    like generic-string
    void take
    note <The name of the `DevEndpoint`.>
  take role-arn, name <RoleArn>
    like role-arn
    void take
    note <The Amazon Resource Name (ARN) of the IAM role used in this `DevEndpoint`.>
  take security-group-ids, name <SecurityGroupIds>
    like string-list
    void take
    note <A list of security group identifiers used in this `DevEndpoint`.>
  take subnet-id, name <SubnetId>
    like generic-string
    void take
    note <The subnet ID for this `DevEndpoint`.>
  take yarn-endpoint-address, name <YarnEndpointAddress>
    like generic-string
    void take
    note <The YARN endpoint address used by this `DevEndpoint`.>
  take private-address, name <PrivateAddress>
    like generic-string
    void take
    note <A private IP address to access the `DevEndpoint` within a VPC if the `DevEndpoint` is created within one. The `PrivateAddress` field is present only when you create the `DevEndpoint` within your VPC.>
  take zeppelin-remote-spark-interpreter-port, name <ZeppelinRemoteSparkInterpreterPort>
    like integer-value
    void take
    note <The Apache Zeppelin port for the remote Apache Spark interpreter.>
  take public-address, name <PublicAddress>
    like generic-string
    void take
    note <The public IP address used by this `DevEndpoint`. The `PublicAddress` field is present only when you create a non-virtual private cloud (VPC) `DevEndpoint`.>
  take status, name <Status>
    like generic-string
    void take
    note <The current status of this `DevEndpoint`.>
  take worker-type, name <WorkerType>
    like worker-type
    void take
    note <The type of predefined worker that is allocated to the development endpoint. Accepts a value of Standard, G.1X, or G.2X.

- For the `Standard` worker type, each worker provides 4 vCPU, 16 GB of memory and a 50GB disk, and 2 executors per worker.

- For the `G.1X` worker type, each worker maps to 1 DPU (4 vCPU, 16 GB of memory, 64 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.

- For the `G.2X` worker type, each worker maps to 2 DPU (8 vCPU, 32 GB of memory, 128 GB disk), and provides 1 executor per worker. We recommend this worker type for memory-intensive jobs.

Known issue: when a development endpoint is created with the `G.2X` `WorkerType` configuration, the Spark drivers for the development endpoint will run on 4 vCPU, 16 GB of memory, and a 64 GB disk.>
  take glue-version, name <GlueVersion>
    like glue-version-string
    void take
    note <Glue version determines the versions of Apache Spark and Python that Glue supports. The Python version indicates the version supported for running your ETL scripts on development endpoints.

For more information about the available Glue versions and corresponding Spark and Python versions, see [Glue version](https://docs.aws.amazon.com/glue/latest/dg/add-job.html) in the developer guide.

Development endpoints that are created without specifying a Glue version default to Glue 0.9.

You can specify a version of Python support for development endpoints by using the `Arguments` parameter in the `CreateDevEndpoint` or `UpdateDevEndpoint` APIs. If no arguments are provided, the version defaults to Python 2.>
  take number-of-workers, name <NumberOfWorkers>
    like nullable-integer
    void take
    note <The number of workers of a defined `workerType` that are allocated to the development endpoint.

The maximum number of workers you can define are 299 for `G.1X`, and 149 for `G.2X`.>
  take number-of-nodes, name <NumberOfNodes>
    like integer-value
    void take
    note <The number of Glue Data Processing Units (DPUs) allocated to this `DevEndpoint`.>
  take availability-zone, name <AvailabilityZone>
    like generic-string
    void take
    note <The AWS Availability Zone where this `DevEndpoint` is located.>
  take vpc-id, name <VpcId>
    like generic-string
    void take
    note <The ID of the virtual private cloud (VPC) used by this `DevEndpoint`.>
  take extra-python-libs-s3-path, name <ExtraPythonLibsS3Path>
    like generic-string
    void take
    note <The paths to one or more Python libraries in an Amazon S3 bucket that should be loaded in your `DevEndpoint`. Multiple values must be complete paths separated by a comma.

You can only use pure Python libraries with a `DevEndpoint`. Libraries that rely on C extensions, such as the [pandas](http://pandas.pydata.org/) Python data analysis library, are not currently supported.>
  take extra-jars-s3-path, name <ExtraJarsS3Path>
    like generic-string
    void take
    note <The path to one or more Java `.jar` files in an S3 bucket that should be loaded in your `DevEndpoint`.

You can only use pure Java/Scala libraries with a `DevEndpoint`.>
  take failure-reason, name <FailureReason>
    like generic-string
    void take
    note <The reason for a current failure in this `DevEndpoint`.>
  take last-update-status, name <LastUpdateStatus>
    like generic-string
    void take
    note <The status of the last update.>
  take created-timestamp, name <CreatedTimestamp>
    like timestamp-value
    void take
    note <The point in time at which this DevEndpoint was created.>
  take last-modified-timestamp, name <LastModifiedTimestamp>
    like timestamp-value
    void take
    note <The point in time at which this `DevEndpoint` was last modified.>
  take public-key, name <PublicKey>
    like generic-string
    void take
    note <The public key to be used by this `DevEndpoint` for authentication. This attribute is provided for backward compatibility because the recommended attribute to use is public keys.>
  take public-keys, name <PublicKeys>
    like public-keys-list
    void take
    note <A list of public keys to be used by the `DevEndpoints` for authentication. Using this attribute is preferred over a single public key because the public keys allow you to have a different private key per client.

If you previously created an endpoint with a public key, you must remove that key to be able to set a list of public keys. Call the `UpdateDevEndpoint` API operation with the public key content in the `deletePublicKeys` attribute, and the list of new keys in the `addPublicKeys` attribute.>
  take security-configuration, name <SecurityConfiguration>
    like name-string
    void take
    note <The name of the `SecurityConfiguration` structure to be used with this `DevEndpoint`.>
  take arguments, name <Arguments>
    like map-value
    void take
    note <A map of arguments used to configure the `DevEndpoint`.

Valid arguments are:

- `"--enable-glue-datacatalog": ""`

You can specify a version of Python support for development endpoints by using the `Arguments` parameter in the `CreateDevEndpoint` or `UpdateDevEndpoint` APIs. If no arguments are provided, the version defaults to Python 2.>