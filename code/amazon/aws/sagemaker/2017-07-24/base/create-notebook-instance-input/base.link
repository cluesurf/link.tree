
load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/additional-code-repository-names-or-urls
  take form additional-code-repository-names-or-urls

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/code-repository-name-or-url
  take form code-repository-name-or-url

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/direct-internet-access
  take form direct-internet-access

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/instance-type
  take form instance-type

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/kms-key-id
  take form kms-key-id

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/notebook-instance-accelerator-types
  take form notebook-instance-accelerator-types

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/notebook-instance-lifecycle-config-name
  take form notebook-instance-lifecycle-config-name

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/notebook-instance-name
  take form notebook-instance-name

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/notebook-instance-volume-size-in-gb
  take form notebook-instance-volume-size-in-gb

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/platform-identifier
  take form platform-identifier

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/role-arn
  take form role-arn

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/root-access
  take form root-access

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/security-group-ids
  take form security-group-ids

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/subnet-id
  take form subnet-id

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/tag-list
  take form tag-list

form create-notebook-instance-input, name <CreateNotebookInstanceInput>
  take notebook-instance-name, name <NotebookInstanceName>
    like notebook-instance-name
    note <The name of the new notebook instance.>
  take instance-type, name <InstanceType>
    like instance-type
    note <The type of ML compute instance to launch for the notebook instance.>
  take subnet-id, name <SubnetId>
    like subnet-id
    void take
    note <The ID of the subnet in a VPC to which you would like to have a connectivity from your ML compute instance.>
  take security-group-ids, name <SecurityGroupIds>
    like security-group-ids
    void take
    note <The VPC security group IDs, in the form sg-xxxxxxxx. The security groups must be for the same VPC as specified in the subnet.>
  take role-arn, name <RoleArn>
    like role-arn
    note <When you send any requests to Amazon Web Services resources from the notebook instance, Amazon SageMaker assumes this role to perform tasks on your behalf. You must grant this role necessary permissions so Amazon SageMaker can perform these tasks. The policy must allow the Amazon SageMaker service principal (sagemaker.amazonaws.com) permissions to assume this role. For more information, see [Amazon SageMaker Roles](https://docs.aws.amazon.com/sagemaker/latest/dg/sagemaker-roles.html).

To be able to pass this role to Amazon SageMaker, the caller of this API must have the `iam:PassRole` permission.>
  take kms-key-id, name <KmsKeyId>
    like kms-key-id
    void take
    note <The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to your notebook instance. The KMS key you provide must be enabled. For information, see [Enabling and Disabling Keys](https://docs.aws.amazon.com/kms/latest/developerguide/enabling-keys.html) in the _Amazon Web Services Key Management Service Developer Guide_.>
  take tags, name <Tags>
    like tag-list
    void take
    note <An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see [Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).>
  take lifecycle-config-name, name <LifecycleConfigName>
    like notebook-instance-lifecycle-config-name
    void take
    note <The name of a lifecycle configuration to associate with the notebook instance. For information about lifestyle configurations, see [Step 2.1: (Optional) Customize a Notebook Instance](https://docs.aws.amazon.com/sagemaker/latest/dg/notebook-lifecycle-config.html).>
  take direct-internet-access, name <DirectInternetAccess>
    like direct-internet-access
    void take
    note <Sets whether Amazon SageMaker provides internet access to the notebook instance. If you set this to `Disabled` this notebook instance is able to access resources only in your VPC, and is not be able to connect to Amazon SageMaker training and endpoint services unless you configure a NAT Gateway in your VPC.

For more information, see [Notebook Instances Are Internet-Enabled by Default](https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-additional-considerations.html#appendix-notebook-and-internet-access). You can set the value of this parameter to `Disabled` only if you set a value for the `SubnetId` parameter.>
  take volume-size-in-gb, name <VolumeSizeInGB>
    like notebook-instance-volume-size-in-gb
    void take
    note <The size, in GB, of the ML storage volume to attach to the notebook instance. The default value is 5 GB.>
  take accelerator-types, name <AcceleratorTypes>
    like notebook-instance-accelerator-types
    void take
    note <A list of Elastic Inference (EI) instance types to associate with this notebook instance. Currently, only one instance type can be associated with a notebook instance. For more information, see [Using Elastic Inference in Amazon SageMaker](https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html).>
  take default-code-repository, name <DefaultCodeRepository>
    like code-repository-name-or-url
    void take
    note <A Git repository to associate with the notebook instance as its default code repository. This can be either the name of a Git repository stored as a resource in your account, or the URL of a Git repository in [Amazon Web Services CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository. When you open a notebook instance, it opens in the directory that contains this repository. For more information, see [Associating Git Repositories with Amazon SageMaker Notebook Instances](https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html).>
  take additional-code-repositories, name <AdditionalCodeRepositories>
    like additional-code-repository-names-or-urls
    void take
    note <An array of up to three Git repositories to associate with the notebook instance. These can be either the names of Git repositories stored as resources in your account, or the URL of Git repositories in [Amazon Web Services CodeCommit](https://docs.aws.amazon.com/codecommit/latest/userguide/welcome.html) or in any other Git repository. These repositories are cloned at the same level as the default repository of your notebook instance. For more information, see [Associating Git Repositories with Amazon SageMaker Notebook Instances](https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-git-repo.html).>
  take root-access, name <RootAccess>
    like root-access
    void take
    note <Whether root access is enabled or disabled for users of the notebook instance. The default value is `Enabled`.

Lifecycle configurations need root access to be able to set up a notebook instance. Because of this, lifecycle configurations associated with a notebook instance always run with root access even if you disable root access for users.>
  take platform-identifier, name <PlatformIdentifier>
    like platform-identifier
    void take
    note <The platform identifier of the notebook instance runtime environment.>