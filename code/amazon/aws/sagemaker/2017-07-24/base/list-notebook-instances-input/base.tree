
load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/code-repository-contains
  take form code-repository-contains

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/code-repository-name-or-url
  take form code-repository-name-or-url

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/creation-time
  take form creation-time

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/last-modified-time
  take form last-modified-time

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/max-results
  take form max-results

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/next-token
  take form next-token

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/notebook-instance-lifecycle-config-name
  take form notebook-instance-lifecycle-config-name

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/notebook-instance-name-contains
  take form notebook-instance-name-contains

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/notebook-instance-sort-key
  take form notebook-instance-sort-key

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/notebook-instance-sort-order
  take form notebook-instance-sort-order

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/notebook-instance-status
  take form notebook-instance-status

form list-notebook-instances-input, name <ListNotebookInstancesInput>
  take next-token, name <NextToken>
    like next-token
    void take
    note <If the previous call to the `ListNotebookInstances` is truncated, the response includes a `NextToken`. You can use this token in your subsequent `ListNotebookInstances` request to fetch the next set of notebook instances.

You might specify a filter or a sort order in your request. When response is truncated, you must use the same values for the filer and sort order in the next request.>
  take max-results, name <MaxResults>
    like max-results
    void take
    note <The maximum number of notebook instances to return.>
  take sort-by, name <SortBy>
    like notebook-instance-sort-key
    void take
    note <The field to sort results by. The default is `Name`.>
  take sort-order, name <SortOrder>
    like notebook-instance-sort-order
    void take
    note <The sort order for results.>
  take name-contains, name <NameContains>
    like notebook-instance-name-contains
    void take
    note <A string in the notebook instances' name. This filter returns only notebook instances whose name contains the specified string.>
  take creation-time-before, name <CreationTimeBefore>
    like creation-time
    void take
    note <A filter that returns only notebook instances that were created before the specified time (timestamp).>
  take creation-time-after, name <CreationTimeAfter>
    like creation-time
    void take
    note <A filter that returns only notebook instances that were created after the specified time (timestamp).>
  take last-modified-time-before, name <LastModifiedTimeBefore>
    like last-modified-time
    void take
    note <A filter that returns only notebook instances that were modified before the specified time (timestamp).>
  take last-modified-time-after, name <LastModifiedTimeAfter>
    like last-modified-time
    void take
    note <A filter that returns only notebook instances that were modified after the specified time (timestamp).>
  take status-equals, name <StatusEquals>
    like notebook-instance-status
    void take
    note <A filter that returns only notebook instances with the specified status.>
  take notebook-instance-lifecycle-config-name-contains, name <NotebookInstanceLifecycleConfigNameContains>
    like notebook-instance-lifecycle-config-name
    void take
    note <A string in the name of a notebook instances lifecycle configuration associated with this notebook instance. This filter returns only notebook instances associated with a lifecycle configuration with a name that contains the specified string.>
  take default-code-repository-contains, name <DefaultCodeRepositoryContains>
    like code-repository-contains
    void take
    note <A string in the name or URL of a Git repository associated with this notebook instance. This filter returns only notebook instances associated with a git repository with a name that contains the specified string.>
  take additional-code-repository-equals, name <AdditionalCodeRepositoryEquals>
    like code-repository-name-or-url
    void take
    note <A filter that returns only notebook instances with associated with the specified git repository.>
