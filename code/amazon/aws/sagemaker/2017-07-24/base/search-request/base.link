
load @textsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/max-results
  take form max-results

load @textsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/next-token
  take form next-token

load @textsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/resource-property-name
  take form resource-property-name

load @textsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/resource-type
  take form resource-type

load @textsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/search-expression
  take form search-expression

load @textsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/search-sort-order
  take form search-sort-order

form search-request, name <SearchRequest>
  take resource, name <Resource>
    like resource-type
    note <The name of the Amazon SageMaker resource to search for.>
  take search-expression, name <SearchExpression>
    like search-expression
    void take
    note <A Boolean conditional statement. Resources must satisfy this condition to be included in search results. You must provide at least one subexpression, filter, or nested filter. The maximum number of recursive `SubExpressions`, `NestedFilters`, and `Filters` that can be included in a `SearchExpression` object is 50.>
  take sort-by, name <SortBy>
    like resource-property-name
    void take
    note <The name of the resource property used to sort the `SearchResults`. The default is `LastModifiedTime`.>
  take sort-order, name <SortOrder>
    like search-sort-order
    void take
    note <How `SearchResults` are ordered. Valid values are `Ascending` or `Descending`. The default is `Descending`.>
  take next-token, name <NextToken>
    like next-token
    void take
    note <If more than `MaxResults` resources match the specified `SearchExpression`, the response includes a `NextToken`. The `NextToken` can be passed to the next `SearchRequest` to continue retrieving results.>
  take max-results, name <MaxResults>
    like max-results
    void take
    note <The maximum number of results to return.>
