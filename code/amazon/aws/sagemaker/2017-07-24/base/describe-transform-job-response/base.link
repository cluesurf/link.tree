
load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/auto-ml-job-arn
  take form auto-ml-job-arn

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/batch-strategy
  take form batch-strategy

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/data-processing
  take form data-processing

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/experiment-config
  take form experiment-config

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/failure-reason
  take form failure-reason

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/labeling-job-arn
  take form labeling-job-arn

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/max-concurrent-transforms
  take form max-concurrent-transforms

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/max-payload-in-mb
  take form max-payload-in-mb

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/model-client-config
  take form model-client-config

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/model-name
  take form model-name

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/timestamp
  take form timestamp

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/transform-environment-map
  take form transform-environment-map

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/transform-input
  take form transform-input

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/transform-job-arn
  take form transform-job-arn

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/transform-job-name
  take form transform-job-name

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/transform-job-status
  take form transform-job-status

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/transform-output
  take form transform-output

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/transform-resources
  take form transform-resources

form describe-transform-job-response, name <DescribeTransformJobResponse>
  take transform-job-name, name <TransformJobName>
    like transform-job-name
    note <The name of the transform job.>
  take transform-job-arn, name <TransformJobArn>
    like transform-job-arn
    note <The Amazon Resource Name (ARN) of the transform job.>
  take transform-job-status, name <TransformJobStatus>
    like transform-job-status
    note <The status of the transform job. If the transform job failed, the reason is returned in the `FailureReason` field.>
  take failure-reason, name <FailureReason>
    like failure-reason
    void take
    note <If the transform job failed, `FailureReason` describes why it failed. A transform job creates a log file, which includes error messages, and stores it as an Amazon S3 object. For more information, see [Log Amazon SageMaker Events with Amazon CloudWatch](https://docs.aws.amazon.com/sagemaker/latest/dg/logging-cloudwatch.html).>
  take model-name, name <ModelName>
    like model-name
    note <The name of the model used in the transform job.>
  take max-concurrent-transforms, name <MaxConcurrentTransforms>
    like max-concurrent-transforms
    void take
    note <The maximum number of parallel requests on each instance node that can be launched in a transform job. The default value is 1.>
  take model-client-config, name <ModelClientConfig>
    like model-client-config
    void take
    note <The timeout and maximum number of retries for processing a transform job invocation.>
  take max-payload-in-mb, name <MaxPayloadInMB>
    like max-payload-in-mb
    void take
    note <The maximum payload size, in MB, used in the transform job.>
  take batch-strategy, name <BatchStrategy>
    like batch-strategy
    void take
    note <Specifies the number of records to include in a mini-batch for an HTTP inference request. A _record_ _is a single unit of input data that inference can be made on. For example, a single line in a CSV file is a record._

_

To enable the batch strategy, you must set `SplitType` to `Line`, `RecordIO`, or `TFRecord`.

_>
  take environment, name <Environment>
    like transform-environment-map
    void take
    note <The environment variables to set in the Docker container. We support up to 16 key and values entries in the map.>
  take transform-input, name <TransformInput>
    like transform-input
    note <Describes the dataset to be transformed and the Amazon S3 location where it is stored.>
  take transform-output, name <TransformOutput>
    like transform-output
    void take
    note <Identifies the Amazon S3 location where you want Amazon SageMaker to save the results from the transform job.>
  take transform-resources, name <TransformResources>
    like transform-resources
    note <Describes the resources, including ML instance types and ML instance count, to use for the transform job.>
  take creation-time, name <CreationTime>
    like timestamp
    note <A timestamp that shows when the transform Job was created.>
  take transform-start-time, name <TransformStartTime>
    like timestamp
    void take
    note <Indicates when the transform job starts on ML instances. You are billed for the time interval between this time and the value of `TransformEndTime`.>
  take transform-end-time, name <TransformEndTime>
    like timestamp
    void take
    note <Indicates when the transform job has been completed, or has stopped or failed. You are billed for the time interval between this time and the value of `TransformStartTime`.>
  take labeling-job-arn, name <LabelingJobArn>
    like labeling-job-arn
    void take
    note <The Amazon Resource Name (ARN) of the Amazon SageMaker Ground Truth labeling job that created the transform or training job.>
  take auto-ml-job-arn, name <AutoMLJobArn>
    like auto-ml-job-arn
    void take
    note <The Amazon Resource Name (ARN) of the AutoML transform job.>
  take data-processing, name <DataProcessing>
    like data-processing
    void take
  take experiment-config, name <ExperimentConfig>
    like experiment-config
    void take