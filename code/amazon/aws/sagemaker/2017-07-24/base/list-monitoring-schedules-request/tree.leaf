
load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/endpoint-name
  take form endpoint-name

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/max-results
  take form max-results

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/monitoring-job-definition-name
  take form monitoring-job-definition-name

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/monitoring-schedule-sort-key
  take form monitoring-schedule-sort-key

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/monitoring-type
  take form monitoring-type

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/name-contains
  take form name-contains

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/next-token
  take form next-token

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/schedule-status
  take form schedule-status

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/sort-order
  take form sort-order

load @termsurf/snow/amazonaws.com/sagemaker/2017-07-24/base/timestamp
  take form timestamp

form list-monitoring-schedules-request, name <ListMonitoringSchedulesRequest>
  take endpoint-name, name <EndpointName>
    like endpoint-name
    void take
    note <Name of a specific endpoint to fetch schedules for.>
  take sort-by, name <SortBy>
    like monitoring-schedule-sort-key
    void take
    note <Whether to sort results by `Status`, `CreationTime`, `ScheduledTime` field. The default is `CreationTime`.>
  take sort-order, name <SortOrder>
    like sort-order
    void take
    note <Whether to sort the results in `Ascending` or `Descending` order. The default is `Descending`.>
  take next-token, name <NextToken>
    like next-token
    void take
    note <The token returned if the response is truncated. To retrieve the next set of job executions, use it in the next request.>
  take max-results, name <MaxResults>
    like max-results
    void take
    note <The maximum number of jobs to return in the response. The default value is 10.>
  take name-contains, name <NameContains>
    like name-contains
    void take
    note <Filter for monitoring schedules whose name contains a specified string.>
  take creation-time-before, name <CreationTimeBefore>
    like timestamp
    void take
    note <A filter that returns only monitoring schedules created before a specified time.>
  take creation-time-after, name <CreationTimeAfter>
    like timestamp
    void take
    note <A filter that returns only monitoring schedules created after a specified time.>
  take last-modified-time-before, name <LastModifiedTimeBefore>
    like timestamp
    void take
    note <A filter that returns only monitoring schedules modified before a specified time.>
  take last-modified-time-after, name <LastModifiedTimeAfter>
    like timestamp
    void take
    note <A filter that returns only monitoring schedules modified after a specified time.>
  take status-equals, name <StatusEquals>
    like schedule-status
    void take
    note <A filter that returns only monitoring schedules modified before a specified time.>
  take monitoring-job-definition-name, name <MonitoringJobDefinitionName>
    like monitoring-job-definition-name
    void take
    note <Gets a list of the monitoring schedules for the specified monitoring job definition.>
  take monitoring-type-equals, name <MonitoringTypeEquals>
    like monitoring-type
    void take
    note <A filter that returns only the monitoring schedules for the specified monitoring type.>
