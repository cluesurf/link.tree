
load @drumwork/snow/amazonaws.com/sagemaker/2017-07-24/base/async-inference-config
  take form async-inference-config

load @drumwork/snow/amazonaws.com/sagemaker/2017-07-24/base/data-capture-config
  take form data-capture-config

load @drumwork/snow/amazonaws.com/sagemaker/2017-07-24/base/endpoint-config-name
  take form endpoint-config-name

load @drumwork/snow/amazonaws.com/sagemaker/2017-07-24/base/kms-key-id
  take form kms-key-id

load @drumwork/snow/amazonaws.com/sagemaker/2017-07-24/base/production-variant-list
  take form production-variant-list

load @drumwork/snow/amazonaws.com/sagemaker/2017-07-24/base/tag-list
  take form tag-list

form create-endpoint-config-input, name <CreateEndpointConfigInput>
  take endpoint-config-name, name <EndpointConfigName>
    like endpoint-config-name
    note <The name of the endpoint configuration. You specify this name in a CreateEndpoint request.>
  take production-variants, name <ProductionVariants>
    like production-variant-list
    note <An list of `ProductionVariant` objects, one for each model that you want to host at this endpoint.>
  take data-capture-config, name <DataCaptureConfig>
    like data-capture-config
    void take
  take tags, name <Tags>
    like tag-list
    void take
    note <An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see [Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).>
  take kms-key-id, name <KmsKeyId>
    like kms-key-id
    void take
    note <The Amazon Resource Name (ARN) of a Amazon Web Services Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.

The KmsKeyId can be any of the following formats:

- Key ID: `1234abcd-12ab-34cd-56ef-1234567890ab`

- Key ARN: `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`

- Alias name: `alias/ExampleAlias`

- Alias name ARN: `arn:aws:kms:us-west-2:111122223333:alias/ExampleAlias`

The KMS key policy must grant permission to the IAM role that you specify in your `CreateEndpoint`, `UpdateEndpoint` requests. For more information, refer to the Amazon Web Services Key Management Service section [Using Key Policies in Amazon Web Services KMS](https://docs.aws.amazon.com/kms/latest/developerguide/key-policies.html)

Certain Nitro-based instances include local storage, dependent on the instance type. Local storage volumes are encrypted using a hardware module on the instance. You can't request a `KmsKeyId` when using an instance type with local storage. If any of the models that you specify in the `ProductionVariants` parameter use nitro-based instances with local storage, do not specify a value for the `KmsKeyId` parameter. If you specify a value for `KmsKeyId` when using any nitro-based instances with local storage, the call to `CreateEndpointConfig` fails.

For a list of instance types that support local instance storage, see [Instance Store Volumes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/InstanceStorage.html#instance-store-volumes).

For more information about local instance storage encryption, see [SSD Instance Store Volumes](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ssd-instance-store.html).>
  take async-inference-config, name <AsyncInferenceConfig>
    like async-inference-config
    void take
    note <Specifies configuration for how an endpoint performs asynchronous inference. This is a required field in order for your Endpoint to be invoked using [`InvokeEndpointAsync`](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_runtime_InvokeEndpoint.html) .>