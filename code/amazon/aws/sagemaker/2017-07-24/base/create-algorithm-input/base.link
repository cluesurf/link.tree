
load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/algorithm-validation-specification
  take form algorithm-validation-specification

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/certify-for-marketplace
  take form certify-for-marketplace

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/entity-description
  take form entity-description

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/entity-name
  take form entity-name

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/inference-specification
  take form inference-specification

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/tag-list
  take form tag-list

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/training-specification
  take form training-specification

form create-algorithm-input, name <CreateAlgorithmInput>
  take algorithm-name, name <AlgorithmName>
    like entity-name
    note <The name of the algorithm.>
  take algorithm-description, name <AlgorithmDescription>
    like entity-description
    void take
    note <A description of the algorithm.>
  take training-specification, name <TrainingSpecification>
    like training-specification
    note <Specifies details about training jobs run by this algorithm, including the following:

- The Amazon ECR path of the container and the version digest of the algorithm.

- The hyperparameters that the algorithm supports.

- The instance types that the algorithm supports for training.

- Whether the algorithm supports distributed training.

- The metrics that the algorithm emits to Amazon CloudWatch.

- Which metrics that the algorithm emits can be used as the objective metric for hyperparameter tuning jobs.

- The input channels that the algorithm supports for training data. For example, an algorithm might support `train`, `validation`, and `test` channels.>
  take inference-specification, name <InferenceSpecification>
    like inference-specification
    void take
    note <Specifies details about inference jobs that the algorithm runs, including the following:

- The Amazon ECR paths of containers that contain the inference code and model artifacts.

- The instance types that the algorithm supports for transform jobs and real-time endpoints used for inference.

- The input and output content formats that the algorithm supports for inference.>
  take validation-specification, name <ValidationSpecification>
    like algorithm-validation-specification
    void take
    note <Specifies configurations for one or more training jobs and that Amazon SageMaker runs to test the algorithm's training code and, optionally, one or more batch transform jobs that Amazon SageMaker runs to test the algorithm's inference code.>
  take certify-for-marketplace, name <CertifyForMarketplace>
    like certify-for-marketplace
    void take
    note <Whether to certify the algorithm so that it can be listed in Amazon Web Services Marketplace.>
  take tags, name <Tags>
    like tag-list
    void take
    note <An array of key-value pairs. You can use tags to categorize your Amazon Web Services resources in different ways, for example, by purpose, owner, or environment. For more information, see [Tagging Amazon Web Services Resources](https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html).>