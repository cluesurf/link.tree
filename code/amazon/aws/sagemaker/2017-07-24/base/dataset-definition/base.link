
load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/athena-dataset-definition
  take form athena-dataset-definition

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/data-distribution-type
  take form data-distribution-type

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/input-mode
  take form input-mode

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/processing-local-path
  take form processing-local-path

load @treesurf/snow/amazonaws.com/sagemaker/2017-07-24/base/redshift-dataset-definition
  take form redshift-dataset-definition

form dataset-definition, name <DatasetDefinition>
  note <Configuration for Dataset Definition inputs. The Dataset Definition input must specify exactly one of either `AthenaDatasetDefinition` or `RedshiftDatasetDefinition` types.>
  take athena-dataset-definition, name <AthenaDatasetDefinition>
    like athena-dataset-definition
    void take
  take redshift-dataset-definition, name <RedshiftDatasetDefinition>
    like redshift-dataset-definition
    void take
  take local-path, name <LocalPath>
    like processing-local-path
    void take
    note <The local path where you want Amazon SageMaker to download the Dataset Definition inputs to run a processing job. `LocalPath` is an absolute path to the input data. This is a required parameter when `AppManaged` is `False` (default).>
  take data-distribution-type, name <DataDistributionType>
    like data-distribution-type
    void take
    note <Whether the generated dataset is `FullyReplicated` or `ShardedByS3Key` (default).>
  take input-mode, name <InputMode>
    like input-mode
    void take
    note <Whether to use `File` or `Pipe` input mode. In `File` (default) mode, Amazon SageMaker copies the data from the input source onto the local Amazon Elastic Block Store (Amazon EBS) volumes before starting your training algorithm. This is the most commonly used input mode. In `Pipe` mode, Amazon SageMaker streams input data from the source directly to your algorithm without using the EBS volume.>