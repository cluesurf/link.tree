
load @wavebond/snow/amazonaws.com/sagemaker/2017-07-24/base/create-model-output
  take form create-model-output

load @wavebond/snow/amazonaws.com/sagemaker/2017-07-24/base/resource-limit-exceeded
  take form resource-limit-exceeded

load @wavebond/snow/base/native-string
  take form native-string

boot create-model, name <CreateModel>
  deed post
  note <Creates a model in Amazon SageMaker. In the request, you name the model and describe a primary container. For the primary container, you specify the Docker image that contains inference code, artifacts (from prior training), and a custom environment map that the inference code uses when you deploy the model for predictions.

Use this API to create a model if you want to use Amazon SageMaker hosting services or run a batch transform job.

To host your model, you create an endpoint configuration with the `CreateEndpointConfig` API, and then create an endpoint with the `CreateEndpoint` API. Amazon SageMaker then deploys all of the containers that you defined for the model in the hosting environment.

For an example that calls this method when deploying a model to Amazon SageMaker hosting services, see [Deploy the Model to Amazon SageMaker Hosting Services (Amazon Web Services SDK for Python (Boto 3)).](https://docs.aws.amazon.com/sagemaker/latest/dg/ex1-deploy-model.html#ex1-deploy-model-boto)

To run a batch transform using your model, you start a job with the `CreateTransformJob` API. Amazon SageMaker uses your model and your dataset to get inferences which are then saved to a specified S3 location.

In the `CreateModel` request, you must define a container with the `PrimaryContainer` parameter.

In the request, you also provide an IAM role that Amazon SageMaker can assume to access model artifacts and docker image for deployment on ML compute hosting instances or for batch transform jobs. In addition, you also use the IAM role to manage permissions the inference code needs. For example, if the inference code access any other Amazon Web Services resources, you grant necessary permissions via this role.>

  take x-amz-target
    like native-string
  take create-model-input, like create-model-input

  line </#X-Amz-Target=SageMaker.CreateModel>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-model-input

  loot 200
    seed json, like create-model-output
    note <Success>
  loot 480
    seed json, like resource-limit-exceeded
    note <ResourceLimitExceeded>
