
load @nerdbond/snow/amazonaws.com/sagemaker/2017-07-24/base/create-endpoint-config-output
  take form create-endpoint-config-output

load @nerdbond/snow/amazonaws.com/sagemaker/2017-07-24/base/resource-limit-exceeded
  take form resource-limit-exceeded

load @nerdbond/snow/base/native-string
  take form native-string

boot create-endpoint-config, name <CreateEndpointConfig>
  deed post
  note <Creates an endpoint configuration that Amazon SageMaker hosting services uses to deploy models. In the configuration, you identify one or more models, created using the `CreateModel` API, to deploy and the resources that you want Amazon SageMaker to provision. Then you call the CreateEndpoint API.

Use this API if you want to use Amazon SageMaker hosting services to deploy models into production.

In the request, you define a `ProductionVariant`, for each model that you want to deploy. Each `ProductionVariant` parameter also describes the resources that you want Amazon SageMaker to provision. This includes the number and type of ML compute instances to deploy.

If you are hosting multiple models, you also assign a `VariantWeight` to specify how much traffic you want to allocate to each model. For example, suppose that you want to host two models, A and B, and you assign traffic weight 2 for model A and 1 for model B. Amazon SageMaker distributes two-thirds of the traffic to Model A, and one-third to model B.

When you call CreateEndpoint, a load call is made to DynamoDB to verify that your endpoint configuration exists. When you read data from a DynamoDB table supporting [`Eventually Consistent Reads`](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.ReadConsistency.html) , the response might not reflect the results of a recently completed write operation. The response might include some stale data. If the dependent entities are not yet in DynamoDB, this causes a validation error. If you repeat your read request after a short time, the response should return the latest data. So retry logic is recommended to handle these possible issues. We also recommend that customers call DescribeEndpointConfig before calling CreateEndpoint to minimize the potential impact of a DynamoDB eventually consistent read.>

  take x-amz-target
    like native-string
  take create-endpoint-config-input, like create-endpoint-config-input

  line </#X-Amz-Target=SageMaker.CreateEndpointConfig>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-endpoint-config-input

  loot 200
    seed json, like create-endpoint-config-output
    note <Success>
  loot 480
    seed json, like resource-limit-exceeded
    note <ResourceLimitExceeded>
