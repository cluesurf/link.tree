
load @textsurf/snow/amazonaws.com/amplifybackend/2020-08-11/base/backend-api-auth-type
  take form backend-api-auth-type

load @textsurf/snow/amazonaws.com/amplifybackend/2020-08-11/base/backend-api-conflict-resolution
  take form backend-api-conflict-resolution

load @textsurf/snow/amazonaws.com/amplifybackend/2020-08-11/base/list-of-backend-api-auth-type
  take form list-of-backend-api-auth-type

load @textsurf/snow/base/string
  take form string

form delete-backend-api-body
  take resource-config, name <resourceConfig>
    like form
      take additional-auth-types, name <AdditionalAuthTypes>
        like list-of-backend-api-auth-type
        void take
        note <Additional authentication methods used to interact with your data models.>
        host xml
          host name, text <additionalAuthTypes>
      take api-name, name <ApiName>
        like string
        void take
        note <The API name used to interact with the data model, configured as a part of your Amplify project.>
        host xml
          host name, text <apiName>
      take conflict-resolution, name <ConflictResolution>
        like backend-api-conflict-resolution
        void take
        note <The conflict resolution strategy for your data stored in the data models.>
        host xml
          host name, text <conflictResolution>
      take default-auth-type, name <DefaultAuthType>
        like backend-api-auth-type
        void take
        note <The default authentication type for interacting with the configured data models in your Amplify project.>
        host xml
          host name, text <defaultAuthType>
      take service, name <Service>
        like string
        void take
        note <The service used to provision and interact with the data model.>
        host xml
          host name, text <service>
      take transform-schema, name <TransformSchema>
        like string
        void take
        note <The definition of the data model in the annotated transform of the GraphQL schema.>
        host xml
          host name, text <transformSchema>
    void take
  take resource-name, name <resourceName>