
load @drumwork/snow/amazonaws.com/monitoring/2010-08-01/base/internal-service-fault
  take form internal-service-fault

load @drumwork/snow/amazonaws.com/monitoring/2010-08-01/base/invalid-parameter-combination-exception
  take form invalid-parameter-combination-exception

load @drumwork/snow/amazonaws.com/monitoring/2010-08-01/base/invalid-parameter-value-exception
  take form invalid-parameter-value-exception

load @drumwork/snow/amazonaws.com/monitoring/2010-08-01/base/metric-datum
  take form metric-datum

load @drumwork/snow/amazonaws.com/monitoring/2010-08-01/base/missing-required-parameter-exception
  take form missing-required-parameter-exception

load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-string
  take form native-string

boot get-put-metric-data, name <GET_PutMetricData>
  note <Publishes metric data points to Amazon CloudWatch. CloudWatch associates the data points with the specified metric. If the specified metric does not exist, CloudWatch creates the metric. When CloudWatch creates a metric, it can take up to fifteen minutes for the metric to appear in calls to [ListMetrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_ListMetrics.html).

You can publish either individual data points in the `Value` field, or arrays of values and the number of times each value occurred during the period by using the `Values` and `Counts` fields in the `MetricDatum` structure. Using the `Values` and `Counts` method enables you to publish up to 150 values per metric with one `PutMetricData` request, and supports retrieving percentile statistics on this data.

Each `PutMetricData` request is limited to 40 KB in size for HTTP POST requests. You can send a payload compressed by gzip. Each request is also limited to no more than 20 different metrics.

Although the `Value` parameter accepts numbers of type `Double`, CloudWatch rejects values that are either too small or too large. Values must be in the range of -2^360 to 2^360. In addition, special values (for example, NaN, +Infinity, -Infinity) are not supported.

You can use up to 10 dimensions per metric to further clarify what data the metric collects. Each dimension consists of a Name and Value pair. For more information about specifying dimensions, see [Publishing Metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/publishingMetrics.html) in the _Amazon CloudWatch User Guide_.

You specify the time stamp to be associated with each data point. You can specify time stamps that are as much as two weeks before the current date, and as much as 2 hours after the current day and time.

Data points with time stamps from 24 hours ago or longer can take at least 48 hours to become available for [GetMetricData](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html) or [GetMetricStatistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html) from the time they are submitted. Data points with time stamps between 3 and 24 hours ago can take as much as 2 hours to become available for for [GetMetricData](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricData.html) or [GetMetricStatistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_GetMetricStatistics.html).

CloudWatch needs raw data points to calculate percentile statistics. If you publish data using a statistic set instead, you can only retrieve percentile statistics for this data if one of the following conditions is true:

- The `SampleCount` value of the statistic set is 1 and `Min`, `Max`, and `Sum` are all equal.

- The `Min` and `Max` are equal, and `Sum` is equal to `Min` multiplied by `SampleCount`.>

  take namespace
    like native-string
    note <The namespace for the metric data.

To avoid conflicts with Amazon Web Services service namespaces, you should not specify a namespace that begins with `AWS/`>
  take metric-data
    like list
      like metric-datum
    note <The data for the metric. The array can include no more than 20 metrics per call.>
  take action
    like native-string
  take version
    like native-string

  line </#Action=PutMetricData>

  find <Namespace>, loan namespace
  find <MetricData>, loan metric-data
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    note <Success>
  loot 480
    seed xml, like invalid-parameter-value-exception
    note <InvalidParameterValueException>
  loot 481
    seed xml, like missing-required-parameter-exception
    note <MissingRequiredParameterException>
  loot 482
    seed xml, like invalid-parameter-combination-exception
    note <InvalidParameterCombinationException>
  loot 483
    seed xml, like internal-service-fault
    note <InternalServiceFault>