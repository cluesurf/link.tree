
load @textsurf/snow/amazonaws.com/monitoring/2010-08-01/base/dashboard-invalid-input-error
  take form dashboard-invalid-input-error

load @textsurf/snow/amazonaws.com/monitoring/2010-08-01/base/internal-service-fault
  take form internal-service-fault

load @textsurf/snow/amazonaws.com/monitoring/2010-08-01/base/put-dashboard-output
  take form put-dashboard-output

load @textsurf/snow/base/native-string
  take form native-string

boot get-put-dashboard, name <GET_PutDashboard>
  deed get
  note <Creates a dashboard if it does not already exist, or updates an existing dashboard. If you update a dashboard, the entire contents are replaced with what you specify here.

All dashboards in your account are global, not region-specific.

A simple way to create a dashboard using `PutDashboard` is to copy an existing dashboard. To copy an existing dashboard using the console, you can load the dashboard and then use the View/edit source command in the Actions menu to display the JSON block for that dashboard. Another way to copy a dashboard is to use `GetDashboard`, and then use the data returned within `DashboardBody` as the template for the new dashboard when you call `PutDashboard`.

When you create a dashboard with `PutDashboard`, a good practice is to add a text widget at the top of the dashboard with a message that the dashboard was created by script and should not be changed in the console. This message could also point console users to the location of the `DashboardBody` script or the CloudFormation template used to create the dashboard.>

  take dashboard-name
    like native-string
    note <The name of the dashboard. If a dashboard with this name already exists, this call modifies that dashboard, replacing its current contents. Otherwise, a new dashboard is created. The maximum length is 255, and valid characters are A-Z, a-z, 0-9, "-", and "_". This parameter is required.>
  take dashboard-body
    like native-string
    note <The detailed information about the dashboard in JSON format, including the widgets to include and their location on the dashboard. This parameter is required.

For more information about the syntax, see [Dashboard Body Structure and Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/CloudWatch-Dashboard-Body-Structure.html).>
  take action
    like native-string
  take version
    like native-string

  line </#Action=PutDashboard>

  find <DashboardName>, loan dashboard-name
  find <DashboardBody>, loan dashboard-body
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like put-dashboard-output
    note <Success>
  loot 480
    seed xml, like dashboard-invalid-input-error
    note <DashboardInvalidInputError>
  loot 481
    seed xml, like internal-service-fault
    note <InternalServiceFault>