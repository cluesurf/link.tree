
load @wavebond/snow/amazonaws.com/monitoring/2010-08-01/base/limit-exceeded-fault
  take form limit-exceeded-fault

load @wavebond/snow/base/native-string
  take form native-string

boot post-put-metric-alarm, name <POST_PutMetricAlarm>
  deed post
  note <Creates or updates an alarm and associates it with the specified metric, metric math expression, or anomaly detection model.

Alarms based on anomaly detection models cannot have Auto Scaling actions.

When this operation creates an alarm, the alarm state is immediately set to `INSUFFICIENT_DATA`. The alarm is then evaluated and its state is set appropriately. Any actions associated with the new state are then executed.

When you update an existing alarm, its state is left unchanged, but the update completely overwrites the previous configuration of the alarm.

If you are an IAM user, you must have Amazon EC2 permissions for some alarm operations:

- The `iam:CreateServiceLinkedRole` for all alarms with EC2 actions

- The `iam:CreateServiceLinkedRole` to create an alarm with Systems Manager OpsItem actions.

The first time you create an alarm in the Management Console, the CLI, or by using the PutMetricAlarm API, CloudWatch creates the necessary service-linked role for you. The service-linked roles are called `AWSServiceRoleForCloudWatchEvents` and `AWSServiceRoleForCloudWatchAlarms_ActionSSM`. For more information, see [Amazon Web Services service-linked role](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-service-linked-role).

**Cross-account alarms** You can set an alarm on metrics in the current account, or in another account. To create a cross-account alarm that watches a metric in a different account, you must have completed the following pre-requisites:

- The account where the metrics are located (the _sharing account_) must already have a sharing role named **CloudWatch-CrossAccountSharingRole**. If it does not already have this role, you must create it using the instructions in **Set up a sharing account** in [Cross-account cross-Region CloudWatch console](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Cross-Account-Cross-Region.html#enable-cross-account-cross-Region). The policy for that role must grant access to the ID of the account where you are creating the alarm.

- The account where you are creating the alarm (the _monitoring account_) must already have a service-linked role named **AWSServiceRoleForCloudWatchCrossAccount** to allow CloudWatch to assume the sharing role in the sharing account. If it does not, you must create it following the directions in **Set up a monitoring account** in [Cross-account cross-Region CloudWatch console](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Cross-Account-Cross-Region.html#enable-cross-account-cross-Region).>

  take action
    like native-string
  take version
    like native-string
  take put-metric-alarm-input, like put-metric-alarm-input
    void take

  line </#Action=PutMetricAlarm>

  find <Action>, loan action
  find <Version>, loan version

  seed xml, loan put-metric-alarm-input

  loot 200
    note <Success>
  loot 480
    seed xml, like limit-exceeded-fault
    note <LimitExceededFault>