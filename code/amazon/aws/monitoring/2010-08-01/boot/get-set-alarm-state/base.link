
load @termsurf/snow/amazonaws.com/monitoring/2010-08-01/base/invalid-format-fault
  take form invalid-format-fault

load @termsurf/snow/amazonaws.com/monitoring/2010-08-01/base/resource-not-found
  take form resource-not-found

load @termsurf/snow/base/native-string
  take form native-string

boot get-set-alarm-state, name <GET_SetAlarmState>
  deed get
  note <Temporarily sets the state of an alarm for testing purposes. When the updated state differs from the previous value, the action configured for the appropriate state is invoked. For example, if your alarm is configured to send an Amazon SNS message when an alarm is triggered, temporarily changing the alarm state to `ALARM` sends an SNS message.

Metric alarms returns to their actual state quickly, often within seconds. Because the metric alarm state change happens quickly, it is typically only visible in the alarm's **History** tab in the Amazon CloudWatch console or through [DescribeAlarmHistory](https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_DescribeAlarmHistory.html).

If you use `SetAlarmState` on a composite alarm, the composite alarm is not guaranteed to return to its actual state. It returns to its actual state only once any of its children alarms change state. It is also reevaluated if you update its configuration.

If an alarm triggers EC2 Auto Scaling policies or application Auto Scaling policies, you must include information in the `StateReasonData` parameter to enable the policy to take the correct action.>

  take alarm-name
    like native-string
    note <The name of the alarm.>
  take state-value
    like native-string
    note <The value of the state.>
  take state-reason
    like native-string
    note <The reason that this alarm is set to this specific state, in text format.>
  take state-reason-data
    like native-string
    note <The reason that this alarm is set to this specific state, in JSON format.

For SNS or EC2 alarm actions, this is just informational. But for EC2 Auto Scaling or application Auto Scaling alarm actions, the Auto Scaling policy uses the information in this field to take the correct action.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=SetAlarmState>

  find <AlarmName>, loan alarm-name
  find <StateValue>, loan state-value
  find <StateReason>, loan state-reason
  find <StateReasonData>, loan state-reason-data
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    note <Success>
  loot 480
    seed xml, like resource-not-found
    note <ResourceNotFound>
  loot 481
    seed xml, like invalid-format-fault
    note <InvalidFormatFault>