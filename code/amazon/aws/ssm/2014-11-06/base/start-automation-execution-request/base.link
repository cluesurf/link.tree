
load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/automation-parameter-key
  take form automation-parameter-key

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/automation-parameter-map
  take form automation-parameter-map

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/document-arn
  take form document-arn

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/document-version
  take form document-version

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/execution-mode
  take form execution-mode

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/idempotency-token
  take form idempotency-token

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/max-concurrency
  take form max-concurrency

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/max-errors
  take form max-errors

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/tag-list
  take form tag-list

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/target-locations
  take form target-locations

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/target-maps
  take form target-maps

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/targets
  take form targets

form start-automation-execution-request, name <StartAutomationExecutionRequest>
  take document-name, name <DocumentName>
    like document-arn
    note <The name of the SSM document to run. This can be a public document or a custom document. To run a shared document belonging to another account, specify the document ARN. For more information about how to use shared documents, see [Using shared SSM documents](https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-using-shared.html) in the _Amazon Web Services Systems Manager User Guide_.>
  take document-version, name <DocumentVersion>
    like document-version
    void take
    note <The version of the Automation runbook to use for this execution.>
  take parameters, name <Parameters>
    like automation-parameter-map
    void take
    note <A key-value map of execution parameters, which match the declared parameters in the Automation runbook.>
  take client-token, name <ClientToken>
    like idempotency-token
    void take
    note <User-provided idempotency token. The token must be unique, is case insensitive, enforces the UUID format, and can't be reused.>
  take mode, name <Mode>
    like execution-mode
    void take
    note <The execution mode of the automation. Valid modes include the following: Auto and Interactive. The default mode is Auto.>
  take target-parameter-name, name <TargetParameterName>
    like automation-parameter-key
    void take
    note <The name of the parameter used as the target resource for the rate-controlled execution. Required if you specify targets.>
  take targets, name <Targets>
    like targets
    void take
    note <A key-value mapping to target resources. Required if you specify TargetParameterName.>
  take target-maps, name <TargetMaps>
    like target-maps
    void take
    note <A key-value mapping of document parameters to target resources. Both Targets and TargetMaps can't be specified together.>
  take max-concurrency, name <MaxConcurrency>
    like max-concurrency
    void take
    note <The maximum number of targets allowed to run this task in parallel. You can specify a number, such as 10, or a percentage, such as 10%. The default value is `10`.>
  take max-errors, name <MaxErrors>
    like max-errors
    void take
    note <The number of errors that are allowed before the system stops running the automation on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops running the automation when the fourth error is received. If you specify 0, then the system stops running the automation on additional targets after the first error result is returned. If you run an automation on 50 resources and set max-errors to 10%, then the system stops running the automation on additional targets when the sixth error is received.

Executions that are already running an automation when max-errors is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set max-concurrency to 1 so the executions proceed one at a time.>
  take target-locations, name <TargetLocations>
    like target-locations
    void take
    note <A location is a combination of Amazon Web Services Regions and/or Amazon Web Services accounts where you want to run the automation. Use this operation to start an automation in multiple Amazon Web Services Regions and multiple Amazon Web Services accounts. For more information, see [Running Automation workflows in multiple Amazon Web Services Regions and Amazon Web Services accounts](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-automation-multiple-accounts-and-regions.html) in the _Amazon Web Services Systems Manager User Guide_.>
  take tags, name <Tags>
    like tag-list
    void take
    note <Optional metadata that you assign to a resource. You can specify a maximum of five tags for an automation. Tags enable you to categorize a resource in different ways, such as by purpose, owner, or environment. For example, you might want to tag an automation to identify an environment or operating system. In this case, you could specify the following key-value pairs:

- `Key=environment,Value=test`

- `Key=OS,Value=Windows`

To add tags to an existing patch baseline, use the AddTagsToResource operation.>