
load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/cloud-watch-output-config
  take form cloud-watch-output-config

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/command-id
  take form command-id

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/command-invocation-status
  take form command-invocation-status

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/command-plugin-list
  take form command-plugin-list

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/comment
  take form comment

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/date-time
  take form date-time

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/document-name
  take form document-name

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/document-version
  take form document-version

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/instance-id
  take form instance-id

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/instance-tag-name
  take form instance-tag-name

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/invocation-trace-output
  take form invocation-trace-output

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/notification-config
  take form notification-config

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/service-role
  take form service-role

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/status-details
  take form status-details

load @tunebond/snow/amazonaws.com/ssm/2014-11-06/base/url
  take form url

form command-invocation, name <CommandInvocation>
  note <An invocation is copy of a command sent to a specific instance. A command can apply to one or more instances. A command invocation applies to one instance. For example, if a user runs SendCommand against three instances, then a command invocation is created for each requested instance ID. A command invocation returns status and detail information about a command you ran.>
  take command-id, name <CommandId>
    like command-id
    void take
    note <The command against which this invocation was requested.>
  take instance-id, name <InstanceId>
    like instance-id
    void take
    note <The instance ID in which this invocation was requested.>
  take instance-name, name <InstanceName>
    like instance-tag-name
    void take
    note <The name of the invocation target. For EC2 instances this is the value for the `aws:Name` tag. For on-premises instances, this is the name of the instance.>
  take comment, name <Comment>
    like comment
    void take
    note <User-specified information about the command, such as a brief description of what the command should do.>
  take document-name, name <DocumentName>
    like document-name
    void take
    note <The document name that was requested for execution.>
  take document-version, name <DocumentVersion>
    like document-version
    void take
    note <The Systems Manager document (SSM document) version.>
  take requested-date-time, name <RequestedDateTime>
    like date-time
    void take
    note <The time and date the request was sent to this instance.>
  take status, name <Status>
    like command-invocation-status
    void take
    note <Whether or not the invocation succeeded, failed, or is pending.>
  take status-details, name <StatusDetails>
    like status-details
    void take
    note <A detailed status of the command execution for each invocation (each instance targeted by the command). StatusDetails includes more information than Status because it includes states resulting from error and concurrency control parameters. StatusDetails can show different results than Status. For more information about these statuses, see [Understanding command statuses](https://docs.aws.amazon.com/systems-manager/latest/userguide/monitor-commands.html) in the _Amazon Web Services Systems Manager User Guide_. StatusDetails can be one of the following values:

- Pending: The command hasn't been sent to the instance.

- In Progress: The command has been sent to the instance but hasn't reached a terminal state.

- Success: The execution of the command or plugin was successfully completed. This is a terminal state.

- Delivery Timed Out: The command wasn't delivered to the instance before the delivery timeout expired. Delivery timeouts don't count against the parent command's `MaxErrors` limit, but they do contribute to whether the parent command status is Success or Incomplete. This is a terminal state.

- Execution Timed Out: Command execution started on the instance, but the execution wasn't complete before the execution timeout expired. Execution timeouts count against the `MaxErrors` limit of the parent command. This is a terminal state.

- Failed: The command wasn't successful on the instance. For a plugin, this indicates that the result code wasn't zero. For a command invocation, this indicates that the result code for one or more plugins wasn't zero. Invocation failures count against the `MaxErrors` limit of the parent command. This is a terminal state.

- Canceled: The command was terminated before it was completed. This is a terminal state.

- Undeliverable: The command can't be delivered to the instance. The instance might not exist or might not be responding. Undeliverable invocations don't count against the parent command's MaxErrors limit and don't contribute to whether the parent command status is Success or Incomplete. This is a terminal state.

- Terminated: The parent command exceeded its MaxErrors limit and subsequent command invocations were canceled by the system. This is a terminal state.>
  take trace-output, name <TraceOutput>
    like invocation-trace-output
    void take
    note <Gets the trace output sent by the agent.>
  take standard-output-url, name <StandardOutputUrl>
    like url
    void take
    note <The URL to the plugin's StdOut file in Amazon Simple Storage Service (Amazon S3), if the S3 bucket was defined for the parent command. For an invocation, `StandardOutputUrl` is populated if there is just one plugin defined for the command, and the S3 bucket was defined for the command.>
  take standard-error-url, name <StandardErrorUrl>
    like url
    void take
    note <The URL to the plugin's StdErr file in Amazon Simple Storage Service (Amazon S3), if the S3 bucket was defined for the parent command. For an invocation, `StandardErrorUrl` is populated if there is just one plugin defined for the command, and the S3 bucket was defined for the command.>
  take command-plugins, name <CommandPlugins>
    like command-plugin-list
    void take
    note <Plugins processed by the command.>
  take service-role, name <ServiceRole>
    like service-role
    void take
    note <The Identity and Access Management (IAM) service role that Run Command, a capability of Amazon Web Services Systems Manager, uses to act on your behalf when sending notifications about command status changes on a per instance basis.>
  take notification-config, name <NotificationConfig>
    like notification-config
    void take
    note <Configurations for sending notifications about command status changes on a per instance basis.>
  take cloud-watch-output-config, name <CloudWatchOutputConfig>
    like cloud-watch-output-config
    void take
    note <Amazon CloudWatch Logs information where you want Amazon Web Services Systems Manager to send the command output.>