
load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/apply-only-at-cron-interval
  take form apply-only-at-cron-interval

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/association-compliance-severity
  take form association-compliance-severity

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/association-id
  take form association-id

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/association-name
  take form association-name

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/association-sync-compliance
  take form association-sync-compliance

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/association-version
  take form association-version

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/calendar-name-or-arn-list
  take form calendar-name-or-arn-list

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/date-time
  take form date-time

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/document-arn
  take form document-arn

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/document-version
  take form document-version

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/instance-association-output-location
  take form instance-association-output-location

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/max-concurrency
  take form max-concurrency

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/max-errors
  take form max-errors

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/parameters
  take form parameters

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/schedule-expression
  take form schedule-expression

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/target-locations
  take form target-locations

load @termsurf/snow/amazonaws.com/ssm/2014-11-06/base/targets
  take form targets

form association-version-info, name <AssociationVersionInfo>
  note <Information about the association version.>
  take association-id, name <AssociationId>
    like association-id
    void take
    note <The ID created by the system when the association was created.>
  take association-version, name <AssociationVersion>
    like association-version
    void take
    note <The association version.>
  take created-date, name <CreatedDate>
    like date-time
    void take
    note <The date the association version was created.>
  take name, name <Name>
    like document-arn
    void take
    note <The name specified when the association was created.>
  take document-version, name <DocumentVersion>
    like document-version
    void take
    note <The version of an Amazon Web Services Systems Manager document (SSM document) used when the association version was created.>
  take parameters, name <Parameters>
    like parameters
    void take
    note <Parameters specified when the association version was created.>
  take targets, name <Targets>
    like targets
    void take
    note <The targets specified for the association when the association version was created.>
  take schedule-expression, name <ScheduleExpression>
    like schedule-expression
    void take
    note <The cron or rate schedule specified for the association when the association version was created.>
  take output-location, name <OutputLocation>
    like instance-association-output-location
    void take
    note <The location in Amazon S3 specified for the association when the association version was created.>
  take association-name, name <AssociationName>
    like association-name
    void take
    note <The name specified for the association version when the association version was created.>
  take max-errors, name <MaxErrors>
    like max-errors
    void take
    note <The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set `MaxError` to 10%, then the system stops sending the request when the sixth error is received.

Executions that are already running an association when `MaxErrors` is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set `MaxConcurrency` to 1 so that executions proceed one at a time.>
  take max-concurrency, name <MaxConcurrency>
    like max-concurrency
    void take
    note <The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.

If a new instance starts and attempts to run an association while Systems Manager is running `MaxConcurrency` associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for `MaxConcurrency`.>
  take compliance-severity, name <ComplianceSeverity>
    like association-compliance-severity
    void take
    note <The severity level that is assigned to the association.>
  take sync-compliance, name <SyncCompliance>
    like association-sync-compliance
    void take
    note <The mode for generating association compliance. You can specify `AUTO` or `MANUAL`. In `AUTO` mode, the system uses the status of the association execution to determine the compliance status. If the association execution runs successfully, then the association is `COMPLIANT`. If the association execution doesn't run successfully, the association is `NON-COMPLIANT`.

In `MANUAL` mode, you must specify the `AssociationId` as a parameter for the PutComplianceItems API operation. In this case, compliance data isn't managed by State Manager, a capability of Amazon Web Services Systems Manager. It is managed by your direct call to the PutComplianceItems API operation.

By default, all associations use `AUTO` mode.>
  take apply-only-at-cron-interval, name <ApplyOnlyAtCronInterval>
    like apply-only-at-cron-interval
    void take
    note <By default, when you create a new associations, the system runs it immediately after it is created and then according to the schedule you specified. Specify this option if you don't want an association to run immediately after you create it. This parameter isn't supported for rate expressions.>
  take calendar-names, name <CalendarNames>
    like calendar-name-or-arn-list
    void take
    note <The names or Amazon Resource Names (ARNs) of the Change Calendar type documents your associations are gated under. The associations for this version only run when that Change Calendar is open. For more information, see [Amazon Web Services Systems Manager Change Calendar](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar).>
  take target-locations, name <TargetLocations>
    like target-locations
    void take
    note <The combination of Amazon Web Services Regions and Amazon Web Services accounts where you wanted to run the association when this association version was created.>