
load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/logging-info
  take form logging-info

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/maintenance-window-description
  take form maintenance-window-description

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/maintenance-window-id
  take form maintenance-window-id

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/maintenance-window-name
  take form maintenance-window-name

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/maintenance-window-task-arn
  take form maintenance-window-task-arn

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/maintenance-window-task-id
  take form maintenance-window-task-id

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/maintenance-window-task-invocation-parameters
  take form maintenance-window-task-invocation-parameters

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/maintenance-window-task-parameters
  take form maintenance-window-task-parameters

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/maintenance-window-task-priority
  take form maintenance-window-task-priority

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/max-concurrency
  take form max-concurrency

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/max-errors
  take form max-errors

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/service-role
  take form service-role

load @drumwork/snow/amazonaws.com/ssm/2014-11-06/base/targets
  take form targets

load @drumwork/snow/base/boolean
  take form boolean

form update-maintenance-window-task-request, name <UpdateMaintenanceWindowTaskRequest>
  take window-id, name <WindowId>
    like maintenance-window-id
    note <The maintenance window ID that contains the task to modify.>
  take window-task-id, name <WindowTaskId>
    like maintenance-window-task-id
    note <The task ID to modify.>
  take targets, name <Targets>
    like targets
    void take
    note <The targets (either instances or tags) to modify. Instances are specified using the format `Key=instanceids,Values=instanceID_1,instanceID_2`. Tags are specified using the format `Key=tag_name,Values=tag_value`.

One or more targets must be specified for maintenance window Run Command-type tasks. Depending on the task, targets are optional for other maintenance window task types (Automation, Lambda, and Step Functions). For more information about running tasks that don't specify targets, see [Registering maintenance window tasks without targets](https://docs.aws.amazon.com/systems-manager/latest/userguide/maintenance-windows-targetless-tasks.html) in the _Amazon Web Services Systems Manager User Guide_.>
  take task-arn, name <TaskArn>
    like maintenance-window-task-arn
    void take
    note <The task ARN to modify.>
  take service-role-arn, name <ServiceRoleArn>
    like service-role
    void take
    note <The Amazon Resource Name (ARN) of the IAM service role for Amazon Web Services Systems Manager to assume when running a maintenance window task. If you do not specify a service role ARN, Systems Manager uses your account's service-linked role. If no service-linked role for Systems Manager exists in your account, it is created when you run `RegisterTaskWithMaintenanceWindow`.

For more information, see the following topics in the in the _Amazon Web Services Systems Manager User Guide_:

- [Using service-linked roles for Systems Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/using-service-linked-roles.html#slr-permissions)

- [Should I use a service-linked role or a custom service role to run maintenance window tasks?](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-maintenance-permissions.html#maintenance-window-tasks-service-role)>
  take task-parameters, name <TaskParameters>
    like maintenance-window-task-parameters
    void take
    note <The parameters to modify.

`TaskParameters` has been deprecated. To specify parameters to pass to a task when it runs, instead use the `Parameters` option in the `TaskInvocationParameters` structure. For information about how Systems Manager handles these options for the supported maintenance window task types, see MaintenanceWindowTaskInvocationParameters.

The map has the following format:

Key: string, between 1 and 255 characters

Value: an array of strings, each string is between 1 and 255 characters>
  take task-invocation-parameters, name <TaskInvocationParameters>
    like maintenance-window-task-invocation-parameters
    void take
    note <The parameters that the task should use during execution. Populate only the fields that match the task type. All other fields should be empty.

When you update a maintenance window task that has options specified in `TaskInvocationParameters`, you must provide again all the `TaskInvocationParameters` values that you want to retain. The values you don't specify again are removed. For example, suppose that when you registered a Run Command task, you specified `TaskInvocationParameters` values for `Comment`, `NotificationConfig`, and `OutputS3BucketName`. If you update the maintenance window task and specify only a different `OutputS3BucketName` value, the values for `Comment` and `NotificationConfig` are removed.>
  take priority, name <Priority>
    like maintenance-window-task-priority
    void take
    note <The new task priority to specify. The lower the number, the higher the priority. Tasks that have the same priority are scheduled in parallel.>
  take max-concurrency, name <MaxConcurrency>
    like max-concurrency
    void take
    note <The new `MaxConcurrency` value you want to specify. `MaxConcurrency` is the number of targets that are allowed to run this task in parallel.

For maintenance window tasks without a target specified, you can't supply a value for this option. Instead, the system inserts a placeholder value of `1`, which may be reported in the response to this command. This value doesn't affect the running of your task and can be ignored.>
  take max-errors, name <MaxErrors>
    like max-errors
    void take
    note <The new `MaxErrors` value to specify. `MaxErrors` is the maximum number of errors that are allowed before the task stops being scheduled.

For maintenance window tasks without a target specified, you can't supply a value for this option. Instead, the system inserts a placeholder value of `1`, which may be reported in the response to this command. This value doesn't affect the running of your task and can be ignored.>
  take logging-info, name <LoggingInfo>
    like logging-info
    void take
    note <The new logging location in Amazon S3 to specify.

`LoggingInfo` has been deprecated. To specify an Amazon Simple Storage Service (Amazon S3) bucket to contain logs, instead use the `OutputS3BucketName` and `OutputS3KeyPrefix` options in the `TaskInvocationParameters` structure. For information about how Amazon Web Services Systems Manager handles these options for the supported maintenance window task types, see MaintenanceWindowTaskInvocationParameters.>
  take name, name <Name>
    like maintenance-window-name
    void take
    note <The new task name to specify.>
  take description, name <Description>
    like maintenance-window-description
    void take
    note <The new task description to specify.>
  take replace, name <Replace>
    like boolean
    void take
    note <If True, then all fields that are required by the RegisterTaskWithMaintenanceWindow operation are also required for this API request. Optional fields that aren't specified are set to null.>