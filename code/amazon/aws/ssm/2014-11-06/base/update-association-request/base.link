
load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/apply-only-at-cron-interval
  take form apply-only-at-cron-interval

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/association-compliance-severity
  take form association-compliance-severity

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/association-id
  take form association-id

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/association-name
  take form association-name

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/association-sync-compliance
  take form association-sync-compliance

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/association-version
  take form association-version

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/automation-target-parameter-name
  take form automation-target-parameter-name

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/calendar-name-or-arn-list
  take form calendar-name-or-arn-list

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/document-arn
  take form document-arn

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/document-version
  take form document-version

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/instance-association-output-location
  take form instance-association-output-location

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/max-concurrency
  take form max-concurrency

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/max-errors
  take form max-errors

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/parameters
  take form parameters

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/schedule-expression
  take form schedule-expression

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/target-locations
  take form target-locations

load @nerdbond/snow/amazonaws.com/ssm/2014-11-06/base/targets
  take form targets

form update-association-request, name <UpdateAssociationRequest>
  take association-id, name <AssociationId>
    like association-id
    note <The ID of the association you want to update.>
  take parameters, name <Parameters>
    like parameters
    void take
    note <The parameters you want to update for the association. If you create a parameter using Parameter Store, a capability of Amazon Web Services Systems Manager, you can reference the parameter using `{{ssm:parameter-name}}`.>
  take document-version, name <DocumentVersion>
    like document-version
    void take
    note <The document version you want update for the association.>
  take schedule-expression, name <ScheduleExpression>
    like schedule-expression
    void take
    note <The cron expression used to schedule the association that you want to update.>
  take output-location, name <OutputLocation>
    like instance-association-output-location
    void take
    note <An S3 bucket where you want to store the results of this request.>
  take name, name <Name>
    like document-arn
    void take
    note <The name of the SSM Command document or Automation runbook that contains the configuration information for the instance.

You can specify Amazon Web Services-predefined documents, documents you created, or a document that is shared with you from another account.

For Systems Manager document (SSM document) that are shared with you from other Amazon Web Services accounts, you must specify the complete SSM document ARN, in the following format:

`arn:aws:ssm:_region_:_account-id_:document/_document-name_`

For example:

`arn:aws:ssm:us-east-2:12345678912:document/My-Shared-Document`

For Amazon Web Services-predefined documents and SSM documents you created in your account, you only need to specify the document name. For example, `AWS-ApplyPatchBaseline` or `My-Document`.>
  take targets, name <Targets>
    like targets
    void take
    note <The targets of the association.>
  take association-name, name <AssociationName>
    like association-name
    void take
    note <The name of the association that you want to update.>
  take association-version, name <AssociationVersion>
    like association-version
    void take
    note <This parameter is provided for concurrency control purposes. You must specify the latest association version in the service. If you want to ensure that this request succeeds, either specify `$LATEST`, or omit this parameter.>
  take automation-target-parameter-name, name <AutomationTargetParameterName>
    like automation-target-parameter-name
    void take
    note <Specify the target for the association. This target is required for associations that use an Automation runbook and target resources by using rate controls. Automation is a capability of Amazon Web Services Systems Manager.>
  take max-errors, name <MaxErrors>
    like max-errors
    void take
    note <The number of errors that are allowed before the system stops sending requests to run the association on additional targets. You can specify either an absolute number of errors, for example 10, or a percentage of the target set, for example 10%. If you specify 3, for example, the system stops sending requests when the fourth error is received. If you specify 0, then the system stops sending requests after the first error is returned. If you run an association on 50 instances and set `MaxError` to 10%, then the system stops sending the request when the sixth error is received.

Executions that are already running an association when `MaxErrors` is reached are allowed to complete, but some of these executions may fail as well. If you need to ensure that there won't be more than max-errors failed executions, set `MaxConcurrency` to 1 so that executions proceed one at a time.>
  take max-concurrency, name <MaxConcurrency>
    like max-concurrency
    void take
    note <The maximum number of targets allowed to run the association at the same time. You can specify a number, for example 10, or a percentage of the target set, for example 10%. The default value is 100%, which means all targets run the association at the same time.

If a new instance starts and attempts to run an association while Systems Manager is running `MaxConcurrency` associations, the association is allowed to run. During the next association interval, the new instance will process its association within the limit specified for `MaxConcurrency`.>
  take compliance-severity, name <ComplianceSeverity>
    like association-compliance-severity
    void take
    note <The severity level to assign to the association.>
  take sync-compliance, name <SyncCompliance>
    like association-sync-compliance
    void take
    note <The mode for generating association compliance. You can specify `AUTO` or `MANUAL`. In `AUTO` mode, the system uses the status of the association execution to determine the compliance status. If the association execution runs successfully, then the association is `COMPLIANT`. If the association execution doesn't run successfully, the association is `NON-COMPLIANT`.

In `MANUAL` mode, you must specify the `AssociationId` as a parameter for the PutComplianceItems API operation. In this case, compliance data isn't managed by State Manager, a capability of Amazon Web Services Systems Manager. It is managed by your direct call to the PutComplianceItems API operation.

By default, all associations use `AUTO` mode.>
  take apply-only-at-cron-interval, name <ApplyOnlyAtCronInterval>
    like apply-only-at-cron-interval
    void take
    note <By default, when you update an association, the system runs it immediately after it is updated and then according to the schedule you specified. Specify this option if you don't want an association to run immediately after you update it. This parameter isn't supported for rate expressions.

Also, if you specified this option when you created the association, you can reset it. To do so, specify the `no-apply-only-at-cron-interval` parameter when you update the association from the command line. This parameter forces the association to run immediately after updating it and according to the interval specified.>
  take calendar-names, name <CalendarNames>
    like calendar-name-or-arn-list
    void take
    note <The names or Amazon Resource Names (ARNs) of the Change Calendar type documents you want to gate your associations under. The associations only run when that change calendar is open. For more information, see [Amazon Web Services Systems Manager Change Calendar](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-change-calendar).>
  take target-locations, name <TargetLocations>
    like target-locations
    void take
    note <A location is a combination of Amazon Web Services Regions and Amazon Web Services accounts where you want to run the association. Use this action to update an association in multiple Regions and multiple accounts.>