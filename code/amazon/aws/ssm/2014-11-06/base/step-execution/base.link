
load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/automation-action-name
  take form automation-action-name

load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/automation-execution-status
  take form automation-execution-status

load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/automation-parameter-map
  take form automation-parameter-map

load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/date-time
  take form date-time

load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/failure-details
  take form failure-details

load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/long
  take form long

load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/normal-string-map
  take form normal-string-map

load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/target-location
  take form target-location

load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/targets
  take form targets

load @treesurf/snow/amazonaws.com/ssm/2014-11-06/base/valid-next-step-list
  take form valid-next-step-list

load @treesurf/snow/base/boolean
  take form boolean

load @treesurf/snow/base/integer
  take form integer

load @treesurf/snow/base/string
  take form string

form step-execution, name <StepExecution>
  note <Detailed information about an the execution state of an Automation step.>
  take step-name, name <StepName>
    like string
    void take
    note <The name of this execution step.>
  take action, name <Action>
    like automation-action-name
    void take
    note <The action this step performs. The action determines the behavior of the step.>
  take timeout-seconds, name <TimeoutSeconds>
    like long
    void take
    note <The timeout seconds of the step.>
  take on-failure, name <OnFailure>
    like string
    void take
    note <The action to take if the step fails. The default value is `Abort`.>
  take max-attempts, name <MaxAttempts>
    like integer
    void take
    note <The maximum number of tries to run the action of the step. The default value is `1`.>
  take execution-start-time, name <ExecutionStartTime>
    like date-time
    void take
    note <If a step has begun execution, this contains the time the step started. If the step is in Pending status, this field isn't populated.>
  take execution-end-time, name <ExecutionEndTime>
    like date-time
    void take
    note <If a step has finished execution, this contains the time the execution ended. If the step hasn't yet concluded, this field isn't populated.>
  take step-status, name <StepStatus>
    like automation-execution-status
    void take
    note <The execution status for this step.>
  take response-code, name <ResponseCode>
    like string
    void take
    note <The response code returned by the execution of the step.>
  take inputs, name <Inputs>
    like normal-string-map
    void take
    note <Fully-resolved values passed into the step before execution.>
  take outputs, name <Outputs>
    like automation-parameter-map
    void take
    note <Returned values from the execution of the step.>
  take response, name <Response>
    like string
    void take
    note <A message associated with the response code for an execution.>
  take failure-message, name <FailureMessage>
    like string
    void take
    note <If a step failed, this message explains why the execution failed.>
  take failure-details, name <FailureDetails>
    like failure-details
    void take
    note <Information about the Automation failure.>
  take step-execution-id, name <StepExecutionId>
    like string
    void take
    note <The unique ID of a step execution.>
  take overridden-parameters, name <OverriddenParameters>
    like automation-parameter-map
    void take
    note <A user-specified list of parameters to override when running a step.>
  take is-end, name <IsEnd>
    like boolean
    void take
    note <The flag which can be used to end automation no matter whether the step succeeds or fails.>
  take next-step, name <NextStep>
    like string
    void take
    note <The next step after the step succeeds.>
  take is-critical, name <IsCritical>
    like boolean
    void take
    note <The flag which can be used to help decide whether the failure of current step leads to the Automation failure.>
  take valid-next-steps, name <ValidNextSteps>
    like valid-next-step-list
    void take
    note <Strategies used when step fails, we support Continue and Abort. Abort will fail the automation when the step fails. Continue will ignore the failure of current step and allow automation to run the next step. With conditional branching, we add step:stepName to support the automation to go to another specific step.>
  take targets, name <Targets>
    like targets
    void take
    note <The targets for the step execution.>
  take target-location, name <TargetLocation>
    like target-location
    void take
    note <The combination of Amazon Web Services Regions and Amazon Web Services accounts targeted by the current Automation execution.>