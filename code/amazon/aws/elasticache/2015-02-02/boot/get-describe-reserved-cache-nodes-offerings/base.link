
load @termsurf/snow/amazonaws.com/elasticache/2015-02-02/base/invalid-parameter-combination-exception
  take form invalid-parameter-combination-exception

load @termsurf/snow/amazonaws.com/elasticache/2015-02-02/base/invalid-parameter-value-exception
  take form invalid-parameter-value-exception

load @termsurf/snow/amazonaws.com/elasticache/2015-02-02/base/reserved-cache-nodes-offering-message
  take form reserved-cache-nodes-offering-message

load @termsurf/snow/amazonaws.com/elasticache/2015-02-02/base/reserved-cache-nodes-offering-not-found-fault
  take form reserved-cache-nodes-offering-not-found-fault

load @termsurf/snow/base/native-integer
  take form native-integer

load @termsurf/snow/base/native-string
  take form native-string

boot get-describe-reserved-cache-nodes-offerings, name <GET_DescribeReservedCacheNodesOfferings>
  deed get
  note <Lists available reserved cache node offerings.>

  take reserved-cache-nodes-offering-id
    like native-string
    note <The offering identifier filter value. Use this parameter to show only the available offering that matches the specified reservation identifier.

Example: `438012d3-4052-4cc7-b2e3-8d3372e0e706`>
    void take
  take cache-node-type
    like native-string
    note <The cache node type filter value. Use this parameter to show only the available offerings matching the specified cache node type.

The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.

- General purpose:

  - Current generation:

    **M6g node types** (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).

    `cache.m6g.large`, `cache.m6g.xlarge`, `cache.m6g.2xlarge`, `cache.m6g.4xlarge`, `cache.m6g.8xlarge`, `cache.m6g.12xlarge`, `cache.m6g.16xlarge`

    For region availability, see [Supported Node Types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)

    **M5 node types:** `cache.m5.large`, `cache.m5.xlarge`, `cache.m5.2xlarge`, `cache.m5.4xlarge`, `cache.m5.12xlarge`, `cache.m5.24xlarge`

    **M4 node types:** `cache.m4.large`, `cache.m4.xlarge`, `cache.m4.2xlarge`, `cache.m4.4xlarge`, `cache.m4.10xlarge`

    **T3 node types:** `cache.t3.micro`, `cache.t3.small`, `cache.t3.medium`

    **T2 node types:** `cache.t2.micro`, `cache.t2.small`, `cache.t2.medium`

  - Previous generation: (not recommended)

    **T1 node types:** `cache.t1.micro`

    **M1 node types:** `cache.m1.small`, `cache.m1.medium`, `cache.m1.large`, `cache.m1.xlarge`

    **M3 node types:** `cache.m3.medium`, `cache.m3.large`, `cache.m3.xlarge`, `cache.m3.2xlarge`

- Compute optimized:

  - Previous generation: (not recommended)

    **C1 node types:** `cache.c1.xlarge`

- Memory optimized:

  - Current generation:

    **R6g node types** (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).

    `cache.r6g.large`, `cache.r6g.xlarge`, `cache.r6g.2xlarge`, `cache.r6g.4xlarge`, `cache.r6g.8xlarge`, `cache.r6g.12xlarge`, `cache.r6g.16xlarge`

    For region availability, see [Supported Node Types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)

    **R5 node types:** `cache.r5.large`, `cache.r5.xlarge`, `cache.r5.2xlarge`, `cache.r5.4xlarge`, `cache.r5.12xlarge`, `cache.r5.24xlarge`

    **R4 node types:** `cache.r4.large`, `cache.r4.xlarge`, `cache.r4.2xlarge`, `cache.r4.4xlarge`, `cache.r4.8xlarge`, `cache.r4.16xlarge`

  - Previous generation: (not recommended)

    **M2 node types:** `cache.m2.xlarge`, `cache.m2.2xlarge`, `cache.m2.4xlarge`

    **R3 node types:** `cache.r3.large`, `cache.r3.xlarge`, `cache.r3.2xlarge`, `cache.r3.4xlarge`, `cache.r3.8xlarge`

**Additional node type info** - All current generation instance types are created in Amazon VPC by default.

- Redis append-only files (AOF) are not supported for T1 or T2 instances.

- Redis Multi-AZ with automatic failover is not supported on T1 instances.

- Redis configuration variables `appendonly` and `appendfsync` are not supported on Redis version 2.8.22 and later.>
    void take
  take duration
    like native-string
    note <Duration filter value, specified in years or seconds. Use this parameter to show only reservations for a given duration.

Valid Values: `1 | 3 | 31536000 | 94608000`>
    void take
  take product-description
    like native-string
    note <The product description filter value. Use this parameter to show only the available offerings matching the specified product description.>
    void take
  take offering-type
    like native-string
    note <The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.

Valid Values: `"Light Utilization"|"Medium Utilization"|"Heavy Utilization" |"All Upfront"|"Partial Upfront"| "No Upfront"`>
    void take
  take max-records
    like native-integer
    note <The maximum number of records to include in the response. If more records exist than the specified `MaxRecords` value, a marker is included in the response so that the remaining results can be retrieved.

Default: 100

Constraints: minimum 20; maximum 100.>
    void take
  take marker
    like native-string
    note <An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by `MaxRecords`.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=DescribeReservedCacheNodesOfferings>

  find <ReservedCacheNodesOfferingId>, loan reserved-cache-nodes-offering-id
  find <CacheNodeType>, loan cache-node-type
  find <Duration>, loan duration
  find <ProductDescription>, loan product-description
  find <OfferingType>, loan offering-type
  find <MaxRecords>, loan max-records
  find <Marker>, loan marker
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like reserved-cache-nodes-offering-message
    note <Success>
  loot 480
    seed xml, like reserved-cache-nodes-offering-not-found-fault
    note <ReservedCacheNodesOfferingNotFoundFault>
  loot 481
    seed xml, like invalid-parameter-value-exception
    note <InvalidParameterValueException>
  loot 482
    seed xml, like invalid-parameter-combination-exception
    note <InvalidParameterCombinationException>