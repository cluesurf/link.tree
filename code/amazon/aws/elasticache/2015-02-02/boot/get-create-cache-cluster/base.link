
load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/cache-cluster-already-exists-fault
  take form cache-cluster-already-exists-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/cache-parameter-group-not-found-fault
  take form cache-parameter-group-not-found-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/cache-security-group-not-found-fault
  take form cache-security-group-not-found-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/cache-subnet-group-not-found-fault
  take form cache-subnet-group-not-found-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/cluster-quota-for-customer-exceeded-fault
  take form cluster-quota-for-customer-exceeded-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/create-cache-cluster-result
  take form create-cache-cluster-result

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/insufficient-cache-cluster-capacity-fault
  take form insufficient-cache-cluster-capacity-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/invalid-parameter-combination-exception
  take form invalid-parameter-combination-exception

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/invalid-parameter-value-exception
  take form invalid-parameter-value-exception

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/invalid-replication-group-state-fault
  take form invalid-replication-group-state-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/invalid-vpc-network-state-fault
  take form invalid-vpc-network-state-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/log-delivery-configuration-request
  take form log-delivery-configuration-request

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/node-quota-for-cluster-exceeded-fault
  take form node-quota-for-cluster-exceeded-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/node-quota-for-customer-exceeded-fault
  take form node-quota-for-customer-exceeded-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/replication-group-not-found-fault
  take form replication-group-not-found-fault

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/tag
  take form tag

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/tag-quota-per-resource-exceeded
  take form tag-quota-per-resource-exceeded

load @treesurf/snow/base/list
  take form list

load @treesurf/snow/base/native-boolean
  take form native-boolean

load @treesurf/snow/base/native-integer
  take form native-integer

load @treesurf/snow/base/native-string
  take form native-string

load @treesurf/snow/base/string
  take form string

boot get-create-cache-cluster, name <GET_CreateCacheCluster>
  deed get
  note <Creates a cluster. All nodes in the cluster run the same protocol-compliant cache engine software, either Memcached or Redis.

This operation is not supported for Redis (cluster mode enabled) clusters.>

  take cache-cluster-id
    like native-string
    note <The node group (shard) identifier. This parameter is stored as a lowercase string.

**Constraints:** - A name must contain from 1 to 50 alphanumeric characters or hyphens.

- The first character must be a letter.

- A name cannot end with a hyphen or contain two consecutive hyphens.>
  take replication-group-id
    like native-string
    note <The ID of the replication group to which this cluster should belong. If this parameter is specified, the cluster is added to the specified replication group as a read replica; otherwise, the cluster is a standalone primary that is not part of any replication group.

If the specified replication group is Multi-AZ enabled and the Availability Zone is not specified, the cluster is created in Availability Zones that provide the best spread of read replicas across Availability Zones.

This parameter is only valid if the `Engine` parameter is `redis`.>
    void take
  take az-mode
    like native-string
    note <Specifies whether the nodes in this Memcached cluster are created in a single Availability Zone or created across multiple Availability Zones in the cluster's region.

This parameter is only supported for Memcached clusters.

If the `AZMode` and `PreferredAvailabilityZones` are not specified, ElastiCache assumes `single-az` mode.>
    void take
  take preferred-availability-zone
    like native-string
    note <The EC2 Availability Zone in which the cluster is created.

All nodes belonging to this cluster are placed in the preferred Availability Zone. If you want to create your nodes across multiple Availability Zones, use `PreferredAvailabilityZones`.

Default: System chosen Availability Zone.>
    void take
  take preferred-availability-zones
    like list
      like string
    note <A list of the Availability Zones in which cache nodes are created. The order of the zones in the list is not important.

This option is only supported on Memcached.

If you are creating your cluster in an Amazon VPC (recommended) you can only locate nodes in Availability Zones that are associated with the subnets in the selected subnet group.

The number of Availability Zones listed must equal the value of `NumCacheNodes`.

If you want all the nodes in the same Availability Zone, use `PreferredAvailabilityZone` instead, or repeat the Availability Zone multiple times in the list.

Default: System chosen Availability Zones.>
    void take
  take num-cache-nodes
    like native-integer
    note <The initial number of cache nodes that the cluster has.

For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.

If you need more than 40 nodes for your Memcached cluster, please fill out the ElastiCache Limit Increase Request form at [http://aws.amazon.com/contact-us/elasticache-node-limit-request/](http://aws.amazon.com/contact-us/elasticache-node-limit-request/).>
    void take
  take cache-node-type
    like native-string
    note <The compute and memory capacity of the nodes in the node group (shard).

The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.

- General purpose:

  - Current generation:

    **M6g node types** (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).

    `cache.m6g.large`, `cache.m6g.xlarge`, `cache.m6g.2xlarge`, `cache.m6g.4xlarge`, `cache.m6g.8xlarge`, `cache.m6g.12xlarge`, `cache.m6g.16xlarge`

    For region availability, see [Supported Node Types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)

    **M5 node types:** `cache.m5.large`, `cache.m5.xlarge`, `cache.m5.2xlarge`, `cache.m5.4xlarge`, `cache.m5.12xlarge`, `cache.m5.24xlarge`

    **M4 node types:** `cache.m4.large`, `cache.m4.xlarge`, `cache.m4.2xlarge`, `cache.m4.4xlarge`, `cache.m4.10xlarge`

    **T3 node types:** `cache.t3.micro`, `cache.t3.small`, `cache.t3.medium`

    **T2 node types:** `cache.t2.micro`, `cache.t2.small`, `cache.t2.medium`

  - Previous generation: (not recommended)

    **T1 node types:** `cache.t1.micro`

    **M1 node types:** `cache.m1.small`, `cache.m1.medium`, `cache.m1.large`, `cache.m1.xlarge`

    **M3 node types:** `cache.m3.medium`, `cache.m3.large`, `cache.m3.xlarge`, `cache.m3.2xlarge`

- Compute optimized:

  - Previous generation: (not recommended)

    **C1 node types:** `cache.c1.xlarge`

- Memory optimized:

  - Current generation:

    **R6g node types** (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).

    `cache.r6g.large`, `cache.r6g.xlarge`, `cache.r6g.2xlarge`, `cache.r6g.4xlarge`, `cache.r6g.8xlarge`, `cache.r6g.12xlarge`, `cache.r6g.16xlarge`

    For region availability, see [Supported Node Types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)

    **R5 node types:** `cache.r5.large`, `cache.r5.xlarge`, `cache.r5.2xlarge`, `cache.r5.4xlarge`, `cache.r5.12xlarge`, `cache.r5.24xlarge`

    **R4 node types:** `cache.r4.large`, `cache.r4.xlarge`, `cache.r4.2xlarge`, `cache.r4.4xlarge`, `cache.r4.8xlarge`, `cache.r4.16xlarge`

  - Previous generation: (not recommended)

    **M2 node types:** `cache.m2.xlarge`, `cache.m2.2xlarge`, `cache.m2.4xlarge`

    **R3 node types:** `cache.r3.large`, `cache.r3.xlarge`, `cache.r3.2xlarge`, `cache.r3.4xlarge`, `cache.r3.8xlarge`

**Additional node type info** - All current generation instance types are created in Amazon VPC by default.

- Redis append-only files (AOF) are not supported for T1 or T2 instances.

- Redis Multi-AZ with automatic failover is not supported on T1 instances.

- Redis configuration variables `appendonly` and `appendfsync` are not supported on Redis version 2.8.22 and later.>
    void take
  take engine
    like native-string
    note <The name of the cache engine to be used for this cluster.

Valid values for this parameter are: `memcached` | `redis`>
    void take
  take engine-version
    like native-string
    note <The version number of the cache engine to be used for this cluster. To view the supported cache engine versions, use the DescribeCacheEngineVersions operation.

**Important:** You can upgrade to a newer engine version (see [Selecting a Cache Engine and Version](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SelectEngine.html#VersionManagement)), but you cannot downgrade to an earlier engine version. If you want to use an earlier engine version, you must delete the existing cluster or replication group and create it anew with the earlier engine version.>
    void take
  take cache-parameter-group-name
    like native-string
    note <The name of the parameter group to associate with this cluster. If this argument is omitted, the default parameter group for the specified engine is used. You cannot use any parameter group which has `cluster-enabled='yes'` when creating a cluster.>
    void take
  take cache-subnet-group-name
    like native-string
    note <The name of the subnet group to be used for the cluster.

Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).

If you're going to launch your cluster in an Amazon VPC, you need to create a subnet group before you start creating a cluster. For more information, see [Subnets and Subnet Groups](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.html).>
    void take
  take cache-security-group-names
    like list
      like string
    note <A list of security group names to associate with this cluster.

Use this parameter only when you are creating a cluster outside of an Amazon Virtual Private Cloud (Amazon VPC).>
    void take
  take security-group-ids
    like list
      like string
    note <One or more VPC security groups associated with the cluster.

Use this parameter only when you are creating a cluster in an Amazon Virtual Private Cloud (Amazon VPC).>
    void take
  take tags
    like list
      like tag
    note <A list of tags to be added to this resource.>
    void take
  take snapshot-arns
    like list
      like string
    note <A single-element string list containing an Amazon Resource Name (ARN) that uniquely identifies a Redis RDB snapshot file stored in Amazon S3. The snapshot file is used to populate the node group (shard). The Amazon S3 object name in the ARN cannot contain any commas.

This parameter is only valid if the `Engine` parameter is `redis`.

Example of an Amazon S3 ARN: `arn:aws:s3:::my_bucket/snapshot1.rdb`>
    void take
  take snapshot-name
    like native-string
    note <The name of a Redis snapshot from which to restore data into the new node group (shard). The snapshot status changes to `restoring` while the new node group (shard) is being created.

This parameter is only valid if the `Engine` parameter is `redis`.>
    void take
  take preferred-maintenance-window
    like native-string
    note <Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period. Valid values for `ddd` are:>
    void take
  take port
    like native-integer
    note <The port number on which each of the cache nodes accepts connections.>
    void take
  take notification-topic-arn
    like native-string
    note <The Amazon Resource Name (ARN) of the Amazon Simple Notification Service (SNS) topic to which notifications are sent.

The Amazon SNS topic owner must be the same as the cluster owner.>
    void take
  take auto-minor-version-upgrade
    like native-boolean
    note <This parameter is currently disabled.>
    void take
  take snapshot-retention-limit
    like native-integer
    note <The number of days for which ElastiCache retains automatic snapshots before deleting them. For example, if you set `SnapshotRetentionLimit` to 5, a snapshot taken today is retained for 5 days before being deleted.

This parameter is only valid if the `Engine` parameter is `redis`.

Default: 0 (i.e., automatic backups are disabled for this cache cluster).>
    void take
  take snapshot-window
    like native-string
    note <The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your node group (shard).

Example: `05:00-09:00`

If you do not specify this parameter, ElastiCache automatically chooses an appropriate time range.

This parameter is only valid if the `Engine` parameter is `redis`.>
    void take
  take auth-token
    like native-string
    note <**Reserved parameter.** The password used to access a password protected server.

Password constraints:

- Must be only printable ASCII characters.

- Must be at least 16 characters and no more than 128 characters in length.

- The only permitted printable special characters are !, &, #, $, ^, &lt;, &gt;, and -. Other printable special characters cannot be used in the AUTH token.

For more information, see [AUTH password](http://redis.io/commands/AUTH) at http://redis.io/commands/AUTH.>
    void take
  take outpost-mode
    like native-string
    note <Specifies whether the nodes in the cluster are created in a single outpost or across multiple outposts.>
    void take
  take preferred-outpost-arn
    like native-string
    note <The outpost ARN in which the cache cluster is created.>
    void take
  take preferred-outpost-arns
    like list
      like string
    note <The outpost ARNs in which the cache cluster is created.>
    void take
  take log-delivery-configurations
    like list
      like log-delivery-configuration-request
    note <Specifies the destination, format and type of the logs.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreateCacheCluster>

  find <CacheClusterId>, loan cache-cluster-id
  find <ReplicationGroupId>, loan replication-group-id
  find <AZMode>, loan az-mode
  find <PreferredAvailabilityZone>, loan preferred-availability-zone
  find <PreferredAvailabilityZones>, loan preferred-availability-zones
  find <NumCacheNodes>, loan num-cache-nodes
  find <CacheNodeType>, loan cache-node-type
  find <Engine>, loan engine
  find <EngineVersion>, loan engine-version
  find <CacheParameterGroupName>, loan cache-parameter-group-name
  find <CacheSubnetGroupName>, loan cache-subnet-group-name
  find <CacheSecurityGroupNames>, loan cache-security-group-names
  find <SecurityGroupIds>, loan security-group-ids
  find <Tags>, loan tags
  find <SnapshotArns>, loan snapshot-arns
  find <SnapshotName>, loan snapshot-name
  find <PreferredMaintenanceWindow>, loan preferred-maintenance-window
  find <Port>, loan port
  find <NotificationTopicArn>, loan notification-topic-arn
  find <AutoMinorVersionUpgrade>, loan auto-minor-version-upgrade
  find <SnapshotRetentionLimit>, loan snapshot-retention-limit
  find <SnapshotWindow>, loan snapshot-window
  find <AuthToken>, loan auth-token
  find <OutpostMode>, loan outpost-mode
  find <PreferredOutpostArn>, loan preferred-outpost-arn
  find <PreferredOutpostArns>, loan preferred-outpost-arns
  find <LogDeliveryConfigurations>, loan log-delivery-configurations
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-cache-cluster-result
    note <Success>
  loot 480
    seed xml, like replication-group-not-found-fault
    note <ReplicationGroupNotFoundFault>
  loot 481
    seed xml, like invalid-replication-group-state-fault
    note <InvalidReplicationGroupStateFault>
  loot 482
    seed xml, like cache-cluster-already-exists-fault
    note <CacheClusterAlreadyExistsFault>
  loot 483
    seed xml, like insufficient-cache-cluster-capacity-fault
    note <InsufficientCacheClusterCapacityFault>
  loot 484
    seed xml, like cache-security-group-not-found-fault
    note <CacheSecurityGroupNotFoundFault>
  loot 485
    seed xml, like cache-subnet-group-not-found-fault
    note <CacheSubnetGroupNotFoundFault>
  loot 486
    seed xml, like cluster-quota-for-customer-exceeded-fault
    note <ClusterQuotaForCustomerExceededFault>
  loot 487
    seed xml, like node-quota-for-cluster-exceeded-fault
    note <NodeQuotaForClusterExceededFault>
  loot 488
    seed xml, like node-quota-for-customer-exceeded-fault
    note <NodeQuotaForCustomerExceededFault>
  loot 489
    seed xml, like cache-parameter-group-not-found-fault
    note <CacheParameterGroupNotFoundFault>
  loot 490
    seed xml, like invalid-vpc-network-state-fault
    note <InvalidVPCNetworkStateFault>
  loot 491
    seed xml, like tag-quota-per-resource-exceeded
    note <TagQuotaPerResourceExceeded>
  loot 492
    seed xml, like invalid-parameter-value-exception
    note <InvalidParameterValueException>
  loot 493
    seed xml, like invalid-parameter-combination-exception
    note <InvalidParameterCombinationException>