
load @textsurf/snow/amazonaws.com/elasticache/2015-02-02/base/cache-node-update-status-list
  take form cache-node-update-status-list

load @textsurf/snow/amazonaws.com/elasticache/2015-02-02/base/node-group-update-status-list
  take form node-group-update-status-list

load @textsurf/snow/amazonaws.com/elasticache/2015-02-02/base/service-update-severity
  take form service-update-severity

load @textsurf/snow/amazonaws.com/elasticache/2015-02-02/base/service-update-status
  take form service-update-status

load @textsurf/snow/amazonaws.com/elasticache/2015-02-02/base/service-update-type
  take form service-update-type

load @textsurf/snow/amazonaws.com/elasticache/2015-02-02/base/sla-met
  take form sla-met

load @textsurf/snow/amazonaws.com/elasticache/2015-02-02/base/t-stamp
  take form t-stamp

load @textsurf/snow/amazonaws.com/elasticache/2015-02-02/base/update-action-status
  take form update-action-status

load @textsurf/snow/base/string
  take form string

form update-action, name <UpdateAction>
  note <The status of the service update for a specific replication group>
  take replication-group-id, name <ReplicationGroupId>
    like string
    void take
    note <The ID of the replication group>
  take cache-cluster-id, name <CacheClusterId>
    like string
    void take
    note <The ID of the cache cluster>
  take service-update-name, name <ServiceUpdateName>
    like string
    void take
    note <The unique ID of the service update>
  take service-update-release-date, name <ServiceUpdateReleaseDate>
    like t-stamp
    void take
    note <The date the update is first available>
  take service-update-severity, name <ServiceUpdateSeverity>
    like service-update-severity
    void take
    note <The severity of the service update>
  take service-update-status, name <ServiceUpdateStatus>
    like service-update-status
    void take
    note <The status of the service update>
  take service-update-recommended-apply-by-date, name <ServiceUpdateRecommendedApplyByDate>
    like t-stamp
    void take
    note <The recommended date to apply the service update to ensure compliance. For information on compliance, see [Self-Service Security Updates for Compliance](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/elasticache-compliance.html#elasticache-compliance-self-service).>
  take service-update-type, name <ServiceUpdateType>
    like service-update-type
    void take
    note <Reflects the nature of the service update>
  take update-action-available-date, name <UpdateActionAvailableDate>
    like t-stamp
    void take
    note <The date that the service update is available to a replication group>
  take update-action-status, name <UpdateActionStatus>
    like update-action-status
    void take
    note <The status of the update action>
  take nodes-updated, name <NodesUpdated>
    like string
    void take
    note <The progress of the service update on the replication group>
  take update-action-status-modified-date, name <UpdateActionStatusModifiedDate>
    like t-stamp
    void take
    note <The date when the UpdateActionStatus was last modified>
  take sla-met, name <SlaMet>
    like sla-met
    void take
    note <If yes, all nodes in the replication group have been updated by the recommended apply-by date. If no, at least one node in the replication group have not been updated by the recommended apply-by date. If N/A, the replication group was created after the recommended apply-by date.>
  take node-group-update-status, name <NodeGroupUpdateStatus>
    like node-group-update-status-list
    void take
    note <The status of the service update on the node group>
  take cache-node-update-status, name <CacheNodeUpdateStatus>
    like cache-node-update-status-list
    void take
    note <The status of the service update on the cache node>
  take estimated-update-time, name <EstimatedUpdateTime>
    like string
    void take
    note <The estimated length of time for the update to complete>
  take engine, name <Engine>
    like string
    void take
    note <The Elasticache engine to which the update applies. Either Redis or Memcached>