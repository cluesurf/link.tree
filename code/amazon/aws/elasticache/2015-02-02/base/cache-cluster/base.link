
load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/boolean-optional
  take form boolean-optional

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/cache-node-list
  take form cache-node-list

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/cache-parameter-group-status
  take form cache-parameter-group-status

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/cache-security-group-membership-list
  take form cache-security-group-membership-list

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/endpoint
  take form endpoint

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/integer-optional
  take form integer-optional

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/log-delivery-configuration-list
  take form log-delivery-configuration-list

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/notification-configuration
  take form notification-configuration

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/pending-modified-values
  take form pending-modified-values

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/security-group-membership-list
  take form security-group-membership-list

load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/t-stamp
  take form t-stamp

load @treesurf/snow/base/boolean
  take form boolean

load @treesurf/snow/base/string
  take form string

form cache-cluster, name <CacheCluster>
  note <Contains all of the attributes of a specific cluster.>
  take cache-cluster-id, name <CacheClusterId>
    like string
    void take
    note <The user-supplied identifier of the cluster. This identifier is a unique key that identifies a cluster.>
  take configuration-endpoint, name <ConfigurationEndpoint>
    like endpoint
    void take
    note <Represents a Memcached cluster endpoint which can be used by an application to connect to any node in the cluster. The configuration endpoint will always have `.cfg` in it.

Example: `mem-3.9dvc4r.cfg.usw2.cache.amazonaws.com:11211`>
  take client-download-landing-page, name <ClientDownloadLandingPage>
    like string
    void take
    note <The URL of the web page where you can download the latest ElastiCache client library.>
  take cache-node-type, name <CacheNodeType>
    like string
    void take
    note <The name of the compute and memory capacity node type for the cluster.

The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.

- General purpose:

  - Current generation:

    **M6g node types** (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).

    `cache.m6g.large`, `cache.m6g.xlarge`, `cache.m6g.2xlarge`, `cache.m6g.4xlarge`, `cache.m6g.8xlarge`, `cache.m6g.12xlarge`, `cache.m6g.16xlarge`

    For region availability, see [Supported Node Types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)

    **M5 node types:** `cache.m5.large`, `cache.m5.xlarge`, `cache.m5.2xlarge`, `cache.m5.4xlarge`, `cache.m5.12xlarge`, `cache.m5.24xlarge`

    **M4 node types:** `cache.m4.large`, `cache.m4.xlarge`, `cache.m4.2xlarge`, `cache.m4.4xlarge`, `cache.m4.10xlarge`

    **T3 node types:** `cache.t3.micro`, `cache.t3.small`, `cache.t3.medium`

    **T2 node types:** `cache.t2.micro`, `cache.t2.small`, `cache.t2.medium`

  - Previous generation: (not recommended)

    **T1 node types:** `cache.t1.micro`

    **M1 node types:** `cache.m1.small`, `cache.m1.medium`, `cache.m1.large`, `cache.m1.xlarge`

    **M3 node types:** `cache.m3.medium`, `cache.m3.large`, `cache.m3.xlarge`, `cache.m3.2xlarge`

- Compute optimized:

  - Previous generation: (not recommended)

    **C1 node types:** `cache.c1.xlarge`

- Memory optimized:

  - Current generation:

    **R6g node types** (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).

    `cache.r6g.large`, `cache.r6g.xlarge`, `cache.r6g.2xlarge`, `cache.r6g.4xlarge`, `cache.r6g.8xlarge`, `cache.r6g.12xlarge`, `cache.r6g.16xlarge`

    For region availability, see [Supported Node Types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)

    **R5 node types:** `cache.r5.large`, `cache.r5.xlarge`, `cache.r5.2xlarge`, `cache.r5.4xlarge`, `cache.r5.12xlarge`, `cache.r5.24xlarge`

    **R4 node types:** `cache.r4.large`, `cache.r4.xlarge`, `cache.r4.2xlarge`, `cache.r4.4xlarge`, `cache.r4.8xlarge`, `cache.r4.16xlarge`

  - Previous generation: (not recommended)

    **M2 node types:** `cache.m2.xlarge`, `cache.m2.2xlarge`, `cache.m2.4xlarge`

    **R3 node types:** `cache.r3.large`, `cache.r3.xlarge`, `cache.r3.2xlarge`, `cache.r3.4xlarge`, `cache.r3.8xlarge`

**Additional node type info** - All current generation instance types are created in Amazon VPC by default.

- Redis append-only files (AOF) are not supported for T1 or T2 instances.

- Redis Multi-AZ with automatic failover is not supported on T1 instances.

- Redis configuration variables `appendonly` and `appendfsync` are not supported on Redis version 2.8.22 and later.>
  take engine, name <Engine>
    like string
    void take
    note <The name of the cache engine (`memcached` or `redis`) to be used for this cluster.>
  take engine-version, name <EngineVersion>
    like string
    void take
    note <The version of the cache engine that is used in this cluster.>
  take cache-cluster-status, name <CacheClusterStatus>
    like string
    void take
    note <The current state of this cluster, one of the following values: `available`, `creating`, `deleted`, `deleting`, `incompatible-network`, `modifying`, `rebooting cluster nodes`, `restore-failed`, or `snapshotting`.>
  take num-cache-nodes, name <NumCacheNodes>
    like integer-optional
    void take
    note <The number of cache nodes in the cluster.

For clusters running Redis, this value must be 1. For clusters running Memcached, this value must be between 1 and 40.>
  take preferred-availability-zone, name <PreferredAvailabilityZone>
    like string
    void take
    note <The name of the Availability Zone in which the cluster is located or "Multiple" if the cache nodes are located in different Availability Zones.>
  take preferred-outpost-arn, name <PreferredOutpostArn>
    like string
    void take
    note <The outpost ARN in which the cache cluster is created.>
  take cache-cluster-create-time, name <CacheClusterCreateTime>
    like t-stamp
    void take
    note <The date and time when the cluster was created.>
  take preferred-maintenance-window, name <PreferredMaintenanceWindow>
    like string
    void take
    note <Specifies the weekly time range during which maintenance on the cluster is performed. It is specified as a range in the format ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC). The minimum maintenance window is a 60 minute period.

Valid values for `ddd` are:

- `sun`

- `mon`

- `tue`

- `wed`

- `thu`

- `fri`

- `sat`

Example: `sun:23:00-mon:01:30`>
  take pending-modified-values, name <PendingModifiedValues>
    like pending-modified-values
    void take
  take notification-configuration, name <NotificationConfiguration>
    like notification-configuration
    void take
    note <Describes a notification topic and its status. Notification topics are used for publishing ElastiCache events to subscribers using Amazon Simple Notification Service (SNS).>
  take cache-security-groups, name <CacheSecurityGroups>
    like cache-security-group-membership-list
    void take
    note <A list of cache security group elements, composed of name and status sub-elements.>
  take cache-parameter-group, name <CacheParameterGroup>
    like cache-parameter-group-status
    void take
    note <Status of the cache parameter group.>
  take cache-subnet-group-name, name <CacheSubnetGroupName>
    like string
    void take
    note <The name of the cache subnet group associated with the cluster.>
  take cache-nodes, name <CacheNodes>
    like cache-node-list
    void take
    note <A list of cache nodes that are members of the cluster.>
  take auto-minor-version-upgrade, name <AutoMinorVersionUpgrade>
    like boolean
    void take
    note <This parameter is currently disabled.>
  take security-groups, name <SecurityGroups>
    like security-group-membership-list
    void take
    note <A list of VPC Security Groups associated with the cluster.>
  take replication-group-id, name <ReplicationGroupId>
    like string
    void take
    note <The replication group to which this cluster belongs. If this field is empty, the cluster is not associated with any replication group.>
  take snapshot-retention-limit, name <SnapshotRetentionLimit>
    like integer-optional
    void take
    note <The number of days for which ElastiCache retains automatic cluster snapshots before deleting them. For example, if you set `SnapshotRetentionLimit` to 5, a snapshot that was taken today is retained for 5 days before being deleted.

If the value of SnapshotRetentionLimit is set to zero (0), backups are turned off.>
  take snapshot-window, name <SnapshotWindow>
    like string
    void take
    note <The daily time range (in UTC) during which ElastiCache begins taking a daily snapshot of your cluster.

Example: `05:00-09:00`>
  take auth-token-enabled, name <AuthTokenEnabled>
    like boolean-optional
    void take
    note <A flag that enables using an `AuthToken` (password) when issuing Redis commands.

Default: `false`>
  take auth-token-last-modified-date, name <AuthTokenLastModifiedDate>
    like t-stamp
    void take
    note <The date the auth token was last modified>
  take transit-encryption-enabled, name <TransitEncryptionEnabled>
    like boolean-optional
    void take
    note <A flag that enables in-transit encryption when set to `true`.

You cannot modify the value of `TransitEncryptionEnabled` after the cluster is created. To enable in-transit encryption on a cluster you must set `TransitEncryptionEnabled` to `true` when you create a cluster.

**Required:** Only available when creating a replication group in an Amazon VPC using redis version `3.2.6`, `4.x` or later.

Default: `false`>
  take at-rest-encryption-enabled, name <AtRestEncryptionEnabled>
    like boolean-optional
    void take
    note <A flag that enables encryption at-rest when set to `true`.

You cannot modify the value of `AtRestEncryptionEnabled` after the cluster is created. To enable at-rest encryption on a cluster you must set `AtRestEncryptionEnabled` to `true` when you create a cluster.

**Required:** Only available when creating a replication group in an Amazon VPC using redis version `3.2.6`, `4.x` or later.

Default: `false`>
  take arn, name <ARN>
    like string
    void take
    note <The ARN (Amazon Resource Name) of the cache cluster.>
  take replication-group-log-delivery-enabled, name <ReplicationGroupLogDeliveryEnabled>
    like boolean
    void take
    note <A boolean value indicating whether log delivery is enabled for the replication group.>
  take log-delivery-configurations, name <LogDeliveryConfigurations>
    like log-delivery-configuration-list
    void take
    note <Returns the destination, format and type of the logs.>