
load @treesurf/snow/amazonaws.com/elasticache/2015-02-02/base/integer-optional
  take form integer-optional

load @treesurf/snow/base/string
  take form string

form describe-reserved-cache-nodes-message, name <DescribeReservedCacheNodesMessage>
  note <Represents the input of a `DescribeReservedCacheNodes` operation.>
  take reserved-cache-node-id, name <ReservedCacheNodeId>
    like string
    void take
    note <The reserved cache node identifier filter value. Use this parameter to show only the reservation that matches the specified reservation ID.>
  take reserved-cache-nodes-offering-id, name <ReservedCacheNodesOfferingId>
    like string
    void take
    note <The offering identifier filter value. Use this parameter to show only purchased reservations matching the specified offering identifier.>
  take cache-node-type, name <CacheNodeType>
    like string
    void take
    note <The cache node type filter value. Use this parameter to show only those reservations matching the specified cache node type.

The following node types are supported by ElastiCache. Generally speaking, the current generation types provide more memory and computational power at lower cost when compared to their equivalent previous generation counterparts.

- General purpose:

  - Current generation:

    **M6g node types** (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).

    `cache.m6g.large`, `cache.m6g.xlarge`, `cache.m6g.2xlarge`, `cache.m6g.4xlarge`, `cache.m6g.8xlarge`, `cache.m6g.12xlarge`, `cache.m6g.16xlarge`

    For region availability, see [Supported Node Types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)

    **M5 node types:** `cache.m5.large`, `cache.m5.xlarge`, `cache.m5.2xlarge`, `cache.m5.4xlarge`, `cache.m5.12xlarge`, `cache.m5.24xlarge`

    **M4 node types:** `cache.m4.large`, `cache.m4.xlarge`, `cache.m4.2xlarge`, `cache.m4.4xlarge`, `cache.m4.10xlarge`

    **T3 node types:** `cache.t3.micro`, `cache.t3.small`, `cache.t3.medium`

    **T2 node types:** `cache.t2.micro`, `cache.t2.small`, `cache.t2.medium`

  - Previous generation: (not recommended)

    **T1 node types:** `cache.t1.micro`

    **M1 node types:** `cache.m1.small`, `cache.m1.medium`, `cache.m1.large`, `cache.m1.xlarge`

    **M3 node types:** `cache.m3.medium`, `cache.m3.large`, `cache.m3.xlarge`, `cache.m3.2xlarge`

- Compute optimized:

  - Previous generation: (not recommended)

    **C1 node types:** `cache.c1.xlarge`

- Memory optimized:

  - Current generation:

    **R6g node types** (available only for Redis engine version 5.0.6 onward and for Memcached engine version 1.5.16 onward).

    `cache.r6g.large`, `cache.r6g.xlarge`, `cache.r6g.2xlarge`, `cache.r6g.4xlarge`, `cache.r6g.8xlarge`, `cache.r6g.12xlarge`, `cache.r6g.16xlarge`

    For region availability, see [Supported Node Types](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/CacheNodes.SupportedTypes.html#CacheNodes.SupportedTypesByRegion)

    **R5 node types:** `cache.r5.large`, `cache.r5.xlarge`, `cache.r5.2xlarge`, `cache.r5.4xlarge`, `cache.r5.12xlarge`, `cache.r5.24xlarge`

    **R4 node types:** `cache.r4.large`, `cache.r4.xlarge`, `cache.r4.2xlarge`, `cache.r4.4xlarge`, `cache.r4.8xlarge`, `cache.r4.16xlarge`

  - Previous generation: (not recommended)

    **M2 node types:** `cache.m2.xlarge`, `cache.m2.2xlarge`, `cache.m2.4xlarge`

    **R3 node types:** `cache.r3.large`, `cache.r3.xlarge`, `cache.r3.2xlarge`, `cache.r3.4xlarge`, `cache.r3.8xlarge`

**Additional node type info** - All current generation instance types are created in Amazon VPC by default.

- Redis append-only files (AOF) are not supported for T1 or T2 instances.

- Redis Multi-AZ with automatic failover is not supported on T1 instances.

- Redis configuration variables `appendonly` and `appendfsync` are not supported on Redis version 2.8.22 and later.>
  take duration, name <Duration>
    like string
    void take
    note <The duration filter value, specified in years or seconds. Use this parameter to show only reservations for this duration.

Valid Values: `1 | 3 | 31536000 | 94608000`>
  take product-description, name <ProductDescription>
    like string
    void take
    note <The product description filter value. Use this parameter to show only those reservations matching the specified product description.>
  take offering-type, name <OfferingType>
    like string
    void take
    note <The offering type filter value. Use this parameter to show only the available offerings matching the specified offering type.

Valid values: `"Light Utilization"|"Medium Utilization"|"Heavy Utilization"|"All Upfront"|"Partial Upfront"| "No Upfront"`>
  take max-records, name <MaxRecords>
    like integer-optional
    void take
    note <The maximum number of records to include in the response. If more records exist than the specified `MaxRecords` value, a marker is included in the response so that the remaining results can be retrieved.

Default: 100

Constraints: minimum 20; maximum 100.>
  take marker, name <Marker>
    like string
    void take
    note <An optional marker returned from a prior request. Use this marker for pagination of results from this operation. If this parameter is specified, the response includes only records beyond the marker, up to the value specified by `MaxRecords`.>