
load @wavebond/snow/amazonaws.com/forecast/2018-06-26/base/create-predictor-response
  take form create-predictor-response

load @wavebond/snow/amazonaws.com/forecast/2018-06-26/base/invalid-input-exception
  take form invalid-input-exception

load @wavebond/snow/amazonaws.com/forecast/2018-06-26/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @wavebond/snow/amazonaws.com/forecast/2018-06-26/base/resource-already-exists-exception
  take form resource-already-exists-exception

load @wavebond/snow/amazonaws.com/forecast/2018-06-26/base/resource-in-use-exception
  take form resource-in-use-exception

load @wavebond/snow/amazonaws.com/forecast/2018-06-26/base/resource-not-found-exception
  take form resource-not-found-exception

load @wavebond/snow/base/native-string
  take form native-string

boot create-predictor, name <CreatePredictor>
  deed post
  note <Creates an Amazon Forecast predictor.

In the request, provide a dataset group and either specify an algorithm or let Amazon Forecast choose an algorithm for you using AutoML. If you specify an algorithm, you also can override algorithm-specific hyperparameters.

Amazon Forecast uses the algorithm to train a predictor using the latest version of the datasets in the specified dataset group. You can then generate a forecast using the CreateForecast operation.

To see the evaluation metrics, use the GetAccuracyMetrics operation.

You can specify a featurization configuration to fill and aggregate the data fields in the `TARGET_TIME_SERIES` dataset to improve model training. For more information, see FeaturizationConfig.

For RELATED_TIME_SERIES datasets, `CreatePredictor` verifies that the `DataFrequency` specified when the dataset was created matches the `ForecastFrequency`. TARGET_TIME_SERIES datasets don't have this restriction. Amazon Forecast also verifies the delimiter and timestamp format. For more information, see howitworks-datasets-groups.

By default, predictors are trained and evaluated at the 0.1 (P10), 0.5 (P50), and 0.9 (P90) quantiles. You can choose custom forecast types to train and evaluate your predictor by setting the `ForecastTypes`.

**AutoML** If you want Amazon Forecast to evaluate each algorithm and choose the one that minimizes the `objective function`, set `PerformAutoML` to `true`. The `objective function` is defined as the mean of the weighted losses over the forecast types. By default, these are the p10, p50, and p90 quantile losses. For more information, see EvaluationResult.

When AutoML is enabled, the following properties are disallowed:

- `AlgorithmArn`

- `HPOConfig`

- `PerformHPO`

- `TrainingParameters`

To get a list of all of your predictors, use the ListPredictors operation.

Before you can use the predictor to create a forecast, the `Status` of the predictor must be `ACTIVE`, signifying that training has completed. To get the status, use the DescribePredictor operation.>

  take x-amz-target
    like native-string
  take create-predictor-request, like create-predictor-request

  line </#X-Amz-Target=AmazonForecast.CreatePredictor>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-predictor-request

  loot 200
    seed json, like create-predictor-response
    note <Success>
  loot 480
    seed json, like invalid-input-exception
    note <InvalidInputException>
  loot 481
    seed json, like resource-already-exists-exception
    note <ResourceAlreadyExistsException>
  loot 482
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 483
    seed json, like resource-in-use-exception
    note <ResourceInUseException>
  loot 484
    seed json, like limit-exceeded-exception
    note <LimitExceededException>