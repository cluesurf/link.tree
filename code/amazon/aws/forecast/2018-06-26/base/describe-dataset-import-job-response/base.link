
load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/arn
  take form arn

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/data-source
  take form data-source

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/double
  take form double

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/field-statistics
  take form field-statistics

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/geolocation-format
  take form geolocation-format

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/long
  take form long

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/message
  take form message

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/name
  take form name

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/status
  take form status

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/time-zone
  take form time-zone

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/timestamp
  take form timestamp

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/timestamp-format
  take form timestamp-format

load @treesurf/snow/amazonaws.com/forecast/2018-06-26/base/use-geolocation-for-time-zone
  take form use-geolocation-for-time-zone

form describe-dataset-import-job-response, name <DescribeDatasetImportJobResponse>
  take dataset-import-job-name, name <DatasetImportJobName>
    like name
    void take
    note <The name of the dataset import job.>
  take dataset-import-job-arn, name <DatasetImportJobArn>
    like arn
    void take
    note <The ARN of the dataset import job.>
  take dataset-arn, name <DatasetArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the dataset that the training data was imported to.>
  take timestamp-format, name <TimestampFormat>
    like timestamp-format
    void take
    note <The format of timestamps in the dataset. The format that you specify depends on the `DataFrequency` specified when the dataset was created. The following formats are supported

- "yyyy-MM-dd"

  For the following data frequencies: Y, M, W, and D

- "yyyy-MM-dd HH:mm:ss"

  For the following data frequencies: H, 30min, 15min, and 1min; and optionally, for: Y, M, W, and D>
  take time-zone, name <TimeZone>
    like time-zone
    void take
    note <The single time zone applied to every item in the dataset>
  take use-geolocation-for-time-zone, name <UseGeolocationForTimeZone>
    like use-geolocation-for-time-zone
    void take
    note <Whether `TimeZone` is automatically derived from the geolocation attribute.>
  take geolocation-format, name <GeolocationFormat>
    like geolocation-format
    void take
    note <The format of the geolocation attribute. Valid Values:`"LAT_LONG"` and `"CC_POSTALCODE"`.>
  take data-source, name <DataSource>
    like data-source
    void take
    note <The location of the training data to import and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data.

If encryption is used, `DataSource` includes an AWS Key Management Service (KMS) key.>
  take estimated-time-remaining-in-minutes, name <EstimatedTimeRemainingInMinutes>
    like long
    void take
    note <The estimated time remaining in minutes for the dataset import job to complete.>
  take field-statistics, name <FieldStatistics>
    like field-statistics
    void take
    note <Statistical information about each field in the input data.>
  take data-size, name <DataSize>
    like double
    void take
    note <The size of the dataset in gigabytes (GB) after the import job has finished.>
  take status, name <Status>
    like status
    void take
    note <The status of the dataset import job. States include:

- `ACTIVE`

- `CREATE_PENDING`, `CREATE_IN_PROGRESS`, `CREATE_FAILED`

- `DELETE_PENDING`, `DELETE_IN_PROGRESS`, `DELETE_FAILED`

- `CREATE_STOPPING`, `CREATE_STOPPED`>
  take message, name <Message>
    like message
    void take
    note <If an error occurred, an informational message about the error.>
  take creation-time, name <CreationTime>
    like timestamp
    void take
    note <When the dataset import job was created.>
  take last-modification-time, name <LastModificationTime>
    like timestamp
    void take
    note <The last time the resource was modified. The timestamp depends on the status of the job:

- `CREATE_PENDING` - The `CreationTime`.

- `CREATE_IN_PROGRESS` - The current timestamp.

- `CREATE_STOPPING` - The current timestamp.

- `CREATE_STOPPED` - When the job stopped.

- `ACTIVE` or `CREATE_FAILED` - When the job finished or failed.>