
load @textsurf/snow/amazonaws.com/forecast/2018-06-26/base/arn
  take form arn

load @textsurf/snow/amazonaws.com/forecast/2018-06-26/base/data-source
  take form data-source

load @textsurf/snow/amazonaws.com/forecast/2018-06-26/base/error-message
  take form error-message

load @textsurf/snow/amazonaws.com/forecast/2018-06-26/base/name
  take form name

load @textsurf/snow/amazonaws.com/forecast/2018-06-26/base/status
  take form status

load @textsurf/snow/amazonaws.com/forecast/2018-06-26/base/timestamp
  take form timestamp

form dataset-import-job-summary, name <DatasetImportJobSummary>
  note <Provides a summary of the dataset import job properties used in the ListDatasetImportJobs operation. To get the complete set of properties, call the DescribeDatasetImportJob operation, and provide the `DatasetImportJobArn`.>
  take dataset-import-job-arn, name <DatasetImportJobArn>
    like arn
    void take
    note <The Amazon Resource Name (ARN) of the dataset import job.>
  take dataset-import-job-name, name <DatasetImportJobName>
    like name
    void take
    note <The name of the dataset import job.>
  take data-source, name <DataSource>
    like data-source
    void take
    note <The location of the training data to import and an AWS Identity and Access Management (IAM) role that Amazon Forecast can assume to access the data. The training data must be stored in an Amazon S3 bucket.

If encryption is used, `DataSource` includes an AWS Key Management Service (KMS) key.>
  take status, name <Status>
    like status
    void take
    note <The status of the dataset import job. States include:

- `ACTIVE`

- `CREATE_PENDING`, `CREATE_IN_PROGRESS`, `CREATE_FAILED`

- `DELETE_PENDING`, `DELETE_IN_PROGRESS`, `DELETE_FAILED`

- `CREATE_STOPPING`, `CREATE_STOPPED`>
  take message, name <Message>
    like error-message
    void take
    note <If an error occurred, an informational message about the error.>
  take creation-time, name <CreationTime>
    like timestamp
    void take
    note <When the dataset import job was created.>
  take last-modification-time, name <LastModificationTime>
    like timestamp
    void take
    note <The last time the resource was modified. The timestamp depends on the status of the job:

- `CREATE_PENDING` - The `CreationTime`.

- `CREATE_IN_PROGRESS` - The current timestamp.

- `CREATE_STOPPING` - The current timestamp.

- `CREATE_STOPPED` - When the job stopped.

- `ACTIVE` or `CREATE_FAILED` - When the job finished or failed.>