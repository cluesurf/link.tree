
load @textsurf/snow/amazonaws.com/elasticmapreduce/2009-03-31/base/compute-limits-unit-type
  take form compute-limits-unit-type

load @textsurf/snow/base/integer
  take form integer

form compute-limits, name <ComputeLimits>
  note <The EC2 unit limits for a managed scaling policy. The managed scaling activity of a cluster can not be above or below these limits. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.>
  take unit-type, name <UnitType>
    like compute-limits-unit-type
    note <The unit type used for specifying a managed scaling policy.>
  take minimum-capacity-units, name <MinimumCapacityUnits>
    like integer
    note <The lower boundary of EC2 units. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.>
  take maximum-capacity-units, name <MaximumCapacityUnits>
    like integer
    note <The upper boundary of EC2 units. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. Managed scaling activities are not allowed beyond this boundary. The limit only applies to the core and task nodes. The master node cannot be scaled after initial configuration.>
  take maximum-on-demand-capacity-units, name <MaximumOnDemandCapacityUnits>
    like integer
    void take
    note <The upper boundary of On-Demand EC2 units. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The On-Demand units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between On-Demand and Spot Instances.>
  take maximum-core-capacity-units, name <MaximumCoreCapacityUnits>
    like integer
    void take
    note <The upper boundary of EC2 units for core node type in a cluster. It is measured through vCPU cores or instances for instance groups and measured through units for instance fleets. The core units are not allowed to scale beyond this boundary. The parameter is used to split capacity allocation between core and task nodes.>