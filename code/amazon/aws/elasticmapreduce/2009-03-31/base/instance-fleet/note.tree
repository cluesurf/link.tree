
load @termsurf/snow/amazonaws.com/elasticmapreduce/2009-03-31/base/instance-fleet-id
  take form instance-fleet-id

load @termsurf/snow/amazonaws.com/elasticmapreduce/2009-03-31/base/instance-fleet-provisioning-specifications
  take form instance-fleet-provisioning-specifications

load @termsurf/snow/amazonaws.com/elasticmapreduce/2009-03-31/base/instance-fleet-status
  take form instance-fleet-status

load @termsurf/snow/amazonaws.com/elasticmapreduce/2009-03-31/base/instance-fleet-type
  take form instance-fleet-type

load @termsurf/snow/amazonaws.com/elasticmapreduce/2009-03-31/base/instance-type-specification-list
  take form instance-type-specification-list

load @termsurf/snow/amazonaws.com/elasticmapreduce/2009-03-31/base/whole-number
  take form whole-number

load @termsurf/snow/amazonaws.com/elasticmapreduce/2009-03-31/base/xml-string-max-len256
  take form xml-string-max-len256

form instance-fleet, name <InstanceFleet>
  note <Describes an instance fleet, which is a group of EC2 instances that host a particular node type (master, core, or task) in an Amazon EMR cluster. Instance fleets can consist of a mix of instance types and On-Demand and Spot Instances, which are provisioned to meet a defined target capacity.

The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.>
  take id, name <Id>
    like instance-fleet-id
    void take
    note <The unique identifier of the instance fleet.>
  take name, name <Name>
    like xml-string-max-len256
    void take
    note <A friendly name for the instance fleet.>
  take status, name <Status>
    like instance-fleet-status
    void take
    note <The current status of the instance fleet.>
  take instance-fleet-type, name <InstanceFleetType>
    like instance-fleet-type
    void take
    note <The node type that the instance fleet hosts. Valid values are MASTER, CORE, or TASK.>
  take target-on-demand-capacity, name <TargetOnDemandCapacity>
    like whole-number
    void take
    note <The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand Instances to provision. When the instance fleet launches, Amazon EMR tries to provision On-Demand Instances as specified by InstanceTypeConfig. Each instance configuration has a specified `WeightedCapacity`. When an On-Demand Instance is provisioned, the `WeightedCapacity` units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units. You can use InstanceFleet$ProvisionedOnDemandCapacity to determine the Spot capacity units that have been provisioned for the instance fleet.

If not specified or set to 0, only Spot Instances are provisioned for the instance fleet using `TargetSpotCapacity`. At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity` should be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and `TargetOnDemandCapacity` can be specified, and its value must be 1.>
  take target-spot-capacity, name <TargetSpotCapacity>
    like whole-number
    void take
    note <The target capacity of Spot units for the instance fleet, which determines how many Spot Instances to provision. When the instance fleet launches, Amazon EMR tries to provision Spot Instances as specified by InstanceTypeConfig. Each instance configuration has a specified `WeightedCapacity`. When a Spot instance is provisioned, the `WeightedCapacity` units count toward the target capacity. Amazon EMR provisions instances until the target capacity is totally fulfilled, even if this results in an overage. For example, if there are 2 units remaining to fulfill capacity, and Amazon EMR can only provision an instance with a `WeightedCapacity` of 5 units, the instance is provisioned, and the target capacity is exceeded by 3 units. You can use InstanceFleet$ProvisionedSpotCapacity to determine the Spot capacity units that have been provisioned for the instance fleet.

If not specified or set to 0, only On-Demand Instances are provisioned for the instance fleet. At least one of `TargetSpotCapacity` and `TargetOnDemandCapacity` should be greater than 0. For a master instance fleet, only one of `TargetSpotCapacity` and `TargetOnDemandCapacity` can be specified, and its value must be 1.>
  take provisioned-on-demand-capacity, name <ProvisionedOnDemandCapacity>
    like whole-number
    void take
    note <The number of On-Demand units that have been provisioned for the instance fleet to fulfill `TargetOnDemandCapacity`. This provisioned capacity might be less than or greater than `TargetOnDemandCapacity`.>
  take provisioned-spot-capacity, name <ProvisionedSpotCapacity>
    like whole-number
    void take
    note <The number of Spot units that have been provisioned for this instance fleet to fulfill `TargetSpotCapacity`. This provisioned capacity might be less than or greater than `TargetSpotCapacity`.>
  take instance-type-specifications, name <InstanceTypeSpecifications>
    like instance-type-specification-list
    void take
    note <An array of specifications for the instance types that comprise an instance fleet.>
  take launch-specifications, name <LaunchSpecifications>
    like instance-fleet-provisioning-specifications
    void take
    note <Describes the launch specification for an instance fleet.>