
load @drumwork/snow/amazonaws.com/acm-pca/2017-08-22/base/create-certificate-authority-response
  take form create-certificate-authority-response

load @drumwork/snow/amazonaws.com/acm-pca/2017-08-22/base/invalid-args-exception
  take form invalid-args-exception

load @drumwork/snow/amazonaws.com/acm-pca/2017-08-22/base/invalid-policy-exception
  take form invalid-policy-exception

load @drumwork/snow/amazonaws.com/acm-pca/2017-08-22/base/invalid-tag-exception
  take form invalid-tag-exception

load @drumwork/snow/amazonaws.com/acm-pca/2017-08-22/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @drumwork/snow/base/native-string
  take form native-string

boot create-certificate-authority, name <CreateCertificateAuthority>
  note <Creates a root or subordinate private certificate authority (CA). You must specify the CA configuration, an optional configuration for Online Certificate Status Protocol (OCSP) and/or a certificate revocation list (CRL), the CA type, and an optional idempotency token to avoid accidental creation of multiple CAs. The CA configuration specifies the name of the algorithm and key size to be used to create the CA private key, the type of signing algorithm that the CA uses, and X.500 subject information. The OCSP configuration can optionally specify a custom URL for the OCSP responder. The CRL configuration specifies the CRL expiration period in days (the validity period of the CRL), the Amazon S3 bucket that will contain the CRL, and a CNAME alias for the S3 bucket that is included in certificates issued by the CA. If successful, this action returns the Amazon Resource Name (ARN) of the CA.

ACM Private CA assets that are stored in Amazon S3 can be protected with encryption. For more information, see [Encrypting Your CRLs](https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaCreateCa.html#crl-encryption).

Both PCA and the IAM principal must have permission to write to the S3 bucket that you specify. If the IAM principal making the call does not have permission to write to the bucket, then an exception is thrown. For more information, see [Configure Access to ACM Private CA](https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaAuthAccess.html).>

  take x-amz-target
    like native-string
  take create-certificate-authority-request, like create-certificate-authority-request

  line </#X-Amz-Target=ACMPrivateCA.CreateCertificateAuthority>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-certificate-authority-request

  loot 200
    seed json, like create-certificate-authority-response
    note <Success>
  loot 480
    seed json, like invalid-args-exception
    note <InvalidArgsException>
  loot 481
    seed json, like invalid-policy-exception
    note <InvalidPolicyException>
  loot 482
    seed json, like invalid-tag-exception
    note <InvalidTagException>
  loot 483
    seed json, like limit-exceeded-exception
    note <LimitExceededException>