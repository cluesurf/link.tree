
load @termsurf/snow/amazonaws.com/acm-pca/2017-08-22/base/api-passthrough
  take form api-passthrough

load @termsurf/snow/amazonaws.com/acm-pca/2017-08-22/base/arn
  take form arn

load @termsurf/snow/amazonaws.com/acm-pca/2017-08-22/base/csr-blob
  take form csr-blob

load @termsurf/snow/amazonaws.com/acm-pca/2017-08-22/base/idempotency-token
  take form idempotency-token

load @termsurf/snow/amazonaws.com/acm-pca/2017-08-22/base/signing-algorithm
  take form signing-algorithm

load @termsurf/snow/amazonaws.com/acm-pca/2017-08-22/base/validity
  take form validity

form issue-certificate-request, name <IssueCertificateRequest>
  take api-passthrough, name <ApiPassthrough>
    like api-passthrough
    void take
    note <Specifies X.509 certificate information to be included in the issued certificate. An `APIPassthrough` or `APICSRPassthrough` template variant must be selected, or else this parameter is ignored. For more information about using these templates, see [Understanding Certificate Templates](https://docs.aws.amazon.com/acm-pca/latest/userguide/UsingTemplates.html).

If conflicting or duplicate certificate information is supplied during certificate issuance, ACM Private CA applies [order of operation rules](https://docs.aws.amazon.com/acm-pca/latest/userguide/UsingTemplates.html#template-order-of-operations) to determine what information is used.>
  take certificate-authority-arn, name <CertificateAuthorityArn>
    like arn
    note <The Amazon Resource Name (ARN) that was returned when you called [CreateCertificateAuthority](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_CreateCertificateAuthority.html). This must be of the form:

`arn:aws:acm-pca:_region_:_account_:certificate-authority/_12345678-1234-1234-1234-123456789012_`>
  take csr, name <Csr>
    like csr-blob
    note <The certificate signing request (CSR) for the certificate you want to issue. As an example, you can use the following OpenSSL command to create the CSR and a 2048 bit RSA private key.

`openssl req -new -newkey rsa:2048 -days 365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr`

If you have a configuration file, you can then use the following OpenSSL command. The `usr_cert` block in the configuration file contains your X509 version 3 extensions.

`openssl req -new -config openssl_rsa.cnf -extensions usr_cert -newkey rsa:2048 -days -365 -keyout private/test_cert_priv_key.pem -out csr/test_cert_.csr`

Note: A CSR must provide either a _subject name_ or a _subject alternative name_ or the request will be rejected.>
  take signing-algorithm, name <SigningAlgorithm>
    like signing-algorithm
    note <The name of the algorithm that will be used to sign the certificate to be issued.

This parameter should not be confused with the `SigningAlgorithm` parameter used to sign a CSR in the `CreateCertificateAuthority` action.>
  take template-arn, name <TemplateArn>
    like arn
    void take
    note <Specifies a custom configuration template to use when issuing a certificate. If this parameter is not provided, ACM Private CA defaults to the `EndEntityCertificate/V1` template. For CA certificates, you should choose the shortest path length that meets your needs. The path length is indicated by the PathLen_N_ portion of the ARN, where _N_ is the [CA depth](https://docs.aws.amazon.com/acm-pca/latest/userguide/PcaTerms.html#terms-cadepth).

Note: The CA depth configured on a subordinate CA certificate must not exceed the limit set by its parents in the CA hierarchy.

For a list of `TemplateArn` values supported by ACM Private CA, see [Understanding Certificate Templates](https://docs.aws.amazon.com/acm-pca/latest/userguide/UsingTemplates.html).>
  take validity, name <Validity>
    like validity
    note <Information describing the end of the validity period of the certificate. This parameter sets the “Not After” date for the certificate.

Certificate validity is the period of time during which a certificate is valid. Validity can be expressed as an explicit date and time when the certificate expires, or as a span of time after issuance, stated in days, months, or years. For more information, see [Validity](https://tools.ietf.org/html/rfc5280#section-4.1.2.5) in RFC 5280.

This value is unaffected when `ValidityNotBefore` is also specified. For example, if `Validity` is set to 20 days in the future, the certificate will expire 20 days from issuance time regardless of the `ValidityNotBefore` value.

The end of the validity period configured on a certificate must not exceed the limit set on its parents in the CA hierarchy.>
  take validity-not-before, name <ValidityNotBefore>
    like validity
    void take
    note <Information describing the start of the validity period of the certificate. This parameter sets the “Not Before" date for the certificate.

By default, when issuing a certificate, ACM Private CA sets the "Not Before" date to the issuance time minus 60 minutes. This compensates for clock inconsistencies across computer systems. The `ValidityNotBefore` parameter can be used to customize the “Not Before” value.

Unlike the `Validity` parameter, the `ValidityNotBefore` parameter is optional.

The `ValidityNotBefore` value is expressed as an explicit date and time, using the `Validity` type value `ABSOLUTE`. For more information, see [Validity](https://docs.aws.amazon.com/acm-pca/latest/APIReference/API_Validity.html) in this API reference and [Validity](https://tools.ietf.org/html/rfc5280#section-4.1.2.5) in RFC 5280.>
  take idempotency-token, name <IdempotencyToken>
    like idempotency-token
    void take
    note <Alphanumeric string that can be used to distinguish between calls to the **IssueCertificate** action. Idempotency tokens for **IssueCertificate** time out after one minute. Therefore, if you call **IssueCertificate** multiple times with the same idempotency token within one minute, ACM Private CA recognizes that you are requesting only one certificate and will issue only one. If you change the idempotency token for each call, PCA recognizes that you are requesting multiple certificates.>