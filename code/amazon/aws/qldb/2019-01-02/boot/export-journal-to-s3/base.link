
load @drumwork/snow/amazonaws.com/qldb/2019-01-02/base/export-journal-to-s3-body
  take form export-journal-to-s3-body

load @drumwork/snow/amazonaws.com/qldb/2019-01-02/base/export-journal-to-s3-response
  take form export-journal-to-s3-response

load @drumwork/snow/amazonaws.com/qldb/2019-01-02/base/resource-not-found-exception
  take form resource-not-found-exception

load @drumwork/snow/amazonaws.com/qldb/2019-01-02/base/resource-precondition-not-met-exception
  take form resource-precondition-not-met-exception

load @drumwork/snow/base/native-string
  take form native-string

boot export-journal-to-s3, name <ExportJournalToS3>
  deed post
  note <Exports journal contents within a date and time range from a ledger into a specified Amazon Simple Storage Service (Amazon S3) bucket. The data is written as files in Amazon Ion format.

If the ledger with the given `Name` doesn't exist, then throws `ResourceNotFoundException`.

If the ledger with the given `Name` is in `CREATING` status, then throws `ResourcePreconditionNotMetException`.

You can initiate up to two concurrent journal export requests for each ledger. Beyond this limit, journal export requests throw `LimitExceededException`.>

  take name
    like native-string
    note <The name of the ledger.>
  take export-journal-to-s3-body, like export-journal-to-s3-body

  line </ledgers/{name}/journal-s3-exports>

  seed json, loan export-journal-to-s3-body

  loot 200
    seed json, like export-journal-to-s3-response
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like resource-precondition-not-met-exception
    note <ResourcePreconditionNotMetException>