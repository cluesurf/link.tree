
load @textsurf/snow/amazonaws.com/cloudsearch/2011-02-01/base/field-name
  take form field-name

load @textsurf/snow/amazonaws.com/cloudsearch/2011-02-01/base/index-field-type
  take form index-field-type

load @textsurf/snow/amazonaws.com/cloudsearch/2011-02-01/base/literal-options
  take form literal-options

load @textsurf/snow/amazonaws.com/cloudsearch/2011-02-01/base/source-attribute-list
  take form source-attribute-list

load @textsurf/snow/amazonaws.com/cloudsearch/2011-02-01/base/text-options
  take form text-options

load @textsurf/snow/amazonaws.com/cloudsearch/2011-02-01/base/u-int-options
  take form u-int-options

form index-field, name <IndexField>
  note <Defines a field in the index, including its name, type, and the source of its data. The `IndexFieldType` indicates which of the options will be present. It is invalid to specify options for a type other than the `IndexFieldType`.>
  take index-field-name, name <IndexFieldName>
    like field-name
    note <The name of a field in the search index. Field names must begin with a letter and can contain the following characters: a-z (lowercase), 0-9, and _ (underscore). Uppercase letters and hyphens are not allowed. The names "body", "docid", and "text_relevance" are reserved and cannot be specified as field or rank expression names.>
  take index-field-type, name <IndexFieldType>
    like index-field-type
    note <The type of field. Based on this type, exactly one of the UIntOptions, LiteralOptions or TextOptions must be present.>
  take u-int-options, name <UIntOptions>
    like u-int-options
    void take
    note <Options for an unsigned integer field. Present if `IndexFieldType` specifies the field is of type unsigned integer.>
  take literal-options, name <LiteralOptions>
    like literal-options
    void take
    note <Options for literal field. Present if `IndexFieldType` specifies the field is of type literal.>
  take text-options, name <TextOptions>
    like text-options
    void take
    note <Options for text field. Present if `IndexFieldType` specifies the field is of type text.>
  take source-attributes, name <SourceAttributes>
    like source-attribute-list
    void take
    note <An optional list of source attributes that provide data for this index field. If not specified, the data is pulled from a source attribute with the same name as this `IndexField`. When one or more source attributes are specified, an optional data transformation can be applied to the source data when populating the index field. You can configure a maximum of 20 sources for an `IndexField`.>