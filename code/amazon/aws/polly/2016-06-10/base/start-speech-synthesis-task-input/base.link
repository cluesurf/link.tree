
load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/engine
  take form engine

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/language-code
  take form language-code

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/lexicon-name-list
  take form lexicon-name-list

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/output-format
  take form output-format

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/output-s3-bucket-name
  take form output-s3-bucket-name

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/output-s3-key-prefix
  take form output-s3-key-prefix

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/sample-rate
  take form sample-rate

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/sns-topic-arn
  take form sns-topic-arn

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/speech-mark-type-list
  take form speech-mark-type-list

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/text
  take form text

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/text-type
  take form text-type

load @nerdbond/snow/amazonaws.com/polly/2016-06-10/base/voice-id
  take form voice-id

form start-speech-synthesis-task-input, name <StartSpeechSynthesisTaskInput>
  take engine, name <Engine>
    like engine
    void take
    note <Specifies the engine (`standard` or `neural`) for Amazon Polly to use when processing input text for speech synthesis. Using a voice that is not supported for the engine selected will result in an error.>
  take language-code, name <LanguageCode>
    like language-code
    void take
    note <Optional language code for the Speech Synthesis request. This is only necessary if using a bilingual voice, such as Aditi, which can be used for either Indian English (en-IN) or Hindi (hi-IN).

If a bilingual voice is used and no language code is specified, Amazon Polly uses the default language of the bilingual voice. The default language for any voice is the one returned by the [DescribeVoices](https://docs.aws.amazon.com/polly/latest/dg/API_DescribeVoices.html) operation for the `LanguageCode` parameter. For example, if no language code is specified, Aditi will use Indian English rather than Hindi.>
  take lexicon-names, name <LexiconNames>
    like lexicon-name-list
    void take
    note <List of one or more pronunciation lexicon names you want the service to apply during synthesis. Lexicons are applied only if the language of the lexicon is the same as the language of the voice.>
  take output-format, name <OutputFormat>
    like output-format
    note <The format in which the returned output will be encoded. For audio stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this will be json.>
  take output-s3-bucket-name, name <OutputS3BucketName>
    like output-s3-bucket-name
    note <Amazon S3 bucket name to which the output file will be saved.>
  take output-s3-key-prefix, name <OutputS3KeyPrefix>
    like output-s3-key-prefix
    void take
    note <The Amazon S3 key prefix for the output speech file.>
  take sample-rate, name <SampleRate>
    like sample-rate
    void take
    note <The audio frequency specified in Hz.

The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050", and "24000". The default value for standard voices is "22050". The default value for neural voices is "24000".

Valid values for pcm are "8000" and "16000" The default value is "16000".>
  take sns-topic-arn, name <SnsTopicArn>
    like sns-topic-arn
    void take
    note <ARN for the SNS topic optionally used for providing status notification for a speech synthesis task.>
  take speech-mark-types, name <SpeechMarkTypes>
    like speech-mark-type-list
    void take
    note <The type of speech marks returned for the input text.>
  take text, name <Text>
    like text
    note <The input text to synthesize. If you specify ssml as the TextType, follow the SSML format for the input text.>
  take text-type, name <TextType>
    like text-type
    void take
    note <Specifies whether the input text is plain text or SSML. The default value is plain text.>
  take voice-id, name <VoiceId>
    like voice-id
    note <Voice ID to use for the synthesis.>