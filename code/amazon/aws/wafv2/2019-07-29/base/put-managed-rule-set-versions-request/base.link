
load @wavebond/snow/amazonaws.com/wafv2/2019-07-29/base/entity-id
  take form entity-id

load @wavebond/snow/amazonaws.com/wafv2/2019-07-29/base/entity-name
  take form entity-name

load @wavebond/snow/amazonaws.com/wafv2/2019-07-29/base/lock-token
  take form lock-token

load @wavebond/snow/amazonaws.com/wafv2/2019-07-29/base/scope
  take form scope

load @wavebond/snow/amazonaws.com/wafv2/2019-07-29/base/version-key-string
  take form version-key-string

load @wavebond/snow/amazonaws.com/wafv2/2019-07-29/base/versions-to-publish
  take form versions-to-publish

form put-managed-rule-set-versions-request, name <PutManagedRuleSetVersionsRequest>
  take name, name <Name>
    like entity-name
    note <The name of the managed rule set. You use this, along with the rule set ID, to identify the rule set.

This name is assigned to the corresponding managed rule group, which your customers can access and use.>
  take scope, name <Scope>
    like scope
    note <Specifies whether this is for an Amazon CloudFront distribution or for a regional application. A regional application can be an Application Load Balancer (ALB), an Amazon API Gateway REST API, or an AppSync GraphQL API.

To work with CloudFront, you must also specify the Region US East (N. Virginia) as follows:

- CLI - Specify the Region when you use the CloudFront scope: `--scope=CLOUDFRONT --region=us-east-1`.

- API and SDKs - For all calls, use the Region endpoint us-east-1.>
  take id, name <Id>
    like entity-id
    note <A unique identifier for the managed rule set. The ID is returned in the responses to commands like `list`. You provide it to operations like `get` and `update`.>
  take lock-token, name <LockToken>
    like lock-token
    note <A token used for optimistic locking. WAF returns a token to your `get` and `list` requests, to mark the state of the entity at the time of the request. To make changes to the entity associated with the token, you provide the token to operations like `update` and `delete`. WAF uses the token to ensure that no changes have been made to the entity since you last retrieved it. If a change has been made, the update fails with a `WAFOptimisticLockException`. If this happens, perform another `get`, and use the new token returned by that operation.>
  take recommended-version, name <RecommendedVersion>
    like version-key-string
    void take
    note <The version of the named managed rule group that you'd like your customers to choose, from among your version offerings.>
  take versions-to-publish, name <VersionsToPublish>
    like versions-to-publish
    void take
    note <The versions of the named managed rule group that you want to offer to your customers.>