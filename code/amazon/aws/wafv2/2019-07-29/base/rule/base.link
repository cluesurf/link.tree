
load @drumwork/snow/amazonaws.com/wafv2/2019-07-29/base/entity-name
  take form entity-name

load @drumwork/snow/amazonaws.com/wafv2/2019-07-29/base/labels
  take form labels

load @drumwork/snow/amazonaws.com/wafv2/2019-07-29/base/override-action
  take form override-action

load @drumwork/snow/amazonaws.com/wafv2/2019-07-29/base/rule-action
  take form rule-action

load @drumwork/snow/amazonaws.com/wafv2/2019-07-29/base/rule-priority
  take form rule-priority

load @drumwork/snow/amazonaws.com/wafv2/2019-07-29/base/statement
  take form statement

load @drumwork/snow/amazonaws.com/wafv2/2019-07-29/base/visibility-config
  take form visibility-config

form rule, name <Rule>
  note <A single rule, which you can use in a WebACL or RuleGroup to identify web requests that you want to allow, block, or count. Each rule includes one top-level Statement that WAF uses to identify matching web requests, and parameters that govern how WAF handles them.>
  take name, name <Name>
    like entity-name
    note <The name of the rule. You can't change the name of a `Rule` after you create it.>
  take priority, name <Priority>
    like rule-priority
    note <If you define more than one `Rule` in a `WebACL`, WAF evaluates each request against the `Rules` in order based on the value of `Priority`. WAF processes rules with lower priority first. The priorities don't need to be consecutive, but they must all be different.>
  take statement, name <Statement>
    like statement
    note <The WAF processing statement for the rule, for example ByteMatchStatement or SizeConstraintStatement.>
  take action, name <Action>
    like rule-action
    void take
    note <The action that WAF should take on a web request when it matches the rule statement. Settings at the web ACL level can override the rule action setting.

This is used only for rules whose statements do not reference a rule group. Rule statements that reference a rule group include `RuleGroupReferenceStatement` and `ManagedRuleGroupStatement`.

You must specify either this `Action` setting or the rule `OverrideAction` setting, but not both:

- If the rule statement does not reference a rule group, use this rule action setting and not the rule override action setting.

- If the rule statement references a rule group, use the override action setting and not this action setting.>
  take override-action, name <OverrideAction>
    like override-action
    void take
    note <The override action to apply to the rules in a rule group. Used only for rule statements that reference a rule group, like `RuleGroupReferenceStatement` and `ManagedRuleGroupStatement`.

Set the override action to none to leave the rule actions in effect. Set it to count to only count matches, regardless of the rule action settings.

In a Rule, you must specify either this `OverrideAction` setting or the rule `Action` setting, but not both:

- If the rule statement references a rule group, use this override action setting and not the action setting.

- If the rule statement does not reference a rule group, use the rule action setting and not this rule override action setting.>
  take rule-labels, name <RuleLabels>
    like labels
    void take
    note <Labels to apply to web requests that match the rule match statement. WAF applies fully qualified labels to matching web requests. A fully qualified label is the concatenation of a label namespace and a rule label. The rule's rule group or web ACL defines the label namespace.

Rules that run after this rule in the web ACL can match against these labels using a `LabelMatchStatement`.

For each label, provide a case-sensitive string containing optional namespaces and a label name, according to the following guidelines:

- Separate each component of the label with a colon.

- Each namespace or name can have up to 128 characters.

- You can specify up to 5 namespaces in a label.

- Don't use the following reserved words in your label specification: `aws`, `waf`, `managed`, `rulegroup`, `webacl`, `regexpatternset`, or `ipset`.

For example, `myLabelName` or `nameSpace1:nameSpace2:myLabelName`.>
  take visibility-config, name <VisibilityConfig>
    like visibility-config
    note <Defines and enables Amazon CloudWatch metrics and web request sample collection.>