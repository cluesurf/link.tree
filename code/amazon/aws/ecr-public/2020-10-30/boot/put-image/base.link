
load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/image-already-exists-exception
  take form image-already-exists-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/image-digest-does-not-match-exception
  take form image-digest-does-not-match-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/image-tag-already-exists-exception
  take form image-tag-already-exists-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/layers-not-found-exception
  take form layers-not-found-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/put-image-response
  take form put-image-response

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/referenced-images-not-found-exception
  take form referenced-images-not-found-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/registry-not-found-exception
  take form registry-not-found-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/repository-not-found-exception
  take form repository-not-found-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/server-exception
  take form server-exception

load @nerdbond/snow/amazonaws.com/ecr-public/2020-10-30/base/unsupported-command-exception
  take form unsupported-command-exception

load @nerdbond/snow/base/native-string
  take form native-string

boot put-image, name <PutImage>
  deed post
  note <Creates or updates the image manifest and tags associated with an image.

When an image is pushed and all new image layers have been uploaded, the PutImage API is called once to create or update the image manifest and the tags associated with the image.

This operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the `docker` CLI to pull, tag, and push images.>

  take x-amz-target
    like native-string
  take put-image-request, like put-image-request

  line </#X-Amz-Target=SpencerFrontendService.PutImage>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan put-image-request

  loot 200
    seed json, like put-image-response
    note <Success>
  loot 480
    seed json, like server-exception
    note <ServerException>
  loot 481
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 482
    seed json, like repository-not-found-exception
    note <RepositoryNotFoundException>
  loot 483
    seed json, like image-already-exists-exception
    note <ImageAlreadyExistsException>
  loot 484
    seed json, like layers-not-found-exception
    note <LayersNotFoundException>
  loot 485
    seed json, like referenced-images-not-found-exception
    note <ReferencedImagesNotFoundException>
  loot 486
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 487
    seed json, like image-tag-already-exists-exception
    note <ImageTagAlreadyExistsException>
  loot 488
    seed json, like image-digest-does-not-match-exception
    note <ImageDigestDoesNotMatchException>
  loot 489
    seed json, like registry-not-found-exception
    note <RegistryNotFoundException>
  loot 490
    seed json, like unsupported-command-exception
    note <UnsupportedCommandException>