
load @treesurf/snow/amazonaws.com/mediapackage/2017-10-12/base/ad-markers
  take form ad-markers

load @treesurf/snow/amazonaws.com/mediapackage/2017-10-12/base/ad-triggers
  take form ad-triggers

load @treesurf/snow/amazonaws.com/mediapackage/2017-10-12/base/ads-on-delivery-restrictions
  take form ads-on-delivery-restrictions

load @treesurf/snow/amazonaws.com/mediapackage/2017-10-12/base/hls-encryption
  take form hls-encryption

load @treesurf/snow/amazonaws.com/mediapackage/2017-10-12/base/playlist-type
  take form playlist-type

load @treesurf/snow/amazonaws.com/mediapackage/2017-10-12/base/stream-selection
  take form stream-selection

load @treesurf/snow/base/boolean
  take form boolean

load @treesurf/snow/base/integer
  take form integer

form hls-package, name <HlsPackage>
  note <An HTTP Live Streaming (HLS) packaging configuration.>
  take ad-markers, name <AdMarkers>
    like ad-markers
    void take
    note <This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.>
    host xml
      host name, text <adMarkers>
  take ad-triggers, name <AdTriggers>
    like ad-triggers
    void take
    host xml
      host name, text <adTriggers>
  take ads-on-delivery-restrictions, name <AdsOnDeliveryRestrictions>
    like ads-on-delivery-restrictions
    void take
    host xml
      host name, text <adsOnDeliveryRestrictions>
  take encryption, name <Encryption>
    like hls-encryption
    void take
    host xml
      host name, text <encryption>
  take include-iframe-only-stream, name <IncludeIframeOnlyStream>
    like boolean
    void take
    note <When enabled, an I-Frame only stream will be included in the output.>
    host xml
      host name, text <includeIframeOnlyStream>
  take playlist-type, name <PlaylistType>
    like playlist-type
    void take
    note <The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.>
    host xml
      host name, text <playlistType>
  take playlist-window-seconds, name <PlaylistWindowSeconds>
    like integer
    void take
    note <Time window (in seconds) contained in each parent manifest.>
    host xml
      host name, text <playlistWindowSeconds>
  take program-date-time-interval-seconds, name <ProgramDateTimeIntervalSeconds>
    like integer
    void take
    note <The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.>
    host xml
      host name, text <programDateTimeIntervalSeconds>
  take segment-duration-seconds, name <SegmentDurationSeconds>
    like integer
    void take
    note <Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.>
    host xml
      host name, text <segmentDurationSeconds>
  take stream-selection, name <StreamSelection>
    like stream-selection
    void take
    host xml
      host name, text <streamSelection>
  take use-audio-rendition-group, name <UseAudioRenditionGroup>
    like boolean
    void take
    note <When enabled, audio streams will be placed in rendition groups in the output.>
    host xml
      host name, text <useAudioRenditionGroup>