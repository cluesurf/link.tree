
load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/ad-markers
  take form ad-markers

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/ad-triggers
  take form ad-triggers

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/ads-on-delivery-restrictions
  take form ads-on-delivery-restrictions

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/cmaf-encryption
  take form cmaf-encryption

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/dash-encryption
  take form dash-encryption

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/hls-encryption
  take form hls-encryption

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/list-of-hls-manifest-create-or-update-parameters
  take form list-of-hls-manifest-create-or-update-parameters

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/list-of-period-triggers-element
  take form list-of-period-triggers-element

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/manifest-layout
  take form manifest-layout

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/mss-encryption
  take form mss-encryption

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/playlist-type
  take form playlist-type

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/profile
  take form profile

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/segment-template-format
  take form segment-template-format

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/stream-selection
  take form stream-selection

load @textsurf/snow/amazonaws.com/mediapackage/2017-10-12/base/utc-timing
  take form utc-timing

load @textsurf/snow/base/boolean
  take form boolean

load @textsurf/snow/base/integer
  take form integer

load @textsurf/snow/base/string
  take form string

form create-origin-endpoint-body
  take authorization, name <authorization>
    like form
      take cdn-identifier-secret, name <CdnIdentifierSecret>
        like string
        void take
        note <The Amazon Resource Name (ARN) for the secret in Secrets Manager that your Content Distribution Network (CDN) uses for authorization to access your endpoint.>
        host xml
          host name, text <cdnIdentifierSecret>
      take secrets-role-arn, name <SecretsRoleArn>
        like string
        void take
        note <The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.>
        host xml
          host name, text <secretsRoleArn>
    void take
  take channel-id, name <channelId>
  take cmaf-package, name <cmafPackage>
    like form
      take encryption, name <Encryption>
        like cmaf-encryption
        void take
        host xml
          host name, text <encryption>
      take hls-manifests, name <HlsManifests>
        like list-of-hls-manifest-create-or-update-parameters
        void take
        note <A list of HLS manifest configurations>
        host xml
          host name, text <hlsManifests>
      take segment-duration-seconds, name <SegmentDurationSeconds>
        like integer
        void take
        note <Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.>
        host xml
          host name, text <segmentDurationSeconds>
      take segment-prefix, name <SegmentPrefix>
        like string
        void take
        note <An optional custom string that is prepended to the name of each segment. If not specified, it defaults to the ChannelId.>
        host xml
          host name, text <segmentPrefix>
      take stream-selection, name <StreamSelection>
        like stream-selection
        void take
        host xml
          host name, text <streamSelection>
    void take
  take dash-package, name <dashPackage>
    like form
      take ad-triggers, name <AdTriggers>
        like ad-triggers
        void take
        host xml
          host name, text <adTriggers>
      take ads-on-delivery-restrictions, name <AdsOnDeliveryRestrictions>
        like ads-on-delivery-restrictions
        void take
        host xml
          host name, text <adsOnDeliveryRestrictions>
      take encryption, name <Encryption>
        like dash-encryption
        void take
        host xml
          host name, text <encryption>
      take manifest-layout, name <ManifestLayout>
        like manifest-layout
        void take
        note <Determines the position of some tags in the Media Presentation Description (MPD). When set to FULL, elements like SegmentTemplate and ContentProtection are included in each Representation. When set to COMPACT, duplicate elements are combined and presented at the AdaptationSet level.>
        host xml
          host name, text <manifestLayout>
      take manifest-window-seconds, name <ManifestWindowSeconds>
        like integer
        void take
        note <Time window (in seconds) contained in each manifest.>
        host xml
          host name, text <manifestWindowSeconds>
      take min-buffer-time-seconds, name <MinBufferTimeSeconds>
        like integer
        void take
        note <Minimum duration (in seconds) that a player will buffer media before starting the presentation.>
        host xml
          host name, text <minBufferTimeSeconds>
      take min-update-period-seconds, name <MinUpdatePeriodSeconds>
        like integer
        void take
        note <Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).>
        host xml
          host name, text <minUpdatePeriodSeconds>
      take period-triggers, name <PeriodTriggers>
        like list-of-period-triggers-element
        void take
        note <A list of triggers that controls when the outgoing Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD) will be partitioned into multiple periods. If empty, the content will not be partitioned into more than one period. If the list contains "ADS", new periods will be created where the Channel source contains SCTE-35 ad markers.>
        host xml
          host name, text <periodTriggers>
      take profile, name <Profile>
        like profile
        void take
        note <The Dynamic Adaptive Streaming over HTTP (DASH) profile type. When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.>
        host xml
          host name, text <profile>
      take segment-duration-seconds, name <SegmentDurationSeconds>
        like integer
        void take
        note <Duration (in seconds) of each segment. Actual segments will be rounded to the nearest multiple of the source segment duration.>
        host xml
          host name, text <segmentDurationSeconds>
      take segment-template-format, name <SegmentTemplateFormat>
        like segment-template-format
        void take
        note <Determines the type of SegmentTemplate included in the Media Presentation Description (MPD). When set to NUMBER_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Number$ media URLs. When set to TIME_WITH_TIMELINE, a full timeline is presented in each SegmentTemplate, with $Time$ media URLs. When set to NUMBER_WITH_DURATION, only a duration is included in each SegmentTemplate, with $Number$ media URLs.>
        host xml
          host name, text <segmentTemplateFormat>
      take stream-selection, name <StreamSelection>
        like stream-selection
        void take
        host xml
          host name, text <streamSelection>
      take suggested-presentation-delay-seconds, name <SuggestedPresentationDelaySeconds>
        like integer
        void take
        note <Duration (in seconds) to delay live content before presentation.>
        host xml
          host name, text <suggestedPresentationDelaySeconds>
      take utc-timing, name <UtcTiming>
        like utc-timing
        void take
        note <Determines the type of UTCTiming included in the Media Presentation Description (MPD)>
        host xml
          host name, text <utcTiming>
      take utc-timing-uri, name <UtcTimingUri>
        like string
        void take
        note <Specifies the value attribute of the UTCTiming field when utcTiming is set to HTTP-ISO or HTTP-HEAD>
        host xml
          host name, text <utcTimingUri>
    void take
  take description, name <description>
    void take
  take hls-package, name <hlsPackage>
    like form
      take ad-markers, name <AdMarkers>
        like ad-markers
        void take
        note <This setting controls how ad markers are included in the packaged OriginEndpoint. "NONE" will omit all SCTE-35 ad markers from the output. "PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 ad markers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest. "SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35 messages in the input source. "DATERANGE" inserts EXT-X-DATERANGE tags to signal ad and program transition events in HLS and CMAF manifests. For this option, you must set a programDateTimeIntervalSeconds value that is greater than 0.>
        host xml
          host name, text <adMarkers>
      take ad-triggers, name <AdTriggers>
        like ad-triggers
        void take
        host xml
          host name, text <adTriggers>
      take ads-on-delivery-restrictions, name <AdsOnDeliveryRestrictions>
        like ads-on-delivery-restrictions
        void take
        host xml
          host name, text <adsOnDeliveryRestrictions>
      take encryption, name <Encryption>
        like hls-encryption
        void take
        host xml
          host name, text <encryption>
      take include-iframe-only-stream, name <IncludeIframeOnlyStream>
        like boolean
        void take
        note <When enabled, an I-Frame only stream will be included in the output.>
        host xml
          host name, text <includeIframeOnlyStream>
      take playlist-type, name <PlaylistType>
        like playlist-type
        void take
        note <The HTTP Live Streaming (HLS) playlist type. When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPE entry will be included in the media playlist.>
        host xml
          host name, text <playlistType>
      take playlist-window-seconds, name <PlaylistWindowSeconds>
        like integer
        void take
        note <Time window (in seconds) contained in each parent manifest.>
        host xml
          host name, text <playlistWindowSeconds>
      take program-date-time-interval-seconds, name <ProgramDateTimeIntervalSeconds>
        like integer
        void take
        note <The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME tag inserted into manifests. Additionally, when an interval is specified ID3Timed Metadata messages will be generated every 5 seconds using the ingest time of the content. If the interval is not specified, or set to 0, then no EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and no ID3Timed Metadata messages will be generated. Note that irrespective of this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input, it will be passed through to HLS output.>
        host xml
          host name, text <programDateTimeIntervalSeconds>
      take segment-duration-seconds, name <SegmentDurationSeconds>
        like integer
        void take
        note <Duration (in seconds) of each fragment. Actual fragments will be rounded to the nearest multiple of the source fragment duration.>
        host xml
          host name, text <segmentDurationSeconds>
      take stream-selection, name <StreamSelection>
        like stream-selection
        void take
        host xml
          host name, text <streamSelection>
      take use-audio-rendition-group, name <UseAudioRenditionGroup>
        like boolean
        void take
        note <When enabled, audio streams will be placed in rendition groups in the output.>
        host xml
          host name, text <useAudioRenditionGroup>
    void take
  take id, name <id>
  take manifest-name, name <manifestName>
    void take
  take mss-package, name <mssPackage>
    like form
      take encryption, name <Encryption>
        like mss-encryption
        void take
        host xml
          host name, text <encryption>
      take manifest-window-seconds, name <ManifestWindowSeconds>
        like integer
        void take
        note <The time window (in seconds) contained in each manifest.>
        host xml
          host name, text <manifestWindowSeconds>
      take segment-duration-seconds, name <SegmentDurationSeconds>
        like integer
        void take
        note <The duration (in seconds) of each segment.>
        host xml
          host name, text <segmentDurationSeconds>
      take stream-selection, name <StreamSelection>
        like stream-selection
        void take
        host xml
          host name, text <streamSelection>
    void take
  take origination, name <origination>
    void take
  take startover-window-seconds, name <startoverWindowSeconds>
    void take
  take tags, name <tags>
    void take
  take time-delay-seconds, name <timeDelaySeconds>
    void take
  take whitelist, name <whitelist>
    void take