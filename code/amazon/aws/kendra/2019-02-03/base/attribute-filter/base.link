
load @treesurf/snow/amazonaws.com/kendra/2019-02-03/base/attribute-filter
  take form attribute-filter

load @treesurf/snow/amazonaws.com/kendra/2019-02-03/base/attribute-filter-list
  take form attribute-filter-list

load @treesurf/snow/amazonaws.com/kendra/2019-02-03/base/document-attribute
  take form document-attribute

form attribute-filter, name <AttributeFilter>
  note <Provides filtering the query results based on document attributes.

When you use the `AndAllFilters` or `OrAllFilters`, filters you can use 2 layers under the first attribute filter. For example, you can use:

`&lt;AndAllFilters&gt;`

1. `&lt;OrAllFilters&gt;`

2. `&lt;EqualTo&gt;`

If you use more than 2 layers, you receive a `ValidationException` exception with the message "`AttributeFilter` cannot have a depth of more than 2."

If you use more than 10 attribute filters, you receive a `ValidationException` exception with the message "`AttributeFilter` cannot have a length of more than 10".>
  take and-all-filters, name <AndAllFilters>
    like attribute-filter-list
    void take
    note <Performs a logical `AND` operation on all supplied filters.>
  take or-all-filters, name <OrAllFilters>
    like attribute-filter-list
    void take
    note <Performs a logical `OR` operation on all supplied filters.>
  take not-filter, name <NotFilter>
    like attribute-filter
    void take
    note <Performs a logical `NOT` operation on all supplied filters.>
  take equals-to, name <EqualsTo>
    like document-attribute
    void take
    note <Performs an equals operation on two document attributes.>
  take contains-all, name <ContainsAll>
    like document-attribute
    void take
    note <Returns true when a document contains all of the specified document attributes. This filter is only applicable to `StringListValue` metadata.>
  take contains-any, name <ContainsAny>
    like document-attribute
    void take
    note <Returns true when a document contains any of the specified document attributes. This filter is only applicable to `StringListValue` metadata.>
  take greater-than, name <GreaterThan>
    like document-attribute
    void take
    note <Performs a greater than operation on two document attributes. Use with a document attribute of type `Integer` or `Long`.>
  take greater-than-or-equals, name <GreaterThanOrEquals>
    like document-attribute
    void take
    note <Performs a greater or equals than operation on two document attributes. Use with a document attribute of type `Integer` or `Long`.>
  take less-than, name <LessThan>
    like document-attribute
    void take
    note <Performs a less than operation on two document attributes. Use with a document attribute of type `Integer` or `Long`.>
  take less-than-or-equals, name <LessThanOrEquals>
    like document-attribute
    void take
    note <Performs a less than or equals operation on two document attributes. Use with a document attribute of type `Integer` or `Long`.>