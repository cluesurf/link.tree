
load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/attribute-filter
  take form attribute-filter

load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/document-attribute-key-list
  take form document-attribute-key-list

load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/document-relevance-override-configuration-list
  take form document-relevance-override-configuration-list

load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/facet-list
  take form facet-list

load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/index-id
  take form index-id

load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/query-result-type
  take form query-result-type

load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/query-text
  take form query-text

load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/sorting-configuration
  take form sorting-configuration

load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/user-context
  take form user-context

load @textsurf/snow/amazonaws.com/kendra/2019-02-03/base/visitor-id
  take form visitor-id

load @textsurf/snow/base/integer
  take form integer

form query-request, name <QueryRequest>
  take index-id, name <IndexId>
    like index-id
    note <The unique identifier of the index to search. The identifier is returned in the response from the `CreateIndex` operation.>
  take query-text, name <QueryText>
    like query-text
    note <The text to search for.>
  take attribute-filter, name <AttributeFilter>
    like attribute-filter
    void take
    note <Enables filtered searches based on document attributes. You can only provide one attribute filter; however, the `AndAllFilters`, `NotFilter`, and `OrAllFilters` parameters contain a list of other filters.

The `AttributeFilter` parameter enables you to create a set of filtering rules that a document must satisfy to be included in the query results.>
  take facets, name <Facets>
    like facet-list
    void take
    note <An array of documents attributes. Amazon Kendra returns a count for each attribute key specified. You can use this information to help narrow the search for your user.>
  take requested-document-attributes, name <RequestedDocumentAttributes>
    like document-attribute-key-list
    void take
    note <An array of document attributes to include in the response. No other document attributes are included in the response. By default all document attributes are included in the response.>
  take query-result-type-filter, name <QueryResultTypeFilter>
    like query-result-type
    void take
    note <Sets the type of query. Only results for the specified query type are returned.>
  take document-relevance-override-configurations, name <DocumentRelevanceOverrideConfigurations>
    like document-relevance-override-configuration-list
    void take
    note <Overrides relevance tuning configurations of fields or attributes set at the index level.

If you use this API to override the relevance tuning configured at the index level, but there is no relevance tuning configured at the index level, then Amazon Kendra does not apply any relevance tuning.

If there is relevance tuning configured at the index level, but you do not use this API to override any relevance tuning in the index, then Amazon Kendra uses the relevance tuning that is configured at the index level.

If there is relevance tuning configured for fields at the index level, but you use this API to override only some of these fields, then for the fields you did not override, the importance is set to 1.>
  take page-number, name <PageNumber>
    like integer
    void take
    note <Query results are returned in pages the size of the `PageSize` parameter. By default, Amazon Kendra returns the first page of results. Use this parameter to get result pages after the first one.>
  take page-size, name <PageSize>
    like integer
    void take
    note <Sets the number of results that are returned in each page of results. The default page size is 10. The maximum number of results returned is 100. If you ask for more than 100 results, only 100 are returned.>
  take sorting-configuration, name <SortingConfiguration>
    like sorting-configuration
    void take
    note <Provides information that determines how the results of the query are sorted. You can set the field that Amazon Kendra should sort the results on, and specify whether the results should be sorted in ascending or descending order. In the case of ties in sorting the results, the results are sorted by relevance.

If you don't provide sorting configuration, the results are sorted by the relevance that Amazon Kendra determines for the result.>
  take user-context, name <UserContext>
    like user-context
    void take
    note <The user context token.>
  take visitor-id, name <VisitorId>
    like visitor-id
    void take
    note <Provides an identifier for a specific user. The `VisitorId` should be a unique identifier, such as a GUID. Don't use personally identifiable information, such as the user's email address, as the `VisitorId`.>