
load @nerdbond/snow/amazonaws.com/servicediscovery/2017-03-14/base/dns-config
  take form dns-config

load @nerdbond/snow/amazonaws.com/servicediscovery/2017-03-14/base/health-check-config
  take form health-check-config

load @nerdbond/snow/amazonaws.com/servicediscovery/2017-03-14/base/health-check-custom-config
  take form health-check-custom-config

load @nerdbond/snow/amazonaws.com/servicediscovery/2017-03-14/base/resource-description
  take form resource-description

load @nerdbond/snow/amazonaws.com/servicediscovery/2017-03-14/base/resource-id
  take form resource-id

load @nerdbond/snow/amazonaws.com/servicediscovery/2017-03-14/base/service-name
  take form service-name

load @nerdbond/snow/amazonaws.com/servicediscovery/2017-03-14/base/service-type-option
  take form service-type-option

load @nerdbond/snow/amazonaws.com/servicediscovery/2017-03-14/base/tag-list
  take form tag-list

form create-service-request, name <CreateServiceRequest>
  take name, name <Name>
    like service-name
    note <The name that you want to assign to the service.

If you want Cloud Map to create an `SRV` record when you register an instance and you're using a system that requires a specific `SRV` format, such as [HAProxy](http://www.haproxy.org/), specify the following for `Name`:

- Start the name with an underscore (_), such as `_exampleservice`.

- End the name with _._protocol_, such as `._tcp`.

When you register an instance, Cloud Map creates an `SRV` record and assigns a name to the record by concatenating the service name and the namespace name (for example,

`_exampleservice._tcp.example.com`).

For services that are accessible by DNS queries, you can't create multiple services with names that differ only by case (such as EXAMPLE and example). Otherwise, these services have the same DNS name and can't be distinguished. However, if you use a namespace that's only accessible by API calls, then you can create services that with names that differ only by case.>
  take namespace-id, name <NamespaceId>
    like resource-id
    void take
    note <The ID of the namespace that you want to use to create the service. The namespace ID must be specified, but it can be specified either here or in the `DnsConfig` object.>
  take creator-request-id, name <CreatorRequestId>
    like resource-id
    void take
    note <A unique string that identifies the request and that allows failed `CreateService` requests to be retried without the risk of running the operation twice. `CreatorRequestId` can be any unique string (for example, a date/timestamp).>
  take description, name <Description>
    like resource-description
    void take
    note <A description for the service.>
  take dns-config, name <DnsConfig>
    like dns-config
    void take
    note <A complex type that contains information about the Amazon Route 53 records that you want Cloud Map to create when you register an instance.>
  take health-check-config, name <HealthCheckConfig>
    like health-check-config
    void take
    note <_Public DNS and HTTP namespaces only._ A complex type that contains settings for an optional Route 53 health check. If you specify settings for a health check, Cloud Map associates the health check with all the Route 53 DNS records that you specify in `DnsConfig`.

If you specify a health check configuration, you can specify either `HealthCheckCustomConfig` or `HealthCheckConfig` but not both.

For information about the charges for health checks, see [Cloud Map Pricing](http://aws.amazon.com/cloud-map/pricing/).>
  take health-check-custom-config, name <HealthCheckCustomConfig>
    like health-check-custom-config
    void take
    note <A complex type that contains information about an optional custom health check.

If you specify a health check configuration, you can specify either `HealthCheckCustomConfig` or `HealthCheckConfig` but not both.

You can't add, update, or delete a `HealthCheckCustomConfig` configuration from an existing service.>
  take tags, name <Tags>
    like tag-list
    void take
    note <The tags to add to the service. Each tag consists of a key and an optional value that you define. Tags keys can be up to 128 characters in length, and tag values can be up to 256 characters in length.>
  take type, name <Type>
    like service-type-option
    void take
    note <If present, specifies that the service instances are only discoverable using the `DiscoverInstances` API operation. No DNS records is registered for the service instances. The only valid value is `HTTP`.>