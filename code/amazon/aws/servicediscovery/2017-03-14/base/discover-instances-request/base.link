
load @wavebond/snow/amazonaws.com/servicediscovery/2017-03-14/base/attributes
  take form attributes

load @wavebond/snow/amazonaws.com/servicediscovery/2017-03-14/base/discover-max-results
  take form discover-max-results

load @wavebond/snow/amazonaws.com/servicediscovery/2017-03-14/base/health-status-filter
  take form health-status-filter

load @wavebond/snow/amazonaws.com/servicediscovery/2017-03-14/base/namespace-name
  take form namespace-name

load @wavebond/snow/amazonaws.com/servicediscovery/2017-03-14/base/service-name
  take form service-name

form discover-instances-request, name <DiscoverInstancesRequest>
  take namespace-name, name <NamespaceName>
    like namespace-name
    note <The `HttpName` name of the namespace. It's found in the `HttpProperties` member of the `Properties` member of the namespace.>
  take service-name, name <ServiceName>
    like service-name
    note <The name of the service that you specified when you registered the instance.>
  take max-results, name <MaxResults>
    like discover-max-results
    void take
    note <The maximum number of instances that you want Cloud Map to return in the response to a `DiscoverInstances` request. If you don't specify a value for `MaxResults`, Cloud Map returns up to 100 instances.>
  take query-parameters, name <QueryParameters>
    like attributes
    void take
    note <Filters to scope the results based on custom attributes for the instance (for example, `{version=v1, az=1a}`). Only instances that match all the specified key-value pairs are returned.>
  take optional-parameters, name <OptionalParameters>
    like attributes
    void take
    note <Opportunistic filters to scope the results based on custom attributes. If there are instances that match both the filters specified in both the `QueryParameters` parameter and this parameter, all of these instances are returned. Otherwise, the filters are ignored, and only instances that match the filters that are specified in the `QueryParameters` parameter are returned.>
  take health-status, name <HealthStatus>
    like health-status-filter
    void take
    note <The health status of the instances that you want to discover. This parameter is ignored for services that don't have a health check configured, and all instances are returned.

HEALTHY

Returns healthy instances.

UNHEALTHY

Returns unhealthy instances.

ALL

Returns all instances.

HEALTHY_OR_ELSE_ALL

Returns healthy instances, unless none are reporting a healthy state. In that case, return all instances. This is also called failing open.>