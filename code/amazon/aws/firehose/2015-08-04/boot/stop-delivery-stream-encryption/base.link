
load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/invalid-argument-exception
  take form invalid-argument-exception

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/resource-in-use-exception
  take form resource-in-use-exception

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/resource-not-found-exception
  take form resource-not-found-exception

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/stop-delivery-stream-encryption-output
  take form stop-delivery-stream-encryption-output

load @textsurf/snow/base/native-string
  take form native-string

boot stop-delivery-stream-encryption, name <StopDeliveryStreamEncryption>
  deed post
  note <Disables server-side encryption (SSE) for the delivery stream.

This operation is asynchronous. It returns immediately. When you invoke it, Kinesis Data Firehose first sets the encryption status of the stream to `DISABLING`, and then to `DISABLED`. You can continue to read and write data to your stream while its status is `DISABLING`. It can take up to 5 seconds after the encryption status changes to `DISABLED` before all records written to the delivery stream are no longer subject to encryption. To find out whether a record or a batch of records was encrypted, check the response elements PutRecordOutput$Encrypted and PutRecordBatchOutput$Encrypted, respectively.

To check the encryption state of a delivery stream, use DescribeDeliveryStream.

If SSE is enabled using a customer managed CMK and then you invoke `StopDeliveryStreamEncryption`, Kinesis Data Firehose schedules the related KMS grant for retirement and then retires it after it ensures that it is finished delivering records to the destination.

The `StartDeliveryStreamEncryption` and `StopDeliveryStreamEncryption` operations have a combined limit of 25 calls per delivery stream per 24 hours. For example, you reach the limit if you call `StartDeliveryStreamEncryption` 13 times and `StopDeliveryStreamEncryption` 12 times for the same delivery stream in a 24-hour period.>

  take x-amz-target
    like native-string
  take stop-delivery-stream-encryption-input, like stop-delivery-stream-encryption-input

  line </#X-Amz-Target=Firehose_20150804.StopDeliveryStreamEncryption>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan stop-delivery-stream-encryption-input

  loot 200
    seed json, like stop-delivery-stream-encryption-output
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like resource-in-use-exception
    note <ResourceInUseException>
  loot 482
    seed json, like invalid-argument-exception
    note <InvalidArgumentException>
  loot 483
    seed json, like limit-exceeded-exception
    note <LimitExceededException>