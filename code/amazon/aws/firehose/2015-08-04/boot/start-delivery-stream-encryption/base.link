
load @treesurf/snow/amazonaws.com/firehose/2015-08-04/base/invalid-argument-exception
  take form invalid-argument-exception

load @treesurf/snow/amazonaws.com/firehose/2015-08-04/base/invalid-kms-resource-exception
  take form invalid-kms-resource-exception

load @treesurf/snow/amazonaws.com/firehose/2015-08-04/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @treesurf/snow/amazonaws.com/firehose/2015-08-04/base/resource-in-use-exception
  take form resource-in-use-exception

load @treesurf/snow/amazonaws.com/firehose/2015-08-04/base/resource-not-found-exception
  take form resource-not-found-exception

load @treesurf/snow/amazonaws.com/firehose/2015-08-04/base/start-delivery-stream-encryption-output
  take form start-delivery-stream-encryption-output

load @treesurf/snow/base/native-string
  take form native-string

boot start-delivery-stream-encryption, name <StartDeliveryStreamEncryption>
  deed post
  note <Enables server-side encryption (SSE) for the delivery stream.

This operation is asynchronous. It returns immediately. When you invoke it, Kinesis Data Firehose first sets the encryption status of the stream to `ENABLING`, and then to `ENABLED`. The encryption status of a delivery stream is the `Status` property in DeliveryStreamEncryptionConfiguration. If the operation fails, the encryption status changes to `ENABLING_FAILED`. You can continue to read and write data to your delivery stream while the encryption status is `ENABLING`, but the data is not encrypted. It can take up to 5 seconds after the encryption status changes to `ENABLED` before all records written to the delivery stream are encrypted. To find out whether a record or a batch of records was encrypted, check the response elements PutRecordOutput$Encrypted and PutRecordBatchOutput$Encrypted, respectively.

To check the encryption status of a delivery stream, use DescribeDeliveryStream.

Even if encryption is currently enabled for a delivery stream, you can still invoke this operation on it to change the ARN of the CMK or both its type and ARN. If you invoke this method to change the CMK, and the old CMK is of type `CUSTOMER_MANAGED_CMK`, Kinesis Data Firehose schedules the grant it had on the old CMK for retirement. If the new CMK is of type `CUSTOMER_MANAGED_CMK`, Kinesis Data Firehose creates a grant that enables it to use the new CMK to encrypt and decrypt data and to manage the grant.

If a delivery stream already has encryption enabled and then you invoke this operation to change the ARN of the CMK or both its type and ARN and you get `ENABLING_FAILED`, this only means that the attempt to change the CMK failed. In this case, encryption remains enabled with the old CMK.

If the encryption status of your delivery stream is `ENABLING_FAILED`, you can invoke this operation again with a valid CMK. The CMK must be enabled and the key policy mustn't explicitly deny the permission for Kinesis Data Firehose to invoke KMS encrypt and decrypt operations.

You can enable SSE for a delivery stream only if it's a delivery stream that uses `DirectPut` as its source.

The `StartDeliveryStreamEncryption` and `StopDeliveryStreamEncryption` operations have a combined limit of 25 calls per delivery stream per 24 hours. For example, you reach the limit if you call `StartDeliveryStreamEncryption` 13 times and `StopDeliveryStreamEncryption` 12 times for the same delivery stream in a 24-hour period.>

  take x-amz-target
    like native-string
  take start-delivery-stream-encryption-input, like start-delivery-stream-encryption-input

  line </#X-Amz-Target=Firehose_20150804.StartDeliveryStreamEncryption>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan start-delivery-stream-encryption-input

  loot 200
    seed json, like start-delivery-stream-encryption-output
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like resource-in-use-exception
    note <ResourceInUseException>
  loot 482
    seed json, like invalid-argument-exception
    note <InvalidArgumentException>
  loot 483
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 484
    seed json, like invalid-kms-resource-exception
    note <InvalidKMSResourceException>