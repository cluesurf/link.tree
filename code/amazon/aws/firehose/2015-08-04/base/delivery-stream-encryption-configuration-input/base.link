
load @termsurf/snow/amazonaws.com/firehose/2015-08-04/base/awskms-key-arn
  take form awskms-key-arn

load @termsurf/snow/amazonaws.com/firehose/2015-08-04/base/key-type
  take form key-type

form delivery-stream-encryption-configuration-input, name <DeliveryStreamEncryptionConfigurationInput>
  note <Specifies the type and Amazon Resource Name (ARN) of the CMK to use for Server-Side Encryption (SSE).>
  take key-arn, name <KeyARN>
    like awskms-key-arn
    void take
    note <If you set `KeyType` to `CUSTOMER_MANAGED_CMK`, you must specify the Amazon Resource Name (ARN) of the CMK. If you set `KeyType` to `AWS_OWNED_CMK`, Kinesis Data Firehose uses a service-account CMK.>
  take key-type, name <KeyType>
    like key-type
    note <Indicates the type of customer master key (CMK) to use for encryption. The default setting is `AWS_OWNED_CMK`. For more information about CMKs, see [Customer Master Keys (CMKs)](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#master_keys). When you invoke CreateDeliveryStream or StartDeliveryStreamEncryption with `KeyType` set to CUSTOMER_MANAGED_CMK, Kinesis Data Firehose invokes the Amazon KMS operation [CreateGrant](https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateGrant.html) to create a grant that allows the Kinesis Data Firehose service to use the customer managed CMK to perform encryption and decryption. Kinesis Data Firehose manages that grant.

When you invoke StartDeliveryStreamEncryption to change the CMK for a delivery stream that is encrypted with a customer managed CMK, Kinesis Data Firehose schedules the grant it had on the old CMK for retirement.

You can use a CMK of type CUSTOMER_MANAGED_CMK to encrypt up to 500 delivery streams. If a CreateDeliveryStream or StartDeliveryStreamEncryption operation exceeds this limit, Kinesis Data Firehose throws a `LimitExceededException`.

To encrypt your delivery stream, use symmetric CMKs. Kinesis Data Firehose doesn't support asymmetric CMKs. For information about symmetric and asymmetric CMKs, see [About Symmetric and Asymmetric CMKs](https://docs.aws.amazon.com/kms/latest/developerguide/symm-asymm-concepts.html) in the AWS Key Management Service developer guide.>