
load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/cloud-watch-logging-options
  take form cloud-watch-logging-options

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/hec-acknowledgment-timeout-in-seconds
  take form hec-acknowledgment-timeout-in-seconds

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/hec-endpoint
  take form hec-endpoint

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/hec-endpoint-type
  take form hec-endpoint-type

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/hec-token
  take form hec-token

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/processing-configuration
  take form processing-configuration

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/s3-destination-update
  take form s3-destination-update

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/splunk-retry-options
  take form splunk-retry-options

load @textsurf/snow/amazonaws.com/firehose/2015-08-04/base/splunk-s3-backup-mode
  take form splunk-s3-backup-mode

form splunk-destination-update, name <SplunkDestinationUpdate>
  note <Describes an update for a destination in Splunk.>
  take hec-endpoint, name <HECEndpoint>
    like hec-endpoint
    void take
    note <The HTTP Event Collector (HEC) endpoint to which Kinesis Data Firehose sends your data.>
  take hec-endpoint-type, name <HECEndpointType>
    like hec-endpoint-type
    void take
    note <This type can be either "Raw" or "Event.">
  take hec-token, name <HECToken>
    like hec-token
    void take
    note <A GUID that you obtain from your Splunk cluster when you create a new HEC endpoint.>
  take hec-acknowledgment-timeout-in-seconds, name <HECAcknowledgmentTimeoutInSeconds>
    like hec-acknowledgment-timeout-in-seconds
    void take
    note <The amount of time that Kinesis Data Firehose waits to receive an acknowledgment from Splunk after it sends data. At the end of the timeout period, Kinesis Data Firehose either tries to send the data again or considers it an error, based on your retry settings.>
  take retry-options, name <RetryOptions>
    like splunk-retry-options
    void take
    note <The retry behavior in case Kinesis Data Firehose is unable to deliver data to Splunk or if it doesn't receive an acknowledgment of receipt from Splunk.>
  take s3-backup-mode, name <S3BackupMode>
    like splunk-s3-backup-mode
    void take
    note <Specifies how you want Kinesis Data Firehose to back up documents to Amazon S3. When set to `FailedDocumentsOnly`, Kinesis Data Firehose writes any data that could not be indexed to the configured Amazon S3 destination. When set to `AllEvents`, Kinesis Data Firehose delivers all incoming records to Amazon S3, and also writes failed documents to Amazon S3. The default value is `FailedEventsOnly`.

You can update this backup mode from `FailedEventsOnly` to `AllEvents`. You can't update it from `AllEvents` to `FailedEventsOnly`.>
  take s3-update, name <S3Update>
    like s3-destination-update
    void take
    note <Your update to the configuration of the backup Amazon S3 location.>
  take processing-configuration, name <ProcessingConfiguration>
    like processing-configuration
    void take
    note <The data processing configuration.>
  take cloud-watch-logging-options, name <CloudWatchLoggingOptions>
    like cloud-watch-logging-options
    void take
    note <The Amazon CloudWatch logging options for your delivery stream.>