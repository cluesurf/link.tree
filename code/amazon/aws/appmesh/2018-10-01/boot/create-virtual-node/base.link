
load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/bad-request-exception
  take form bad-request-exception

load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/conflict-exception
  take form conflict-exception

load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/create-virtual-node-body
  take form create-virtual-node-body

load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/create-virtual-node-output
  take form create-virtual-node-output

load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/forbidden-exception
  take form forbidden-exception

load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/internal-server-error-exception
  take form internal-server-error-exception

load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/not-found-exception
  take form not-found-exception

load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/service-unavailable-exception
  take form service-unavailable-exception

load @wavebond/snow/amazonaws.com/appmesh/2018-10-01/base/too-many-requests-exception
  take form too-many-requests-exception

load @wavebond/snow/base/native-string
  take form native-string

boot create-virtual-node, name <CreateVirtualNode>
  deed put
  note <Creates a new virtual node within a service mesh.

A virtual node acts as logical pointer to a particular task group, such as an Amazon ECS service or a Kubernetes deployment. When you create a virtual node, you must specify the DNS service discovery name for your task group.

Any inbound traffic that your virtual node expects should be specified as a `listener`. Any outbound traffic that your virtual node expects to reach should be specified as a `backend`.

The response metadata for your new virtual node contains the `arn` that is associated with the virtual node. Set this value (either the full ARN or the truncated resource name, for example, `mesh/default/virtualNode/simpleapp`, as the `APPMESH_VIRTUAL_NODE_NAME` environment variable for your task group's Envoy proxy container in your task definition or pod spec. This is then mapped to the `node.id` and `node.cluster` Envoy parameters.

If you require your Envoy stats or tracing to use a different name, you can override the `node.cluster` value that is set by `APPMESH_VIRTUAL_NODE_NAME` with the `APPMESH_VIRTUAL_NODE_CLUSTER` environment variable.>

  take mesh-name
    like native-string
    note <The name of the service mesh in which to create the virtual node.>
  take create-virtual-node-body, like create-virtual-node-body

  line </meshes/{mesh-name}/virtualNodes>

  seed json, loan create-virtual-node-body

  loot 200
    seed json, like create-virtual-node-output
    note <Success>
  loot 480
    seed json, like bad-request-exception
    note <BadRequestException>
  loot 481
    seed json, like conflict-exception
    note <ConflictException>
  loot 482
    seed json, like forbidden-exception
    note <ForbiddenException>
  loot 483
    seed json, like internal-server-error-exception
    note <InternalServerErrorException>
  loot 484
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 485
    seed json, like not-found-exception
    note <NotFoundException>
  loot 486
    seed json, like service-unavailable-exception
    note <ServiceUnavailableException>
  loot 487
    seed json, like too-many-requests-exception
    note <TooManyRequestsException>