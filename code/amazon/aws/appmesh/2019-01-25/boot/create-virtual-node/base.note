
load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/bad-request-exception
  take form bad-request-exception

load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/conflict-exception
  take form conflict-exception

load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/create-virtual-node-body
  take form create-virtual-node-body

load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/create-virtual-node-output
  take form create-virtual-node-output

load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/forbidden-exception
  take form forbidden-exception

load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/internal-server-error-exception
  take form internal-server-error-exception

load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/not-found-exception
  take form not-found-exception

load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/service-unavailable-exception
  take form service-unavailable-exception

load @termsurf/snow/amazonaws.com/appmesh/2019-01-25/base/too-many-requests-exception
  take form too-many-requests-exception

load @termsurf/snow/base/native-string
  take form native-string

boot create-virtual-node, name <CreateVirtualNode>
  deed put
  note <Creates a virtual node within a service mesh.

A virtual node acts as a logical pointer to a particular task group, such as an Amazon ECS service or a Kubernetes deployment. When you create a virtual node, you can specify the service discovery information for your task group, and whether the proxy running in a task group will communicate with other proxies using Transport Layer Security (TLS).

You define a `listener` for any inbound traffic that your virtual node expects. Any virtual service that your virtual node expects to communicate to is specified as a `backend`.

The response metadata for your new virtual node contains the `arn` that is associated with the virtual node. Set this value to the full ARN; for example, `arn:aws:appmesh:us-west-2:123456789012:myMesh/default/virtualNode/myApp`) as the `APPMESH_RESOURCE_ARN` environment variable for your task group's Envoy proxy container in your task definition or pod spec. This is then mapped to the `node.id` and `node.cluster` Envoy parameters.

By default, App Mesh uses the name of the resource you specified in `APPMESH_RESOURCE_ARN` when Envoy is referring to itself in metrics and traces. You can override this behavior by setting the `APPMESH_RESOURCE_CLUSTER` environment variable with your own name.

For more information about virtual nodes, see [Virtual nodes](https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_nodes.html). You must be using `1.15.0` or later of the Envoy image when setting these variables. For more information aboutApp Mesh Envoy variables, see [Envoy image](https://docs.aws.amazon.com/app-mesh/latest/userguide/envoy.html) in the AWS App Mesh User Guide.>

  take mesh-name
    like native-string
    note <The name of the service mesh to create the virtual node in.>
  take mesh-owner
    like native-string
    note <The AWS IAM account ID of the service mesh owner. If the account ID is not your own, then the account that you specify must share the mesh with your account before you can create the resource in the service mesh. For more information about mesh sharing, see [Working with shared meshes](https://docs.aws.amazon.com/app-mesh/latest/userguide/sharing.html).>
    void take
  take create-virtual-node-body, like create-virtual-node-body

  line </v20190125/meshes/{mesh-name}/virtualNodes>

  find <meshOwner>, loan mesh-owner

  seed json, loan create-virtual-node-body

  loot 200
    seed json, like create-virtual-node-output
    note <Success>
  loot 480
    seed json, like not-found-exception
    note <NotFoundException>
  loot 481
    seed json, like bad-request-exception
    note <BadRequestException>
  loot 482
    seed json, like conflict-exception
    note <ConflictException>
  loot 483
    seed json, like too-many-requests-exception
    note <TooManyRequestsException>
  loot 484
    seed json, like forbidden-exception
    note <ForbiddenException>
  loot 485
    seed json, like service-unavailable-exception
    note <ServiceUnavailableException>
  loot 486
    seed json, like internal-server-error-exception
    note <InternalServerErrorException>
  loot 487
    seed json, like limit-exceeded-exception
    note <LimitExceededException>