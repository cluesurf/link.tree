
load @wavebond/snow/amazonaws.com/appmesh/2019-01-25/base/gateway-route-hostname-match
  take form gateway-route-hostname-match

load @wavebond/snow/amazonaws.com/appmesh/2019-01-25/base/http-gateway-route-headers
  take form http-gateway-route-headers

load @wavebond/snow/amazonaws.com/appmesh/2019-01-25/base/http-method
  take form http-method

load @wavebond/snow/amazonaws.com/appmesh/2019-01-25/base/http-path-match
  take form http-path-match

load @wavebond/snow/amazonaws.com/appmesh/2019-01-25/base/http-query-parameters
  take form http-query-parameters

load @wavebond/snow/base/string
  take form string

form http-gateway-route-match, name <HttpGatewayRouteMatch>
  note <An object that represents the criteria for determining a request match.>
  take headers, name <headers>
    like http-gateway-route-headers
    void take
    note <The client request headers to match on.>
  take hostname, name <hostname>
    like gateway-route-hostname-match
    void take
    note <The host name to match on.>
  take method, name <method>
    like http-method
    void take
    note <The method to match on.>
  take path, name <path>
    like http-path-match
    void take
    note <The path to match on.>
  take prefix, name <prefix>
    like string
    void take
    note <Specifies the path to match requests with. This parameter must always start with `/`, which by itself matches all requests to the virtual service name. You can also match for path-based routing of requests. For example, if your virtual service name is `my-service.local` and you want the route to match requests to `my-service.local/metrics`, your prefix should be `/metrics`.>
  take query-parameters, name <queryParameters>
    like http-query-parameters
    void take
    note <The query parameter to match on.>