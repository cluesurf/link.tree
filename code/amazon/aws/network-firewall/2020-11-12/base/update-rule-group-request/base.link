
load @drumwork/snow/amazonaws.com/network-firewall/2020-11-12/base/description
  take form description

load @drumwork/snow/amazonaws.com/network-firewall/2020-11-12/base/resource-arn
  take form resource-arn

load @drumwork/snow/amazonaws.com/network-firewall/2020-11-12/base/resource-name
  take form resource-name

load @drumwork/snow/amazonaws.com/network-firewall/2020-11-12/base/rule-group
  take form rule-group

load @drumwork/snow/amazonaws.com/network-firewall/2020-11-12/base/rule-group-type
  take form rule-group-type

load @drumwork/snow/amazonaws.com/network-firewall/2020-11-12/base/rules-string
  take form rules-string

load @drumwork/snow/amazonaws.com/network-firewall/2020-11-12/base/update-token
  take form update-token

load @drumwork/snow/base/boolean
  take form boolean

form update-rule-group-request, name <UpdateRuleGroupRequest>
  take update-token, name <UpdateToken>
    like update-token
    note <A token used for optimistic locking. Network Firewall returns a token to your requests that access the rule group. The token marks the state of the rule group resource at the time of the request.

To make changes to the rule group, you provide the token in your request. Network Firewall uses the token to ensure that the rule group hasn't changed since you last retrieved it. If it has changed, the operation fails with an `InvalidTokenException`. If this happens, retrieve the rule group again to get a current copy of it with a current token. Reapply your changes as needed, then try the operation again using the new token.>
  take rule-group-arn, name <RuleGroupArn>
    like resource-arn
    void take
    note <The Amazon Resource Name (ARN) of the rule group.

You must specify the ARN or the name, and you can specify both.>
  take rule-group-name, name <RuleGroupName>
    like resource-name
    void take
    note <The descriptive name of the rule group. You can't change the name of a rule group after you create it.

You must specify the ARN or the name, and you can specify both.>
  take rule-group, name <RuleGroup>
    like rule-group
    void take
    note <An object that defines the rule group rules.

You must provide either this rule group setting or a `Rules` setting, but not both.>
  take rules, name <Rules>
    like rules-string
    void take
    note <A string containing stateful rule group rules specifications in Suricata flat format, with one rule per line. Use this to import your existing Suricata compatible rule groups.

You must provide either this rules setting or a populated `RuleGroup` setting, but not both.

You can provide your rule group specification in Suricata flat format through this setting when you create or update your rule group. The call response returns a RuleGroup object that Network Firewall has populated from your string.>
  take type, name <Type>
    like rule-group-type
    void take
    note <Indicates whether the rule group is stateless or stateful. If the rule group is stateless, it contains stateless rules. If it is stateful, it contains stateful rules.

This setting is required for requests that do not include the `RuleGroupARN`.>
  take description, name <Description>
    like description
    void take
    note <A description of the rule group.>
  take dry-run, name <DryRun>
    like boolean
    void take
    note <Indicates whether you want Network Firewall to just check the validity of the request, rather than run the request.

If set to `TRUE`, Network Firewall checks whether the request can run successfully, but doesn't actually make the requested changes. The call returns the value that the request would return if you ran it with dry run set to `FALSE`, but doesn't make additions or changes to your resources. This option allows you to make sure that you have the required permissions to run the request and that your request parameters are valid.

If set to `FALSE`, Network Firewall makes the requested changes to your resources.>