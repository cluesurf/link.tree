
load @treesurf/snow/amazonaws.com/devicefarm/2015-06-23/base/amazon-resource-name
  take form amazon-resource-name

load @treesurf/snow/amazonaws.com/devicefarm/2015-06-23/base/client-id
  take form client-id

load @treesurf/snow/amazonaws.com/devicefarm/2015-06-23/base/create-remote-access-session-configuration
  take form create-remote-access-session-configuration

load @treesurf/snow/amazonaws.com/devicefarm/2015-06-23/base/interaction-mode
  take form interaction-mode

load @treesurf/snow/amazonaws.com/devicefarm/2015-06-23/base/name
  take form name

load @treesurf/snow/amazonaws.com/devicefarm/2015-06-23/base/ssh-public-key
  take form ssh-public-key

load @treesurf/snow/base/boolean
  take form boolean

form create-remote-access-session-request, name <CreateRemoteAccessSessionRequest>
  note <Creates and submits a request to start a remote access session.>
  take project-arn, name <projectArn>
    like amazon-resource-name
    note <The Amazon Resource Name (ARN) of the project for which you want to create a remote access session.>
  take device-arn, name <deviceArn>
    like amazon-resource-name
    note <The ARN of the device for which you want to create a remote access session.>
  take instance-arn, name <instanceArn>
    like amazon-resource-name
    void take
    note <The Amazon Resource Name (ARN) of the device instance for which you want to create a remote access session.>
  take ssh-public-key, name <sshPublicKey>
    like ssh-public-key
    void take
    note <Ignored. The public key of the `ssh` key pair you want to use for connecting to remote devices in your remote debugging session. This key is required only if `remoteDebugEnabled` is set to `true`.

Remote debugging is [no longer supported](https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html).>
  take remote-debug-enabled, name <remoteDebugEnabled>
    like boolean
    void take
    note <Set to `true` if you want to access devices remotely for debugging in your remote access session.

Remote debugging is [no longer supported](https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html).>
  take remote-record-enabled, name <remoteRecordEnabled>
    like boolean
    void take
    note <Set to `true` to enable remote recording for the remote access session.>
  take remote-record-app-arn, name <remoteRecordAppArn>
    like amazon-resource-name
    void take
    note <The Amazon Resource Name (ARN) for the app to be recorded in the remote access session.>
  take name, name <name>
    like name
    void take
    note <The name of the remote access session to create.>
  take client-id, name <clientId>
    like client-id
    void take
    note <Unique identifier for the client. If you want access to multiple devices on the same client, you should pass the same `clientId` value in each call to `CreateRemoteAccessSession`. This identifier is required only if `remoteDebugEnabled` is set to `true`.

Remote debugging is [no longer supported](https://docs.aws.amazon.com/devicefarm/latest/developerguide/history.html).>
  take configuration, name <configuration>
    like create-remote-access-session-configuration
    void take
    note <The configuration information for the remote access session request.>
  take interaction-mode, name <interactionMode>
    like interaction-mode
    void take
    note <The interaction mode of the remote access session. Valid values are:

- INTERACTIVE: You can interact with the iOS device by viewing, touching, and rotating the screen. You cannot run XCUITest framework-based tests in this mode.

- NO_VIDEO: You are connected to the device, but cannot interact with it or view the screen. This mode has the fastest test execution speed. You can run XCUITest framework-based tests in this mode.

- VIDEO_ONLY: You can view the screen, but cannot touch or rotate it. You can run XCUITest framework-based tests and watch the screen in this mode.>
  take skip-app-resign, name <skipAppResign>
    like boolean
    void take
    note <When set to `true`, for private devices, Device Farm does not sign your app again. For public devices, Device Farm always signs your apps again.

For more information on how Device Farm modifies your uploads during tests, see [Do you modify my app?](https://aws.amazon.com/device-farm/faq/)>