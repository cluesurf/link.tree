
load @termsurf/snow/amazonaws.com/devicefarm/2015-06-23/base/amazon-resource-name
  take form amazon-resource-name

load @termsurf/snow/amazonaws.com/devicefarm/2015-06-23/base/content-type
  take form content-type

load @termsurf/snow/amazonaws.com/devicefarm/2015-06-23/base/name
  take form name

load @termsurf/snow/amazonaws.com/devicefarm/2015-06-23/base/upload-type
  take form upload-type

form create-upload-request, name <CreateUploadRequest>
  note <Represents a request to the create upload operation.>
  take project-arn, name <projectArn>
    like amazon-resource-name
    note <The ARN of the project for the upload.>
  take name, name <name>
    like name
    note <The upload's file name. The name should not contain any forward slashes (`/`). If you are uploading an iOS app, the file name must end with the `.ipa` extension. If you are uploading an Android app, the file name must end with the `.apk` extension. For all others, the file name must end with the `.zip` file extension.>
  take type, name <type>
    like upload-type
    note <The upload's upload type.

Must be one of the following values:

- ANDROID_APP

- IOS_APP

- WEB_APP

- EXTERNAL_DATA

- APPIUM_JAVA_JUNIT_TEST_PACKAGE

- APPIUM_JAVA_TESTNG_TEST_PACKAGE

- APPIUM_PYTHON_TEST_PACKAGE

- APPIUM_NODE_TEST_PACKAGE

- APPIUM_RUBY_TEST_PACKAGE

- APPIUM_WEB_JAVA_JUNIT_TEST_PACKAGE

- APPIUM_WEB_JAVA_TESTNG_TEST_PACKAGE

- APPIUM_WEB_PYTHON_TEST_PACKAGE

- APPIUM_WEB_NODE_TEST_PACKAGE

- APPIUM_WEB_RUBY_TEST_PACKAGE

- CALABASH_TEST_PACKAGE

- INSTRUMENTATION_TEST_PACKAGE

- UIAUTOMATION_TEST_PACKAGE

- UIAUTOMATOR_TEST_PACKAGE

- XCTEST_TEST_PACKAGE

- XCTEST_UI_TEST_PACKAGE

- APPIUM_JAVA_JUNIT_TEST_SPEC

- APPIUM_JAVA_TESTNG_TEST_SPEC

- APPIUM_PYTHON_TEST_SPEC

- APPIUM_NODE_TEST_SPEC

- APPIUM_RUBY_TEST_SPEC

- APPIUM_WEB_JAVA_JUNIT_TEST_SPEC

- APPIUM_WEB_JAVA_TESTNG_TEST_SPEC

- APPIUM_WEB_PYTHON_TEST_SPEC

- APPIUM_WEB_NODE_TEST_SPEC

- APPIUM_WEB_RUBY_TEST_SPEC

- INSTRUMENTATION_TEST_SPEC

- XCTEST_UI_TEST_SPEC

If you call `CreateUpload` with `WEB_APP` specified, AWS Device Farm throws an `ArgumentException` error.>
  take content-type, name <contentType>
    like content-type
    void take
    note <The upload's content type (for example, `application/octet-stream`).>