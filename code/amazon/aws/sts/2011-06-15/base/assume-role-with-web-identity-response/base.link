
load @tunebond/snow/amazonaws.com/sts/2011-06-15/base/assumed-role-user
  take form assumed-role-user

load @tunebond/snow/amazonaws.com/sts/2011-06-15/base/audience
  take form audience

load @tunebond/snow/amazonaws.com/sts/2011-06-15/base/credentials
  take form credentials

load @tunebond/snow/amazonaws.com/sts/2011-06-15/base/issuer
  take form issuer

load @tunebond/snow/amazonaws.com/sts/2011-06-15/base/non-negative-integer-type
  take form non-negative-integer-type

load @tunebond/snow/amazonaws.com/sts/2011-06-15/base/source-identity-type
  take form source-identity-type

load @tunebond/snow/amazonaws.com/sts/2011-06-15/base/web-identity-subject-type
  take form web-identity-subject-type

form assume-role-with-web-identity-response, name <AssumeRoleWithWebIdentityResponse>
  note <Contains the response to a successful AssumeRoleWithWebIdentity request, including temporary Amazon Web Services credentials that can be used to make Amazon Web Services requests.>
  take credentials, name <Credentials>
    like credentials
    void take
    note <The temporary security credentials, which include an access key ID, a secret access key, and a security token.

The size of the security token that STS API operations return is not fixed. We strongly recommend that you make no assumptions about the maximum size.>
  take subject-from-web-identity-token, name <SubjectFromWebIdentityToken>
    like web-identity-subject-type
    void take
    note <The unique user identifier that is returned by the identity provider. This identifier is associated with the `WebIdentityToken` that was submitted with the `AssumeRoleWithWebIdentity` call. The identifier is typically unique to the user and the application that acquired the `WebIdentityToken` (pairwise identifier). For OpenID Connect ID tokens, this field contains the value returned by the identity provider as the token's `sub` (Subject) claim.>
  take assumed-role-user, name <AssumedRoleUser>
    like assumed-role-user
    void take
    note <The Amazon Resource Name (ARN) and the assumed role ID, which are identifiers that you can use to refer to the resulting temporary security credentials. For example, you can reference these credentials as a principal in a resource-based policy by using the ARN or assumed role ID. The ARN and ID include the `RoleSessionName` that you specified when you called `AssumeRole`.>
  take packed-policy-size, name <PackedPolicySize>
    like non-negative-integer-type
    void take
    note <A percentage value that indicates the packed size of the session policies and session tags combined passed in the request. The request fails if the packed size is greater than 100 percent, which means the policies and tags exceeded the allowed space.>
  take provider, name <Provider>
    like issuer
    void take
    note <The issuing authority of the web identity token presented. For OpenID Connect ID tokens, this contains the value of the `iss` field. For OAuth 2.0 access tokens, this contains the value of the `ProviderId` parameter that was passed in the `AssumeRoleWithWebIdentity` request.>
  take audience, name <Audience>
    like audience
    void take
    note <The intended audience (also known as client ID) of the web identity token. This is traditionally the client identifier issued to the application that requested the web identity token.>
  take source-identity, name <SourceIdentity>
    like source-identity-type
    void take
    note <The value of the source identity that is returned in the JSON web token (JWT) from the identity provider.

You can require users to set a source identity value when they assume a role. You do this by using the `sts:SourceIdentity` condition key in a role trust policy. That way, actions that are taken with the role are associated with that user. After the source identity is set, the value cannot be changed. It is present in the request for all actions that are taken by the role and persists across [chained role](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts#iam-term-role-chaining) sessions. You can configure your identity provider to use an attribute associated with your users, like user name or email, as the source identity when calling `AssumeRoleWithWebIdentity`. You do this by adding a claim to the JSON web token. To learn more about OIDC tokens and claims, see [Using Tokens with User Pools](https://docs.aws.amazon.com/cognito/latest/developerguide/amazon-cognito-user-pools-using-tokens-with-identity-providers.html) in the _Amazon Cognito Developer Guide_. For more information about using source identity, see [Monitor and control actions taken with assumed roles](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_control-access_monitor.html) in the _IAM User Guide_.

The regex used to validate this parameter is a string of characters consisting of upper- and lower-case alphanumeric characters with no spaces. You can also include underscores or any of the following characters: =,.@->
