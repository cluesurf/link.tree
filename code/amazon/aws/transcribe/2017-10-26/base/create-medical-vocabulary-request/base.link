
load @wavebond/snow/amazonaws.com/transcribe/2017-10-26/base/language-code
  take form language-code

load @wavebond/snow/amazonaws.com/transcribe/2017-10-26/base/tag-list
  take form tag-list

load @wavebond/snow/amazonaws.com/transcribe/2017-10-26/base/uri
  take form uri

load @wavebond/snow/amazonaws.com/transcribe/2017-10-26/base/vocabulary-name
  take form vocabulary-name

form create-medical-vocabulary-request, name <CreateMedicalVocabularyRequest>
  take vocabulary-name, name <VocabularyName>
    like vocabulary-name
    note <The name of the custom vocabulary. This case-sensitive name must be unique within an Amazon Web Services account. If you try to create a vocabulary with the same name as a previous vocabulary, you get a `ConflictException` error.>
  take language-code, name <LanguageCode>
    like language-code
    note <The language code for the language used for the entries in your custom vocabulary. The language code of your custom vocabulary must match the language code of your transcription job. US English (en-US) is the only language code available for Amazon Transcribe Medical.>
  take vocabulary-file-uri, name <VocabularyFileUri>
    like uri
    note <The location in Amazon S3 of the text file you use to define your custom vocabulary. The URI must be in the same Amazon Web Services Region as the resource that you're calling. Enter information about your `VocabularyFileUri` in the following format:

`https://s3.&lt;aws-region&gt;.amazonaws.com/&lt;bucket-name&gt;/&lt;keyprefix&gt;/&lt;objectkey&gt;`

The following is an example URI for a vocabulary file that is stored in Amazon S3:

`https://s3.us-east-1.amazonaws.com/AWSDOC-EXAMPLE-BUCKET/vocab.txt`

For more information about Amazon S3 object names, see [Object Keys](https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html#object-keys) in the _Amazon S3 Developer Guide_.

For more information about custom vocabularies, see [Medical Custom Vocabularies](https://docs.aws.amazon.com/transcribe/latest/dg/how-it-works.html#how-vocabulary-med).>
  take tags, name <Tags>
    like tag-list
    void take
    note <Adds one or more tags, each in the form of a key:value pair, to a new medical vocabulary at the time you create this new vocabulary.>
