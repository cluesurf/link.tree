
load @textsurf/snow/amazonaws.com/textract/2018-06-27/base/block-type
  take form block-type

load @textsurf/snow/amazonaws.com/textract/2018-06-27/base/entity-types
  take form entity-types

load @textsurf/snow/amazonaws.com/textract/2018-06-27/base/geometry
  take form geometry

load @textsurf/snow/amazonaws.com/textract/2018-06-27/base/non-empty-string
  take form non-empty-string

load @textsurf/snow/amazonaws.com/textract/2018-06-27/base/percent
  take form percent

load @textsurf/snow/amazonaws.com/textract/2018-06-27/base/relationship-list
  take form relationship-list

load @textsurf/snow/amazonaws.com/textract/2018-06-27/base/selection-status
  take form selection-status

load @textsurf/snow/amazonaws.com/textract/2018-06-27/base/text-type
  take form text-type

load @textsurf/snow/amazonaws.com/textract/2018-06-27/base/u-integer
  take form u-integer

load @textsurf/snow/base/string
  take form string

form block, name <Block>
  note <A `Block` represents items that are recognized in a document within a group of pixels close to each other. The information returned in a `Block` object depends on the type of operation. In text detection for documents (for example DetectDocumentText), you get information about the detected words and lines of text. In text analysis (for example AnalyzeDocument), you can also get information about the fields, tables, and selection elements that are detected in the document.

An array of `Block` objects is returned by both synchronous and asynchronous operations. In synchronous operations, such as DetectDocumentText, the array of `Block` objects is the entire set of results. In asynchronous operations, such as GetDocumentAnalysis, the array is returned over one or more responses.

For more information, see [How Amazon Textract Works](https://docs.aws.amazon.com/textract/latest/dg/how-it-works.html).>
  take block-type, name <BlockType>
    like block-type
    void take
    note <The type of text item that's recognized. In operations for text detection, the following types are returned:

- _PAGE_ - Contains a list of the LINE `Block` objects that are detected on a document page.

- _WORD_ - A word detected on a document page. A word is one or more ISO basic Latin script characters that aren't separated by spaces.

- _LINE_ - A string of tab-delimited, contiguous words that are detected on a document page.

In text analysis operations, the following types are returned:

- _PAGE_ - Contains a list of child `Block` objects that are detected on a document page.

- _KEY_VALUE_SET_ - Stores the KEY and VALUE `Block` objects for linked text that's detected on a document page. Use the `EntityType` field to determine if a KEY_VALUE_SET object is a KEY `Block` object or a VALUE `Block` object.

- _WORD_ - A word that's detected on a document page. A word is one or more ISO basic Latin script characters that aren't separated by spaces.

- _LINE_ - A string of tab-delimited, contiguous words that are detected on a document page.

- _TABLE_ - A table that's detected on a document page. A table is grid-based information with two or more rows or columns, with a cell span of one row and one column each.

- _CELL_ - A cell within a detected table. The cell is the parent of the block that contains the text in the cell.

- _SELECTION_ELEMENT_ - A selection element such as an option button (radio button) or a check box that's detected on a document page. Use the value of `SelectionStatus` to determine the status of the selection element.>
  take confidence, name <Confidence>
    like percent
    void take
    note <The confidence score that Amazon Textract has in the accuracy of the recognized text and the accuracy of the geometry points around the recognized text.>
  take text, name <Text>
    like string
    void take
    note <The word or line of text that's recognized by Amazon Textract.>
  take text-type, name <TextType>
    like text-type
    void take
    note <The kind of text that Amazon Textract has detected. Can check for handwritten text and printed text.>
  take row-index, name <RowIndex>
    like u-integer
    void take
    note <The row in which a table cell is located. The first row position is 1. `RowIndex` isn't returned by `DetectDocumentText` and `GetDocumentTextDetection`.>
  take column-index, name <ColumnIndex>
    like u-integer
    void take
    note <The column in which a table cell appears. The first column position is 1. `ColumnIndex` isn't returned by `DetectDocumentText` and `GetDocumentTextDetection`.>
  take row-span, name <RowSpan>
    like u-integer
    void take
    note <The number of rows that a table cell spans. Currently this value is always 1, even if the number of rows spanned is greater than 1. `RowSpan` isn't returned by `DetectDocumentText` and `GetDocumentTextDetection`.>
  take column-span, name <ColumnSpan>
    like u-integer
    void take
    note <The number of columns that a table cell spans. Currently this value is always 1, even if the number of columns spanned is greater than 1. `ColumnSpan` isn't returned by `DetectDocumentText` and `GetDocumentTextDetection`.>
  take geometry, name <Geometry>
    like geometry
    void take
    note <The location of the recognized text on the image. It includes an axis-aligned, coarse bounding box that surrounds the text, and a finer-grain polygon for more accurate spatial information.>
  take id, name <Id>
    like non-empty-string
    void take
    note <The identifier for the recognized text. The identifier is only unique for a single operation.>
  take relationships, name <Relationships>
    like relationship-list
    void take
    note <A list of child blocks of the current block. For example, a LINE object has child blocks for each WORD block that's part of the line of text. There aren't Relationship objects in the list for relationships that don't exist, such as when the current block has no child blocks. The list size can be the following:

- 0 - The block has no child blocks.

- 1 - The block has child blocks.>
  take entity-types, name <EntityTypes>
    like entity-types
    void take
    note <The type of entity. The following can be returned:

- _KEY_ - An identifier for a field on the document.

- _VALUE_ - The field text.

`EntityTypes` isn't returned by `DetectDocumentText` and `GetDocumentTextDetection`.>
  take selection-status, name <SelectionStatus>
    like selection-status
    void take
    note <The selection status of a selection element, such as an option button or check box.>
  take page, name <Page>
    like u-integer
    void take
    note <The page on which a block was detected. `Page` is returned by asynchronous operations. Page values greater than 1 are only returned for multipage documents that are in PDF format. A scanned image (JPEG/PNG), even if it contains multiple document pages, is considered to be a single-page document. The value of `Page` is always 1. Synchronous operations don't return `Page` because every input document is considered to be a single-page document.>