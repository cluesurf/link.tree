
load @textsurf/snow/amazonaws.com/rds/2014-10-31/base/integer-optional
  take form integer-optional

load @textsurf/snow/amazonaws.com/rds/2014-10-31/base/string-list
  take form string-list

load @textsurf/snow/base/string
  take form string

form connection-pool-configuration, name <ConnectionPoolConfiguration>
  note <Specifies the settings that control the size and behavior of the connection pool associated with a `DBProxyTargetGroup`.>
  take max-connections-percent, name <MaxConnectionsPercent>
    like integer-optional
    void take
    note <The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the `max_connections` setting for the RDS DB instance or Aurora DB cluster used by the target group.

Default: 100

Constraints: between 1 and 100>
  take max-idle-connections-percent, name <MaxIdleConnectionsPercent>
    like integer-optional
    void take
    note <Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the `max_connections` setting for the RDS DB instance or Aurora DB cluster used by the target group.

Default: 50

Constraints: between 0 and `MaxConnectionsPercent`>
  take connection-borrow-timeout, name <ConnectionBorrowTimeout>
    like integer-optional
    void take
    note <The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.

Default: 120

Constraints: between 1 and 3600, or 0 representing unlimited>
  take session-pinning-filters, name <SessionPinningFilters>
    like string-list
    void take
    note <Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior.

Default: no session pinning filters>
  take init-query, name <InitQuery>
    like string
    void take
    note <One or more SQL statements for the proxy to run when opening each new database connection. Typically used with `SET` statements to make sure that each connection has identical settings such as time zone and character set. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single `SET` statement, such as `SET x=1, y=2`.

Default: no initialization query>