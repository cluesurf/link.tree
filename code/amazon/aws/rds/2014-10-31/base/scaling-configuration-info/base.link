
load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/boolean-optional
  take form boolean-optional

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/integer-optional
  take form integer-optional

load @nerdbond/snow/base/string
  take form string

form scaling-configuration-info, name <ScalingConfigurationInfo>
  note <Shows the scaling configuration for an Aurora DB cluster in `serverless` DB engine mode.

For more information, see [Using Amazon Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the _Amazon Aurora User Guide_.>
  take min-capacity, name <MinCapacity>
    like integer-optional
    void take
    note <The maximum capacity for the Aurora DB cluster in `serverless` DB engine mode.>
  take max-capacity, name <MaxCapacity>
    like integer-optional
    void take
    note <The maximum capacity for an Aurora DB cluster in `serverless` DB engine mode.>
  take auto-pause, name <AutoPause>
    like boolean-optional
    void take
    note <A value that indicates whether automatic pause is allowed for the Aurora DB cluster in `serverless` DB engine mode.

When the value is set to false for an Aurora Serverless DB cluster, the DB cluster automatically resumes.>
  take seconds-until-auto-pause, name <SecondsUntilAutoPause>
    like integer-optional
    void take
    note <The remaining amount of time, in seconds, before the Aurora DB cluster in `serverless` mode is paused. A DB cluster can be paused only when it's idle (it has no connections).>
  take timeout-action, name <TimeoutAction>
    like string
    void take
    note <The action that occurs when Aurora times out while attempting to change the capacity of an Aurora Serverless cluster. The value is either `ForceApplyCapacityChange` or `RollbackCapacityChange`.

`ForceApplyCapacityChange`, the default, sets the capacity to the specified value as soon as possible.

`RollbackCapacityChange` ignores the capacity change if a scaling point isn't found in the timeout period.>
  take seconds-before-timeout, name <SecondsBeforeTimeout>
    like integer-optional
    void take
    note <The number of seconds before scaling times out. What happens when an attempted scaling action times out is determined by the `TimeoutAction` setting.>