
load @treesurf/snow/amazonaws.com/rds/2014-10-31/base/boolean-optional
  take form boolean-optional

load @treesurf/snow/amazonaws.com/rds/2014-10-31/base/integer-optional
  take form integer-optional

load @treesurf/snow/base/string
  take form string

form scaling-configuration, name <ScalingConfiguration>
  note <Contains the scaling configuration of an Aurora Serverless DB cluster.

For more information, see [Using Amazon Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html) in the _Amazon Aurora User Guide_.>
  take min-capacity, name <MinCapacity>
    like integer-optional
    void take
    note <The minimum capacity for an Aurora DB cluster in `serverless` DB engine mode.

For Aurora MySQL, valid capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, and `256`.

For Aurora PostgreSQL, valid capacity values are `2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`.

The minimum capacity must be less than or equal to the maximum capacity.>
  take max-capacity, name <MaxCapacity>
    like integer-optional
    void take
    note <The maximum capacity for an Aurora DB cluster in `serverless` DB engine mode.

For Aurora MySQL, valid capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, and `256`.

For Aurora PostgreSQL, valid capacity values are `2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`.

The maximum capacity must be greater than or equal to the minimum capacity.>
  take auto-pause, name <AutoPause>
    like boolean-optional
    void take
    note <A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in `serverless` DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).

If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it.>
  take seconds-until-auto-pause, name <SecondsUntilAutoPause>
    like integer-optional
    void take
    note <The time, in seconds, before an Aurora DB cluster in `serverless` mode is paused.

Specify a value between 300 and 86,400 seconds.>
  take timeout-action, name <TimeoutAction>
    like string
    void take
    note <The action to take when the timeout is reached, either `ForceApplyCapacityChange` or `RollbackCapacityChange`.

`ForceApplyCapacityChange` sets the capacity to the specified value as soon as possible.

`RollbackCapacityChange`, the default, ignores the capacity change if a scaling point isn't found in the timeout period.

If you specify `ForceApplyCapacityChange`, connections that prevent Aurora Serverless from finding a scaling point might be dropped.

For more information, see [Autoscaling for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling) in the _Amazon Aurora User Guide_.>
  take seconds-before-timeout, name <SecondsBeforeTimeout>
    like integer-optional
    void take
    note <The amount of time, in seconds, that Aurora Serverless tries to find a scaling point to perform seamless scaling before enforcing the timeout action. The default is 300.

Specify a value between 60 and 600 seconds.>