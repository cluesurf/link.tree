
load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/create-event-subscription-result
  take form create-event-subscription-result

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/event-subscription-quota-exceeded-fault
  take form event-subscription-quota-exceeded-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/sns-invalid-topic-fault
  take form sns-invalid-topic-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/sns-no-authorization-fault
  take form sns-no-authorization-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/sns-topic-arn-not-found-fault
  take form sns-topic-arn-not-found-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/source-not-found-fault
  take form source-not-found-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/subscription-already-exist-fault
  take form subscription-already-exist-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/subscription-category-not-found-fault
  take form subscription-category-not-found-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/tag
  take form tag

load @nerdbond/snow/base/list
  take form list

load @nerdbond/snow/base/native-boolean
  take form native-boolean

load @nerdbond/snow/base/native-string
  take form native-string

load @nerdbond/snow/base/string
  take form string

boot get-create-event-subscription, name <GET_CreateEventSubscription>
  deed get
  note <Creates an RDS event notification subscription. This action requires a topic Amazon Resource Name (ARN) created by either the RDS console, the SNS console, or the SNS API. To obtain an ARN with SNS, you must create a topic in Amazon SNS and subscribe to the topic. The ARN is displayed in the SNS console.

You can specify the type of source (`SourceType`) that you want to be notified of and provide a list of RDS sources (`SourceIds`) that triggers the events. You can also provide a list of event categories (`EventCategories`) for events that you want to be notified of. For example, you can specify `SourceType` = `db-instance`, `SourceIds` = `mydbinstance1`, `mydbinstance2` and `EventCategories` = `Availability`, `Backup`.

If you specify both the `SourceType` and `SourceIds`, such as `SourceType` = `db-instance` and `SourceIdentifier` = `myDBInstance1`, you are notified of all the `db-instance` events for the specified source. If you specify a `SourceType` but do not specify a `SourceIdentifier`, you receive notice of the events for that source type for all your RDS sources. If you don't specify either the SourceType or the `SourceIdentifier`, you are notified of events generated from all RDS sources belonging to your customer account.

RDS event notification is only available for unencrypted SNS topics. If you specify an encrypted SNS topic, event notifications aren't sent for the topic.>

  take subscription-name
    like native-string
    note <The name of the subscription.

Constraints: The name must be less than 255 characters.>
  take sns-topic-arn
    like native-string
    note <The Amazon Resource Name (ARN) of the SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.>
  take source-type
    like native-string
    note <The type of source that is generating the events. For example, if you want to be notified of events generated by a DB instance, you set this parameter to `db-instance`. If this value isn't specified, all events are returned.

Valid values: `db-instance` | `db-cluster` | `db-parameter-group` | `db-security-group` | `db-snapshot` | `db-cluster-snapshot`>
    void take
  take event-categories
    like list
      like string
    note <A list of event categories for a particular source type (`SourceType`) that you want to subscribe to. You can see a list of the categories for a given source type in [Events](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html) in the _Amazon RDS User Guide_ or by using the `DescribeEventCategories` operation.>
    void take
  take source-ids
    like list
      like string
    note <The list of identifiers of the event sources for which events are returned. If not specified, then all sources are included in the response. An identifier must begin with a letter and must contain only ASCII letters, digits, and hyphens. It can't end with a hyphen or contain two consecutive hyphens.

Constraints:

- If `SourceIds` are supplied, `SourceType` must also be provided.

- If the source type is a DB instance, a `DBInstanceIdentifier` value must be supplied.

- If the source type is a DB cluster, a `DBClusterIdentifier` value must be supplied.

- If the source type is a DB parameter group, a `DBParameterGroupName` value must be supplied.

- If the source type is a DB security group, a `DBSecurityGroupName` value must be supplied.

- If the source type is a DB snapshot, a `DBSnapshotIdentifier` value must be supplied.

- If the source type is a DB cluster snapshot, a `DBClusterSnapshotIdentifier` value must be supplied.>
    void take
  take enabled
    like native-boolean
    note <A value that indicates whether to activate the subscription. If the event notification subscription isn't activated, the subscription is created but not active.>
    void take
  take tags
    like list
      like tag
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreateEventSubscription>

  find <SubscriptionName>, loan subscription-name
  find <SnsTopicArn>, loan sns-topic-arn
  find <SourceType>, loan source-type
  find <EventCategories>, loan event-categories
  find <SourceIds>, loan source-ids
  find <Enabled>, loan enabled
  find <Tags>, loan tags
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-event-subscription-result
    note <Success>
  loot 480
    seed xml, like event-subscription-quota-exceeded-fault
    note <EventSubscriptionQuotaExceededFault>
  loot 481
    seed xml, like subscription-already-exist-fault
    note <SubscriptionAlreadyExistFault>
  loot 482
    seed xml, like sns-invalid-topic-fault
    note <SNSInvalidTopicFault>
  loot 483
    seed xml, like sns-no-authorization-fault
    note <SNSNoAuthorizationFault>
  loot 484
    seed xml, like sns-topic-arn-not-found-fault
    note <SNSTopicArnNotFoundFault>
  loot 485
    seed xml, like subscription-category-not-found-fault
    note <SubscriptionCategoryNotFoundFault>
  loot 486
    seed xml, like source-not-found-fault
    note <SourceNotFoundFault>