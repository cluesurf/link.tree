
load @drumwork/snow/amazonaws.com/rds/2014-10-31/base/db-cluster-not-found-fault
  take form db-cluster-not-found-fault

load @drumwork/snow/amazonaws.com/rds/2014-10-31/base/failover-global-cluster-result
  take form failover-global-cluster-result

load @drumwork/snow/amazonaws.com/rds/2014-10-31/base/global-cluster-not-found-fault
  take form global-cluster-not-found-fault

load @drumwork/snow/amazonaws.com/rds/2014-10-31/base/invalid-db-cluster-state-fault
  take form invalid-db-cluster-state-fault

load @drumwork/snow/amazonaws.com/rds/2014-10-31/base/invalid-global-cluster-state-fault
  take form invalid-global-cluster-state-fault

load @drumwork/snow/base/native-string
  take form native-string

boot get-failover-global-cluster, name <GET_FailoverGlobalCluster>
  deed get
  note <Initiates the failover process for an Aurora global database (GlobalCluster).

A failover for an Aurora global database promotes one of secondary read-only DB clusters to be the primary DB cluster and demotes the primary DB cluster to being a secondary (read-only) DB cluster. In other words, the role of the current primary DB cluster and the selected (target) DB cluster are switched. The selected secondary DB cluster assumes full read/write capabilities for the Aurora global database.

For more information about failing over an Amazon Aurora global database, see [Managed planned failover for Amazon Aurora global databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database-disaster-recovery.html#aurora-global-database-disaster-recovery.managed-failover) in the _Amazon Aurora User Guide._

This action applies to GlobalCluster (Aurora global databases) only. Use this action only on healthy Aurora global databases with running Aurora DB clusters and no Region-wide outages, to test disaster recovery scenarios or to reconfigure your Aurora global database topology.>

  take global-cluster-identifier
    like native-string
    note <Identifier of the Aurora global database (GlobalCluster) that should be failed over. The identifier is the unique key assigned by the user when the Aurora global database was created. In other words, it's the name of the Aurora global database that you want to fail over.

Constraints:

- Must match the identifier of an existing GlobalCluster (Aurora global database).>
  take target-db-cluster-identifier
    like native-string
    note <Identifier of the secondary Aurora DB cluster that you want to promote to primary for the Aurora global database (GlobalCluster.) Use the Amazon Resource Name (ARN) for the identifier so that Aurora can locate the cluster in its Amazon Web Services Region.>
  take action
    like native-string
  take version
    like native-string

  line </#Action=FailoverGlobalCluster>

  find <GlobalClusterIdentifier>, loan global-cluster-identifier
  find <TargetDbClusterIdentifier>, loan target-db-cluster-identifier
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like failover-global-cluster-result
    note <Success>
  loot 480
    seed xml, like global-cluster-not-found-fault
    note <GlobalClusterNotFoundFault>
  loot 481
    seed xml, like invalid-global-cluster-state-fault
    note <InvalidGlobalClusterStateFault>
  loot 482
    seed xml, like invalid-db-cluster-state-fault
    note <InvalidDBClusterStateFault>
  loot 483
    seed xml, like db-cluster-not-found-fault
    note <DBClusterNotFoundFault>