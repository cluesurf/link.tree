
load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/boolean-optional
  take form boolean-optional

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/create-db-cluster-result
  take form create-db-cluster-result

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/db-cluster-already-exists-fault
  take form db-cluster-already-exists-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/db-cluster-not-found-fault
  take form db-cluster-not-found-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/db-cluster-parameter-group-not-found-fault
  take form db-cluster-parameter-group-not-found-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/db-cluster-quota-exceeded-fault
  take form db-cluster-quota-exceeded-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/db-instance-not-found-fault
  take form db-instance-not-found-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/db-subnet-group-does-not-cover-enough-a-zs
  take form db-subnet-group-does-not-cover-enough-a-zs

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/db-subnet-group-not-found-fault
  take form db-subnet-group-not-found-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/domain-not-found-fault
  take form domain-not-found-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/global-cluster-not-found-fault
  take form global-cluster-not-found-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/insufficient-storage-cluster-capacity-fault
  take form insufficient-storage-cluster-capacity-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/integer-optional
  take form integer-optional

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/invalid-db-cluster-state-fault
  take form invalid-db-cluster-state-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/invalid-db-instance-state-fault
  take form invalid-db-instance-state-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/invalid-db-subnet-group-state-fault
  take form invalid-db-subnet-group-state-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/invalid-global-cluster-state-fault
  take form invalid-global-cluster-state-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/invalid-subnet
  take form invalid-subnet

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/invalid-vpc-network-state-fault
  take form invalid-vpc-network-state-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/kms-key-not-accessible-fault
  take form kms-key-not-accessible-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/storage-quota-exceeded-fault
  take form storage-quota-exceeded-fault

load @nerdbond/snow/amazonaws.com/rds/2014-10-31/base/tag
  take form tag

load @nerdbond/snow/base/form
  take form form

load @nerdbond/snow/base/list
  take form list

load @nerdbond/snow/base/native-boolean
  take form native-boolean

load @nerdbond/snow/base/native-integer
  take form native-integer

load @nerdbond/snow/base/native-string
  take form native-string

load @nerdbond/snow/base/string
  take form string

boot get-create-db-cluster, name <GET_CreateDBCluster>
  deed get
  note <Creates a new Amazon Aurora DB cluster.

You can use the `ReplicationSourceIdentifier` parameter to create the DB cluster as a read replica of another DB cluster or Amazon RDS MySQL or PostgreSQL DB instance. For cross-region replication where the DB cluster identified by `ReplicationSourceIdentifier` is encrypted, you must also specify the `PreSignedUrl` parameter.

For more information on Amazon Aurora, see [What Is Amazon Aurora?](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/CHAP_AuroraOverview.html) in the _Amazon Aurora User Guide._

This action only applies to Aurora DB clusters.>

  take availability-zones
    like list
      like string
    note <A list of Availability Zones (AZs) where instances in the DB cluster can be created. For information on Amazon Web Services Regions and Availability Zones, see [Choosing the Regions and Availability Zones](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.RegionsAndAvailabilityZones.html) in the _Amazon Aurora User Guide_.>
    void take
  take backup-retention-period
    like native-integer
    note <The number of days for which automated backups are retained.

Default: 1

Constraints:

- Must be a value from 1 to 35>
    void take
  take character-set-name
    like native-string
    note <A value that indicates that the DB cluster should be associated with the specified CharacterSet.>
    void take
  take database-name
    like native-string
    note <The name for your database of up to 64 alphanumeric characters. If you do not provide a name, Amazon RDS doesn't create a database in the DB cluster you are creating.>
    void take
  take db-cluster-identifier
    like native-string
    note <The DB cluster identifier. This parameter is stored as a lowercase string.

Constraints:

- Must contain from 1 to 63 letters, numbers, or hyphens.

- First character must be a letter.

- Can't end with a hyphen or contain two consecutive hyphens.

Example: `my-cluster1`>
  take db-cluster-parameter-group-name
    like native-string
    note <The name of the DB cluster parameter group to associate with this DB cluster. If you do not specify a value, then the default DB cluster parameter group for the specified DB engine and version is used.

Constraints:

- If supplied, must match the name of an existing DB cluster parameter group.>
    void take
  take vpc-security-group-ids
    like list
      like string
    note <A list of EC2 VPC security groups to associate with this DB cluster.>
    void take
  take db-subnet-group-name
    like native-string
    note <A DB subnet group to associate with this DB cluster.

Constraints: Must match the name of an existing DBSubnetGroup. Must not be default.

Example: `mySubnetgroup`>
    void take
  take engine
    like native-string
    note <The name of the database engine to be used for this DB cluster.

Valid Values: `aurora` (for MySQL 5.6-compatible Aurora), `aurora-mysql` (for MySQL 5.7-compatible Aurora), and `aurora-postgresql`>
  take engine-version
    like native-string
    note <The version number of the database engine to use.

To list all of the available engine versions for `aurora` (for MySQL 5.6-compatible Aurora), use the following command:

`aws rds describe-db-engine-versions --engine aurora --query "DBEngineVersions[].EngineVersion"`

To list all of the available engine versions for `aurora-mysql` (for MySQL 5.7-compatible Aurora), use the following command:

`aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"`

To list all of the available engine versions for `aurora-postgresql`, use the following command:

`aws rds describe-db-engine-versions --engine aurora-postgresql --query "DBEngineVersions[].EngineVersion"`

**Aurora MySQL** Example: `5.6.10a`, `5.6.mysql_aurora.1.19.2`, `5.7.12`, `5.7.mysql_aurora.2.04.5`

**Aurora PostgreSQL** Example: `9.6.3`, `10.7`>
    void take
  take port
    like native-integer
    note <The port number on which the instances in the DB cluster accept connections.

Default: `3306` if engine is set as aurora or `5432` if set to aurora-postgresql.>
    void take
  take master-username
    like native-string
    note <The name of the master user for the DB cluster.

Constraints:

- Must be 1 to 16 letters or numbers.

- First character must be a letter.

- Can't be a reserved word for the chosen database engine.>
    void take
  take master-user-password
    like native-string
    note <The password for the master database user. This password can contain any printable ASCII character except "/", """, or "@".

Constraints: Must contain from 8 to 41 characters.>
    void take
  take option-group-name
    like native-string
    note <A value that indicates that the DB cluster should be associated with the specified option group.

Permanent options can't be removed from an option group. The option group can't be removed from a DB cluster once it is associated with a DB cluster.>
    void take
  take preferred-backup-window
    like native-string
    note <The daily time range during which automated backups are created if automated backups are enabled using the `BackupRetentionPeriod` parameter.

The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region. To view the time blocks available, see [Backup window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Managing.Backups.html#Aurora.Managing.Backups.BackupWindow) in the _Amazon Aurora User Guide._

Constraints:

- Must be in the format `hh24:mi-hh24:mi`.

- Must be in Universal Coordinated Time (UTC).

- Must not conflict with the preferred maintenance window.

- Must be at least 30 minutes.>
    void take
  take preferred-maintenance-window
    like native-string
    note <The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).

Format: `ddd:hh24:mi-ddd:hh24:mi`

The default is a 30-minute window selected at random from an 8-hour block of time for each Amazon Web Services Region, occurring on a random day of the week. To see the time blocks available, see [Adjusting the Preferred DB Cluster Maintenance Window](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow.Aurora) in the _Amazon Aurora User Guide._

Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun.

Constraints: Minimum 30-minute window.>
    void take
  take replication-source-identifier
    like native-string
    note <The Amazon Resource Name (ARN) of the source DB instance or DB cluster if this DB cluster is created as a read replica.>
    void take
  take tags
    like list
      like tag
    note <Tags to assign to the DB cluster.>
    void take
  take storage-encrypted
    like native-boolean
    note <A value that indicates whether the DB cluster is encrypted.>
    void take
  take kms-key-id
    like native-string
    note <The Amazon Web Services KMS key identifier for an encrypted DB cluster.

The Amazon Web Services KMS key identifier is the key ARN, key ID, alias ARN, or alias name for the Amazon Web Services KMS customer master key (CMK). To use a CMK in a different Amazon Web Services account, specify the key ARN or alias ARN.

When a CMK isn't specified in `KmsKeyId`:

- If `ReplicationSourceIdentifier` identifies an encrypted source, then Amazon RDS will use the CMK used to encrypt the source. Otherwise, Amazon RDS will use your default CMK.

- If the `StorageEncrypted` parameter is enabled and `ReplicationSourceIdentifier` isn't specified, then Amazon RDS will use your default CMK.

There is a default CMK for your Amazon Web Services account. Your Amazon Web Services account has a different default CMK for each Amazon Web Services Region.

If you create a read replica of an encrypted DB cluster in another Amazon Web Services Region, you must set `KmsKeyId` to a Amazon Web Services KMS key identifier that is valid in the destination Amazon Web Services Region. This CMK is used to encrypt the read replica in that Amazon Web Services Region.>
    void take
  take pre-signed-url
    like native-string
    note <A URL that contains a Signature Version 4 signed request for the `CreateDBCluster` action to be called in the source Amazon Web Services Region where the DB cluster is replicated from. You only need to specify `PreSignedUrl` when you are performing cross-region replication from an encrypted DB cluster.

The pre-signed URL must be a valid request for the `CreateDBCluster` API action that can be executed in the source Amazon Web Services Region that contains the encrypted DB cluster to be copied.

The pre-signed URL request must contain the following parameter values:

- `KmsKeyId` - The Amazon Web Services KMS key identifier for the key to use to encrypt the copy of the DB cluster in the destination Amazon Web Services Region. This should refer to the same Amazon Web Services KMS CMK for both the `CreateDBCluster` action that is called in the destination Amazon Web Services Region, and the action contained in the pre-signed URL.

- `DestinationRegion` - The name of the Amazon Web Services Region that Aurora read replica will be created in.

- `ReplicationSourceIdentifier` - The DB cluster identifier for the encrypted DB cluster to be copied. This identifier must be in the Amazon Resource Name (ARN) format for the source Amazon Web Services Region. For example, if you are copying an encrypted DB cluster from the us-west-2 Amazon Web Services Region, then your `ReplicationSourceIdentifier` would look like Example: `arn:aws:rds:us-west-2:123456789012:cluster:aurora-cluster1`.

To learn how to generate a Signature Version 4 signed request, see [Authenticating Requests: Using Query Parameters (Amazon Web Services Signature Version 4)](https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-query-string-auth.html) and [Signature Version 4 Signing Process](https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html).

If you are using an Amazon Web Services SDK tool or the CLI, you can specify `SourceRegion` (or `--source-region` for the CLI) instead of specifying `PreSignedUrl` manually. Specifying `SourceRegion` autogenerates a pre-signed URL that is a valid request for the operation that can be executed in the source Amazon Web Services Region.

If you supply a value for this operation's `SourceRegion` parameter, a pre-signed URL will be calculated on your behalf.>
    void take
  take enable-iam-database-authentication
    like native-boolean
    note <A value that indicates whether to enable mapping of Amazon Web Services Identity and Access Management (IAM) accounts to database accounts. By default, mapping is disabled.

For more information, see [IAM Database Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/UsingWithRDS.IAMDBAuth.html) in the _Amazon Aurora User Guide._>
    void take
  take backtrack-window
    like native-integer
    note <The target backtrack window, in seconds. To disable backtracking, set this value to 0.

Currently, Backtrack is only supported for Aurora MySQL DB clusters.

Default: 0

Constraints:

- If specified, this value must be set to a number from 0 to 259,200 (72 hours).>
    void take
  take enable-cloudwatch-logs-exports
    like list
      like string
    note <The list of log types that need to be enabled for exporting to CloudWatch Logs. The values in the list depend on the DB engine being used. For more information, see [Publishing Database Logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_LogAccess.html#USER_LogAccess.Procedural.UploadtoCloudWatch) in the _Amazon Aurora User Guide_.

**Aurora MySQL** Possible values are `audit`, `error`, `general`, and `slowquery`.

**Aurora PostgreSQL** Possible value is `postgresql`.>
    void take
  take engine-mode
    like native-string
    note <The DB engine mode of the DB cluster, either `provisioned`, `serverless`, `parallelquery`, `global`, or `multimaster`.

The `parallelquery` engine mode isn't required for Aurora MySQL version 1.23 and higher 1.x versions, and version 2.09 and higher 2.x versions.

The `global` engine mode isn't required for Aurora MySQL version 1.22 and higher 1.x versions, and `global` engine mode isn't required for any 2.x versions.

The `multimaster` engine mode only applies for DB clusters created with Aurora MySQL version 5.6.10a.

For Aurora PostgreSQL, the `global` engine mode isn't required, and both the `parallelquery` and the `multimaster` engine modes currently aren't supported.

Limitations and requirements apply to some DB engine modes. For more information, see the following sections in the _Amazon Aurora User Guide_:

- [Limitations of Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.html#aurora-serverless.limitations)

- [Limitations of Parallel Query](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-mysql-parallel-query.html#aurora-mysql-parallel-query-limitations)

- [Limitations of Aurora Global Databases](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-global-database.html#aurora-global-database.limitations)

- [Limitations of Multi-Master Clusters](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-multi-master.html#aurora-multi-master-limitations)>
    void take
  take scaling-configuration
    like form
      take min-capacity, name <MinCapacity>
        like integer-optional
        void take
        note <The minimum capacity for an Aurora DB cluster in `serverless` DB engine mode.

For Aurora MySQL, valid capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, and `256`.

For Aurora PostgreSQL, valid capacity values are `2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`.

The minimum capacity must be less than or equal to the maximum capacity.>
      take max-capacity, name <MaxCapacity>
        like integer-optional
        void take
        note <The maximum capacity for an Aurora DB cluster in `serverless` DB engine mode.

For Aurora MySQL, valid capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, and `256`.

For Aurora PostgreSQL, valid capacity values are `2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`.

The maximum capacity must be greater than or equal to the minimum capacity.>
      take auto-pause, name <AutoPause>
        like boolean-optional
        void take
        note <A value that indicates whether to allow or disallow automatic pause for an Aurora DB cluster in `serverless` DB engine mode. A DB cluster can be paused only when it's idle (it has no connections).

If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it.>
      take seconds-until-auto-pause, name <SecondsUntilAutoPause>
        like integer-optional
        void take
        note <The time, in seconds, before an Aurora DB cluster in `serverless` mode is paused.

Specify a value between 300 and 86,400 seconds.>
      take timeout-action, name <TimeoutAction>
        like string
        void take
        note <The action to take when the timeout is reached, either `ForceApplyCapacityChange` or `RollbackCapacityChange`.

`ForceApplyCapacityChange` sets the capacity to the specified value as soon as possible.

`RollbackCapacityChange`, the default, ignores the capacity change if a scaling point isn't found in the timeout period.

If you specify `ForceApplyCapacityChange`, connections that prevent Aurora Serverless from finding a scaling point might be dropped.

For more information, see [Autoscaling for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.auto-scaling) in the _Amazon Aurora User Guide_.>
      take seconds-before-timeout, name <SecondsBeforeTimeout>
        like integer-optional
        void take
        note <The amount of time, in seconds, that Aurora Serverless tries to find a scaling point to perform seamless scaling before enforcing the timeout action. The default is 300.

Specify a value between 60 and 600 seconds.>
    note <For DB clusters in `serverless` DB engine mode, the scaling properties of the DB cluster.>
    void take
  take deletion-protection
    like native-boolean
    note <A value that indicates whether the DB cluster has deletion protection enabled. The database can't be deleted when deletion protection is enabled. By default, deletion protection is disabled.>
    void take
  take global-cluster-identifier
    like native-string
    note <The global cluster ID of an Aurora cluster that becomes the primary cluster in the new global database cluster.>
    void take
  take enable-http-endpoint
    like native-boolean
    note <A value that indicates whether to enable the HTTP endpoint for an Aurora Serverless DB cluster. By default, the HTTP endpoint is disabled.

When enabled, the HTTP endpoint provides a connectionless web service API for running SQL queries on the Aurora Serverless DB cluster. You can also query your database from inside the RDS console with the query editor.

For more information, see [Using the Data API for Aurora Serverless](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/data-api.html) in the _Amazon Aurora User Guide_.>
    void take
  take copy-tags-to-snapshot
    like native-boolean
    note <A value that indicates whether to copy all tags from the DB cluster to snapshots of the DB cluster. The default is not to copy them.>
    void take
  take domain
    like native-string
    note <The Active Directory directory ID to create the DB cluster in.

For Amazon Aurora DB clusters, Amazon RDS can use Kerberos Authentication to authenticate users that connect to the DB cluster. For more information, see [Kerberos Authentication](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/kerberos-authentication.html) in the _Amazon Aurora User Guide_.>
    void take
  take domain-iam-role-name
    like native-string
    note <Specify the name of the IAM role to be used when making API calls to the Directory Service.>
    void take
  take enable-global-write-forwarding
    like native-boolean
    note <A value that indicates whether to enable this DB cluster to forward write operations to the primary cluster of an Aurora global database (GlobalCluster). By default, write operations are not allowed on Aurora DB clusters that are secondary clusters in an Aurora global database.

You can set this value only on Aurora DB clusters that are members of an Aurora global database. With this parameter enabled, a secondary cluster can forward writes to the current primary cluster and the resulting changes are replicated back to this cluster. For the primary DB cluster of an Aurora global database, this value is used immediately if the primary is demoted by the FailoverGlobalCluster API operation, but it does nothing until then.>
    void take
  take source-region
    like native-string
    note <The ID of the region that contains the source for the read replica.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=CreateDBCluster>

  find <AvailabilityZones>, loan availability-zones
  find <BackupRetentionPeriod>, loan backup-retention-period
  find <CharacterSetName>, loan character-set-name
  find <DatabaseName>, loan database-name
  find <DBClusterIdentifier>, loan db-cluster-identifier
  find <DBClusterParameterGroupName>, loan db-cluster-parameter-group-name
  find <VpcSecurityGroupIds>, loan vpc-security-group-ids
  find <DBSubnetGroupName>, loan db-subnet-group-name
  find <Engine>, loan engine
  find <EngineVersion>, loan engine-version
  find <Port>, loan port
  find <MasterUsername>, loan master-username
  find <MasterUserPassword>, loan master-user-password
  find <OptionGroupName>, loan option-group-name
  find <PreferredBackupWindow>, loan preferred-backup-window
  find <PreferredMaintenanceWindow>, loan preferred-maintenance-window
  find <ReplicationSourceIdentifier>, loan replication-source-identifier
  find <Tags>, loan tags
  find <StorageEncrypted>, loan storage-encrypted
  find <KmsKeyId>, loan kms-key-id
  find <PreSignedUrl>, loan pre-signed-url
  find <EnableIAMDatabaseAuthentication>, loan enable-iam-database-authentication
  find <BacktrackWindow>, loan backtrack-window
  find <EnableCloudwatchLogsExports>, loan enable-cloudwatch-logs-exports
  find <EngineMode>, loan engine-mode
  find <ScalingConfiguration>, loan scaling-configuration
  find <DeletionProtection>, loan deletion-protection
  find <GlobalClusterIdentifier>, loan global-cluster-identifier
  find <EnableHttpEndpoint>, loan enable-http-endpoint
  find <CopyTagsToSnapshot>, loan copy-tags-to-snapshot
  find <Domain>, loan domain
  find <DomainIAMRoleName>, loan domain-iam-role-name
  find <EnableGlobalWriteForwarding>, loan enable-global-write-forwarding
  find <SourceRegion>, loan source-region
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like create-db-cluster-result
    note <Success>
  loot 480
    seed xml, like db-cluster-already-exists-fault
    note <DBClusterAlreadyExistsFault>
  loot 481
    seed xml, like insufficient-storage-cluster-capacity-fault
    note <InsufficientStorageClusterCapacityFault>
  loot 482
    seed xml, like db-cluster-quota-exceeded-fault
    note <DBClusterQuotaExceededFault>
  loot 483
    seed xml, like storage-quota-exceeded-fault
    note <StorageQuotaExceededFault>
  loot 484
    seed xml, like db-subnet-group-not-found-fault
    note <DBSubnetGroupNotFoundFault>
  loot 485
    seed xml, like invalid-vpc-network-state-fault
    note <InvalidVPCNetworkStateFault>
  loot 486
    seed xml, like invalid-db-cluster-state-fault
    note <InvalidDBClusterStateFault>
  loot 487
    seed xml, like invalid-db-subnet-group-state-fault
    note <InvalidDBSubnetGroupStateFault>
  loot 488
    seed xml, like invalid-subnet
    note <InvalidSubnet>
  loot 489
    seed xml, like invalid-db-instance-state-fault
    note <InvalidDBInstanceStateFault>
  loot 490
    seed xml, like db-cluster-parameter-group-not-found-fault
    note <DBClusterParameterGroupNotFoundFault>
  loot 491
    seed xml, like kms-key-not-accessible-fault
    note <KMSKeyNotAccessibleFault>
  loot 492
    seed xml, like db-cluster-not-found-fault
    note <DBClusterNotFoundFault>
  loot 493
    seed xml, like db-instance-not-found-fault
    note <DBInstanceNotFoundFault>
  loot 494
    seed xml, like db-subnet-group-does-not-cover-enough-a-zs
    note <DBSubnetGroupDoesNotCoverEnoughAZs>
  loot 495
    seed xml, like global-cluster-not-found-fault
    note <GlobalClusterNotFoundFault>
  loot 496
    seed xml, like invalid-global-cluster-state-fault
    note <InvalidGlobalClusterStateFault>
  loot 497
    seed xml, like domain-not-found-fault
    note <DomainNotFoundFault>