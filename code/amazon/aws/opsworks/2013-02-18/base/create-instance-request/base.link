
load @nerdbond/snow/amazonaws.com/opsworks/2013-02-18/base/architecture
  take form architecture

load @nerdbond/snow/amazonaws.com/opsworks/2013-02-18/base/auto-scaling-type
  take form auto-scaling-type

load @nerdbond/snow/amazonaws.com/opsworks/2013-02-18/base/block-device-mappings
  take form block-device-mappings

load @nerdbond/snow/amazonaws.com/opsworks/2013-02-18/base/root-device-type
  take form root-device-type

load @nerdbond/snow/amazonaws.com/opsworks/2013-02-18/base/strings
  take form strings

load @nerdbond/snow/base/boolean
  take form boolean

load @nerdbond/snow/base/string
  take form string

form create-instance-request, name <CreateInstanceRequest>
  take stack-id, name <StackId>
    like string
    note <The stack ID.>
  take layer-ids, name <LayerIds>
    like strings
    note <An array that contains the instance's layer IDs.>
  take instance-type, name <InstanceType>
    like string
    note <The instance type, such as `t2.micro`. For a list of supported instance types, open the stack in the console, choose **Instances**, and choose **+ Instance**. The **Size** list contains the currently supported types. For more information, see [Instance Families and Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html). The parameter values that you use to specify the various types are in the **API Name** column of the **Available Instance Types** table.>
  take auto-scaling-type, name <AutoScalingType>
    like auto-scaling-type
    void take
    note <For load-based or time-based instances, the type. Windows stacks can use only time-based instances.>
  take hostname, name <Hostname>
    like string
    void take
    note <The instance host name.>
  take os, name <Os>
    like string
    void take
    note <The instance's operating system, which must be set to one of the following.

- A supported Linux operating system: An Amazon Linux version, such as `Amazon Linux 2018.03`, `Amazon Linux 2017.09`, `Amazon Linux 2017.03`, `Amazon Linux 2016.09`, `Amazon Linux 2016.03`, `Amazon Linux 2015.09`, or `Amazon Linux 2015.03`.

- A supported Ubuntu operating system, such as `Ubuntu 16.04 LTS`, `Ubuntu 14.04 LTS`, or `Ubuntu 12.04 LTS`.

- `CentOS Linux 7`

- `Red Hat Enterprise Linux 7`

- A supported Windows operating system, such as `Microsoft Windows Server 2012 R2 Base`, `Microsoft Windows Server 2012 R2 with SQL Server Express`, `Microsoft Windows Server 2012 R2 with SQL Server Standard`, or `Microsoft Windows Server 2012 R2 with SQL Server Web`.

- A custom AMI: `Custom`.

For more information about the supported operating systems, see [AWS OpsWorks Stacks Operating Systems](https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html).

The default option is the current Amazon Linux version. If you set this parameter to `Custom`, you must use the CreateInstance action's AmiId parameter to specify the custom AMI that you want to use. Block device mappings are not supported if the value is `Custom`. For more information about supported operating systems, see [Operating Systems](https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-os.html)For more information about how to use custom AMIs with AWS OpsWorks Stacks, see [Using Custom AMIs](https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html).>
  take ami-id, name <AmiId>
    like string
    void take
    note <A custom AMI ID to be used to create the instance. The AMI should be based on one of the supported operating systems. For more information, see [Using Custom AMIs](https://docs.aws.amazon.com/opsworks/latest/userguide/workinginstances-custom-ami.html).

If you specify a custom AMI, you must set `Os` to `Custom`.>
  take ssh-key-name, name <SshKeyName>
    like string
    void take
    note <The instance's Amazon EC2 key-pair name.>
  take availability-zone, name <AvailabilityZone>
    like string
    void take
    note <The instance Availability Zone. For more information, see [Regions and Endpoints](https://docs.aws.amazon.com/general/latest/gr/rande.html).>
  take virtualization-type, name <VirtualizationType>
    like string
    void take
    note <The instance's virtualization type, `paravirtual` or `hvm`.>
  take subnet-id, name <SubnetId>
    like string
    void take
    note <The ID of the instance's subnet. If the stack is running in a VPC, you can use this parameter to override the stack's default subnet ID value and direct AWS OpsWorks Stacks to launch the instance in a different subnet.>
  take architecture, name <Architecture>
    like architecture
    void take
    note <The instance architecture. The default option is `x86_64`. Instance types do not necessarily support both architectures. For a list of the architectures that are supported by the different instance types, see [Instance Families and Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html).>
  take root-device-type, name <RootDeviceType>
    like root-device-type
    void take
    note <The instance root device type. For more information, see [Storage for the Root Device](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ComponentsAMIs.html#storage-for-the-root-device).>
  take block-device-mappings, name <BlockDeviceMappings>
    like block-device-mappings
    void take
    note <An array of `BlockDeviceMapping` objects that specify the instance's block devices. For more information, see [Block Device Mapping](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/block-device-mapping-concepts.html). Note that block device mappings are not supported for custom AMIs.>
  take install-updates-on-boot, name <InstallUpdatesOnBoot>
    like boolean
    void take
    note <Whether to install operating system and package updates when the instance boots. The default value is `true`. To control when updates are installed, set this value to `false`. You must then update your instances manually by using CreateDeployment to run the `update_dependencies` stack command or by manually running `yum` (Amazon Linux) or `apt-get` (Ubuntu) on the instances.

We strongly recommend using the default value of `true` to ensure that your instances have the latest security updates.>
  take ebs-optimized, name <EbsOptimized>
    like boolean
    void take
    note <Whether to create an Amazon EBS-optimized instance.>
  take agent-version, name <AgentVersion>
    like string
    void take
    note <The default AWS OpsWorks Stacks agent version. You have the following options:

- `INHERIT` - Use the stack's default agent version setting.

- _version_number_ - Use the specified agent version. This value overrides the stack's default setting. To update the agent version, edit the instance configuration and specify a new version. AWS OpsWorks Stacks then automatically installs that version on the instance.

The default setting is `INHERIT`. To specify an agent version, you must use the complete version number, not the abbreviated number shown on the console. For a list of available agent version numbers, call DescribeAgentVersions. AgentVersion cannot be set to Chef 12.2.>
  take tenancy, name <Tenancy>
    like string
    void take
    note <The instance's tenancy option. The default option is no tenancy, or if the instance is running in a VPC, inherit tenancy settings from the VPC. The following are valid values for this parameter: `dedicated`, `default`, or `host`. Because there are costs associated with changes in tenancy options, we recommend that you research tenancy options before choosing them for your instances. For more information about dedicated hosts, see [Dedicated Hosts Overview](http://aws.amazon.com/ec2/dedicated-hosts/) and [Amazon EC2 Dedicated Hosts](http://aws.amazon.com/ec2/dedicated-hosts/). For more information about dedicated instances, see [Dedicated Instances](https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/dedicated-instance.html) and [Amazon EC2 Dedicated Instances](http://aws.amazon.com/ec2/purchasing-options/dedicated-instances/).>