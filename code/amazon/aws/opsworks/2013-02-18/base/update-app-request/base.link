
load @wavebond/snow/amazonaws.com/opsworks/2013-02-18/base/app-attributes
  take form app-attributes

load @wavebond/snow/amazonaws.com/opsworks/2013-02-18/base/app-type
  take form app-type

load @wavebond/snow/amazonaws.com/opsworks/2013-02-18/base/data-sources
  take form data-sources

load @wavebond/snow/amazonaws.com/opsworks/2013-02-18/base/environment-variables
  take form environment-variables

load @wavebond/snow/amazonaws.com/opsworks/2013-02-18/base/source
  take form source

load @wavebond/snow/amazonaws.com/opsworks/2013-02-18/base/ssl-configuration
  take form ssl-configuration

load @wavebond/snow/amazonaws.com/opsworks/2013-02-18/base/strings
  take form strings

load @wavebond/snow/base/boolean
  take form boolean

load @wavebond/snow/base/string
  take form string

form update-app-request, name <UpdateAppRequest>
  take app-id, name <AppId>
    like string
    note <The app ID.>
  take name, name <Name>
    like string
    void take
    note <The app name.>
  take description, name <Description>
    like string
    void take
    note <A description of the app.>
  take data-sources, name <DataSources>
    like data-sources
    void take
    note <The app's data sources.>
  take type, name <Type>
    like app-type
    void take
    note <The app type.>
  take app-source, name <AppSource>
    like source
    void take
    note <A `Source` object that specifies the app repository.>
  take domains, name <Domains>
    like strings
    void take
    note <The app's virtual host settings, with multiple domains separated by commas. For example: `'www.example.com, example.com'`>
  take enable-ssl, name <EnableSsl>
    like boolean
    void take
    note <Whether SSL is enabled for the app.>
  take ssl-configuration, name <SslConfiguration>
    like ssl-configuration
    void take
    note <An `SslConfiguration` object with the SSL configuration.>
  take attributes, name <Attributes>
    like app-attributes
    void take
    note <One or more user-defined key/value pairs to be added to the stack attributes.>
  take environment, name <Environment>
    like environment-variables
    void take
    note <An array of `EnvironmentVariable` objects that specify environment variables to be associated with the app. After you deploy the app, these variables are defined on the associated app server instances.For more information, see [Environment Variables](https://docs.aws.amazon.com/opsworks/latest/userguide/workingapps-creating.html#workingapps-creating-environment).

There is no specific limit on the number of environment variables. However, the size of the associated data structure - which includes the variables' names, values, and protected flag values - cannot exceed 20 KB. This limit should accommodate most if not all use cases. Exceeding it will cause an exception with the message, "Environment: is too large (maximum is 20 KB)."

If you have specified one or more environment variables, you cannot modify the stack's Chef version.>