
load @drumwork/snow/amazonaws.com/glacier/2012-06-01/base/invalid-parameter-value-exception
  take form invalid-parameter-value-exception

load @drumwork/snow/amazonaws.com/glacier/2012-06-01/base/list-jobs-output
  take form list-jobs-output

load @drumwork/snow/amazonaws.com/glacier/2012-06-01/base/missing-parameter-value-exception
  take form missing-parameter-value-exception

load @drumwork/snow/amazonaws.com/glacier/2012-06-01/base/resource-not-found-exception
  take form resource-not-found-exception

load @drumwork/snow/amazonaws.com/glacier/2012-06-01/base/service-unavailable-exception
  take form service-unavailable-exception

load @drumwork/snow/base/native-string
  take form native-string

boot list-jobs, name <ListJobs>
  deed get
  note <This operation lists jobs for a vault, including jobs that are in-progress and jobs that have recently finished. The List Job operation returns a list of these jobs sorted by job initiation time.

Amazon Glacier retains recently completed jobs for a period before deleting them; however, it eventually removes completed jobs. The output of completed jobs can be retrieved. Retaining completed jobs for a period of time after they have completed enables you to get a job output in the event you miss the job completion notification or your first attempt to download it fails. For example, suppose you start an archive retrieval job to download an archive. After the job completes, you start to download the archive but encounter a network error. In this scenario, you can retry and download the archive while the job exists.

The List Jobs operation supports pagination. You should always check the response `Marker` field. If there are no more jobs to list, the `Marker` field is set to `null`. If there are more jobs to list, the `Marker` field is set to a non-null value, which you can use to continue the pagination of the list. To return a list of jobs that begins at a specific job, set the marker request parameter to the `Marker` value for that job that you obtained from a previous List Jobs request.

You can set a maximum limit for the number of jobs returned in the response by specifying the `limit` parameter in the request. The default limit is 50. The number of jobs returned might be fewer than the limit, but the number of returned jobs never exceeds the limit.

Additionally, you can filter the jobs list returned by specifying the optional `statuscode` parameter or `completed` parameter, or both. Using the `statuscode` parameter, you can specify to return only jobs that match either the `InProgress`, `Succeeded`, or `Failed` status. Using the `completed` parameter, you can specify to return only jobs that were completed (`true`) or jobs that were not completed (`false`).

For more information about using this operation, see the documentation for the underlying REST API [List Jobs](https://docs.aws.amazon.com/amazonglacier/latest/dev/api-jobs-get.html).>

  take account-id
    like native-string
    note <The `AccountId` value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '`-`' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.>
  take vault-name
    like native-string
    note <The name of the vault.>
  take limit
    like native-string
    note <The maximum number of jobs to be returned. The default limit is 50. The number of jobs returned might be fewer than the specified limit, but the number of returned jobs never exceeds the limit.>
    void take
  take marker
    like native-string
    note <An opaque string used for pagination. This value specifies the job at which the listing of jobs should begin. Get the marker value from a previous List Jobs response. You only need to include the marker if you are continuing the pagination of results started in a previous List Jobs request.>
    void take
  take statuscode
    like native-string
    note <The type of job status to return. You can specify the following values: `InProgress`, `Succeeded`, or `Failed`.>
    void take
  take completed
    like native-string
    note <The state of the jobs to return. You can specify `true` or `false`.>
    void take

  line </{account-id}/vaults/{vault-name}/jobs>

  find <limit>, loan limit
  find <marker>, loan marker
  find <statuscode>, loan statuscode
  find <completed>, loan completed

  loot 200
    seed json, like list-jobs-output
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like invalid-parameter-value-exception
    note <InvalidParameterValueException>
  loot 482
    seed json, like missing-parameter-value-exception
    note <MissingParameterValueException>
  loot 483
    seed json, like service-unavailable-exception
    note <ServiceUnavailableException>