
load @textsurf/snow/amazonaws.com/glacier/2012-06-01/base/invalid-parameter-value-exception
  take form invalid-parameter-value-exception

load @textsurf/snow/amazonaws.com/glacier/2012-06-01/base/missing-parameter-value-exception
  take form missing-parameter-value-exception

load @textsurf/snow/amazonaws.com/glacier/2012-06-01/base/request-timeout-exception
  take form request-timeout-exception

load @textsurf/snow/amazonaws.com/glacier/2012-06-01/base/resource-not-found-exception
  take form resource-not-found-exception

load @textsurf/snow/amazonaws.com/glacier/2012-06-01/base/service-unavailable-exception
  take form service-unavailable-exception

load @textsurf/snow/amazonaws.com/glacier/2012-06-01/base/upload-multipart-part-body
  take form upload-multipart-part-body

load @textsurf/snow/amazonaws.com/glacier/2012-06-01/base/upload-multipart-part-output
  take form upload-multipart-part-output

load @textsurf/snow/base/native-string
  take form native-string

boot upload-multipart-part, name <UploadMultipartPart>
  deed put
  note <This operation uploads a part of an archive. You can upload archive parts in any order. You can also upload them in parallel. You can upload up to 10,000 parts for a multipart upload.

Amazon Glacier rejects your upload part request if any of the following conditions is true:

- **SHA256 tree hash does not match**To ensure that part data is not corrupted in transmission, you compute a SHA256 tree hash of the part and include it in your request. Upon receiving the part data, Amazon S3 Glacier also computes a SHA256 tree hash. If these hash values don't match, the operation fails. For information about computing a SHA256 tree hash, see [Computing Checksums](https://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html).

- **Part size does not match**The size of each part except the last must match the size specified in the corresponding InitiateMultipartUpload request. The size of the last part must be the same size as, or smaller than, the specified size.

  If you upload a part whose size is smaller than the part size you specified in your initiate multipart upload request and that part is not the last part, then the upload part request will succeed. However, the subsequent Complete Multipart Upload request will fail.

- **Range does not align**The byte range value in the request does not align with the part size specified in the corresponding initiate request. For example, if you specify a part size of 4194304 bytes (4 MB), then 0 to 4194303 bytes (4 MB - 1) and 4194304 (4 MB) to 8388607 (8 MB - 1) are valid part ranges. However, if you set a range value of 2 MB to 6 MB, the range does not align with the part size and the upload will fail.

This operation is idempotent. If you upload the same part multiple times, the data included in the most recent request overwrites the previously uploaded data.

An AWS account has full permission to perform all operations (actions). However, AWS Identity and Access Management (IAM) users don't have any permissions by default. You must grant them explicit permission to perform specific actions. For more information, see [Access Control Using AWS Identity and Access Management (IAM)](https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html).

For conceptual information and underlying REST API, see [Uploading Large Archives in Parts (Multipart Upload)](https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html) and [Upload Part](https://docs.aws.amazon.com/amazonglacier/latest/dev/api-upload-part.html) in the _Amazon Glacier Developer Guide_.>

  take account-id
    like native-string
    note <The `AccountId` value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '`-`' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.>
  take vault-name
    like native-string
    note <The name of the vault.>
  take upload-id
    like native-string
    note <The upload ID of the multipart upload.>
  take x-amz-sha256-tree-hash
    like native-string
    note <The SHA256 tree hash of the data being uploaded.>
    void take
  take content-range
    like native-string
    note <Identifies the range of bytes in the assembled archive that will be uploaded in this part. Amazon S3 Glacier uses this information to assemble the archive in the proper sequence. The format of this header follows RFC 2616. An example header is Content-Range:bytes 0-4194303/*.>
    void take
  take upload-multipart-part-body, like upload-multipart-part-body

  line </{account-id}/vaults/{vault-name}/multipart-uploads/{upload-id}>

  hint <x-amz-sha256-tree-hash>, loan x-amz-sha256-tree-hash
  hint <Content-Range>, loan content-range

  seed json, loan upload-multipart-part-body

  loot 204
    seed json, like upload-multipart-part-output
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like invalid-parameter-value-exception
    note <InvalidParameterValueException>
  loot 482
    seed json, like missing-parameter-value-exception
    note <MissingParameterValueException>
  loot 483
    seed json, like request-timeout-exception
    note <RequestTimeoutException>
  loot 484
    seed json, like service-unavailable-exception
    note <ServiceUnavailableException>