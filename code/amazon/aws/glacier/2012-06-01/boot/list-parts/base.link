
load @wavebond/snow/amazonaws.com/glacier/2012-06-01/base/invalid-parameter-value-exception
  take form invalid-parameter-value-exception

load @wavebond/snow/amazonaws.com/glacier/2012-06-01/base/list-parts-output
  take form list-parts-output

load @wavebond/snow/amazonaws.com/glacier/2012-06-01/base/missing-parameter-value-exception
  take form missing-parameter-value-exception

load @wavebond/snow/amazonaws.com/glacier/2012-06-01/base/resource-not-found-exception
  take form resource-not-found-exception

load @wavebond/snow/amazonaws.com/glacier/2012-06-01/base/service-unavailable-exception
  take form service-unavailable-exception

load @wavebond/snow/base/native-string
  take form native-string

boot list-parts, name <ListParts>
  deed get
  note <This operation lists the parts of an archive that have been uploaded in a specific multipart upload. You can make this request at any time during an in-progress multipart upload before you complete the upload (see CompleteMultipartUpload. List Parts returns an error for completed uploads. The list returned in the List Parts response is sorted by part range.

The List Parts operation supports pagination. By default, this operation returns up to 50 uploaded parts in the response. You should always check the response for a `marker` at which to continue the list; if there are no more items the `marker` is `null`. To return a list of parts that begins at a specific part, set the `marker` request parameter to the value you obtained from a previous List Parts request. You can also limit the number of parts returned in the response by specifying the `limit` parameter in the request.

An AWS account has full permission to perform all operations (actions). However, AWS Identity and Access Management (IAM) users don't have any permissions by default. You must grant them explicit permission to perform specific actions. For more information, see [Access Control Using AWS Identity and Access Management (IAM)](https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html).

For conceptual information and the underlying REST API, see [Working with Archives in Amazon S3 Glacier](https://docs.aws.amazon.com/amazonglacier/latest/dev/working-with-archives.html) and [List Parts](https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-list-parts.html) in the _Amazon Glacier Developer Guide_.>

  take account-id
    like native-string
    note <The `AccountId` value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '`-`' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.>
  take vault-name
    like native-string
    note <The name of the vault.>
  take upload-id
    like native-string
    note <The upload ID of the multipart upload.>
  take marker
    like native-string
    note <An opaque string used for pagination. This value specifies the part at which the listing of parts should begin. Get the marker value from the response of a previous List Parts response. You need only include the marker if you are continuing the pagination of results started in a previous List Parts request.>
    void take
  take limit
    like native-string
    note <The maximum number of parts to be returned. The default limit is 50. The number of parts returned might be fewer than the specified limit, but the number of returned parts never exceeds the limit.>
    void take

  line </{account-id}/vaults/{vault-name}/multipart-uploads/{upload-id}>

  find <marker>, loan marker
  find <limit>, loan limit

  loot 200
    seed json, like list-parts-output
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like invalid-parameter-value-exception
    note <InvalidParameterValueException>
  loot 482
    seed json, like missing-parameter-value-exception
    note <MissingParameterValueException>
  loot 483
    seed json, like service-unavailable-exception
    note <ServiceUnavailableException>