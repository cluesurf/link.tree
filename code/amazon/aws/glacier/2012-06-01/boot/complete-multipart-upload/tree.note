
load @termsurf/snow/amazonaws.com/glacier/2012-06-01/base/archive-creation-output
  take form archive-creation-output

load @termsurf/snow/amazonaws.com/glacier/2012-06-01/base/invalid-parameter-value-exception
  take form invalid-parameter-value-exception

load @termsurf/snow/amazonaws.com/glacier/2012-06-01/base/missing-parameter-value-exception
  take form missing-parameter-value-exception

load @termsurf/snow/amazonaws.com/glacier/2012-06-01/base/resource-not-found-exception
  take form resource-not-found-exception

load @termsurf/snow/amazonaws.com/glacier/2012-06-01/base/service-unavailable-exception
  take form service-unavailable-exception

load @termsurf/snow/base/native-string
  take form native-string

boot complete-multipart-upload, name <CompleteMultipartUpload>
  deed post
  note <You call this operation to inform Amazon S3 Glacier (Glacier) that all the archive parts have been uploaded and that Glacier can now assemble the archive from the uploaded parts. After assembling and saving the archive to the vault, Glacier returns the URI path of the newly created archive resource. Using the URI path, you can then access the archive. After you upload an archive, you should save the archive ID returned to retrieve the archive at a later point. You can also get the vault inventory to obtain a list of archive IDs in a vault. For more information, see InitiateJob.

In the request, you must include the computed SHA256 tree hash of the entire archive you have uploaded. For information about computing a SHA256 tree hash, see [Computing Checksums](https://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html). On the server side, Glacier also constructs the SHA256 tree hash of the assembled archive. If the values match, Glacier saves the archive to the vault; otherwise, it returns an error, and the operation fails. The ListParts operation returns a list of parts uploaded for a specific multipart upload. It includes checksum information for each uploaded part that can be used to debug a bad checksum issue.

Additionally, Glacier also checks for any missing content ranges when assembling the archive, if missing content ranges are found, Glacier returns an error and the operation fails.

Complete Multipart Upload is an idempotent operation. After your first successful complete multipart upload, if you call the operation again within a short period, the operation will succeed and return the same archive ID. This is useful in the event you experience a network issue that causes an aborted connection or receive a 500 server error, in which case you can repeat your Complete Multipart Upload request and get the same archive ID without creating duplicate archives. Note, however, that after the multipart upload completes, you cannot call the List Parts operation and the multipart upload will not appear in List Multipart Uploads response, even if idempotent complete is possible.

An AWS account has full permission to perform all operations (actions). However, AWS Identity and Access Management (IAM) users don't have any permissions by default. You must grant them explicit permission to perform specific actions. For more information, see [Access Control Using AWS Identity and Access Management (IAM)](https://docs.aws.amazon.com/amazonglacier/latest/dev/using-iam-with-amazon-glacier.html).

For conceptual information and underlying REST API, see [Uploading Large Archives in Parts (Multipart Upload)](https://docs.aws.amazon.com/amazonglacier/latest/dev/uploading-archive-mpu.html) and [Complete Multipart Upload](https://docs.aws.amazon.com/amazonglacier/latest/dev/api-multipart-complete-upload.html) in the _Amazon Glacier Developer Guide_.>

  take account-id
    like native-string
    note <The `AccountId` value is the AWS account ID of the account that owns the vault. You can either specify an AWS account ID or optionally a single '`-`' (hyphen), in which case Amazon S3 Glacier uses the AWS account ID associated with the credentials used to sign the request. If you use an account ID, do not include any hyphens ('-') in the ID.>
  take vault-name
    like native-string
    note <The name of the vault.>
  take upload-id
    like native-string
    note <The upload ID of the multipart upload.>
  take x-amz-archive-size
    like native-string
    note <The total size, in bytes, of the entire archive. This value should be the sum of all the sizes of the individual parts that you uploaded.>
    void take
  take x-amz-sha256-tree-hash
    like native-string
    note <The SHA256 tree hash of the entire archive. It is the tree hash of SHA256 tree hash of the individual parts. If the value you specify in the request does not match the SHA256 tree hash of the final assembled archive as computed by Amazon S3 Glacier (Glacier), Glacier returns an error and the request fails.>
    void take

  line </{account-id}/vaults/{vault-name}/multipart-uploads/{upload-id}>

  hint <x-amz-archive-size>, loan x-amz-archive-size
  hint <x-amz-sha256-tree-hash>, loan x-amz-sha256-tree-hash

  loot 201
    seed json, like archive-creation-output
    note <Success>
  loot 480
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 481
    seed json, like invalid-parameter-value-exception
    note <InvalidParameterValueException>
  loot 482
    seed json, like missing-parameter-value-exception
    note <MissingParameterValueException>
  loot 483
    seed json, like service-unavailable-exception
    note <ServiceUnavailableException>