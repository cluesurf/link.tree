
load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/branch-name
  take form branch-name

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/operating-system-name
  take form operating-system-name

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/operating-system-version
  take form operating-system-version

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/platform-arn
  take form platform-arn

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/platform-branch-lifecycle-state
  take form platform-branch-lifecycle-state

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/platform-category
  take form platform-category

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/platform-lifecycle-state
  take form platform-lifecycle-state

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/platform-owner
  take form platform-owner

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/platform-status
  take form platform-status

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/platform-version
  take form platform-version

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/supported-addon-list
  take form supported-addon-list

load @treesurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/supported-tier-list
  take form supported-tier-list

form platform-summary, name <PlatformSummary>
  note <Summary information about a platform version.>
  take platform-arn, name <PlatformArn>
    like platform-arn
    void take
    note <The ARN of the platform version.>
  take platform-owner, name <PlatformOwner>
    like platform-owner
    void take
    note <The AWS account ID of the person who created the platform version.>
  take platform-status, name <PlatformStatus>
    like platform-status
    void take
    note <The status of the platform version. You can create an environment from the platform version once it is ready.>
  take platform-category, name <PlatformCategory>
    like platform-category
    void take
    note <The category of platform version.>
  take operating-system-name, name <OperatingSystemName>
    like operating-system-name
    void take
    note <The operating system used by the platform version.>
  take operating-system-version, name <OperatingSystemVersion>
    like operating-system-version
    void take
    note <The version of the operating system used by the platform version.>
  take supported-tier-list, name <SupportedTierList>
    like supported-tier-list
    void take
    note <The tiers in which the platform version runs.>
  take supported-addon-list, name <SupportedAddonList>
    like supported-addon-list
    void take
    note <The additions associated with the platform version.>
  take platform-lifecycle-state, name <PlatformLifecycleState>
    like platform-lifecycle-state
    void take
    note <The state of the platform version in its lifecycle.

Possible values: `recommended` | empty

If an empty value is returned, the platform version is supported but isn't the recommended one for its branch.>
  take platform-version, name <PlatformVersion>
    like platform-version
    void take
    note <The version string of the platform version.>
  take platform-branch-name, name <PlatformBranchName>
    like branch-name
    void take
    note <The platform branch to which the platform version belongs.>
  take platform-branch-lifecycle-state, name <PlatformBranchLifecycleState>
    like platform-branch-lifecycle-state
    void take
    note <The state of the platform version's branch in its lifecycle.

Possible values: `beta` | `supported` | `deprecated` | `retired`>