
load @nerdbond/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/search-filter-attribute
  take form search-filter-attribute

load @nerdbond/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/search-filter-operator
  take form search-filter-operator

load @nerdbond/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/search-filter-values
  take form search-filter-values

form search-filter, name <SearchFilter>
  note <Describes criteria to restrict a list of results.

For operators that apply a single value to the attribute, the filter is evaluated as follows: `Attribute Operator Values[1]`

Some operators, e.g. `in`, can apply multiple values. In this case, the filter is evaluated as a logical union (OR) of applications of the operator to the attribute with each one of the values: `(Attribute Operator Values[1]) OR (Attribute Operator Values[2]) OR ...`

The valid values for attributes of `SearchFilter` depend on the API action. For valid values, see the reference page for the API action you're calling that takes a `SearchFilter` parameter.>
  take attribute, name <Attribute>
    like search-filter-attribute
    void take
    note <The result attribute to which the filter values are applied. Valid values vary by API action.>
  take operator, name <Operator>
    like search-filter-operator
    void take
    note <The operator to apply to the `Attribute` with each of the `Values`. Valid values vary by `Attribute`.>
  take values, name <Values>
    like search-filter-values
    void take
    note <The list of values applied to the `Attribute` and `Operator` attributes. Number of values and valid values vary by `Attribute`.>