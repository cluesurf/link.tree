
load @textsurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/application-name
  take form application-name

load @textsurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/application-version-proccess
  take form application-version-proccess

load @textsurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/auto-create-application
  take form auto-create-application

load @textsurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/build-configuration
  take form build-configuration

load @textsurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/description
  take form description

load @textsurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/s3-location
  take form s3-location

load @textsurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/source-build-information
  take form source-build-information

load @textsurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/tags
  take form tags

load @textsurf/snow/amazonaws.com/elasticbeanstalk/2010-12-01/base/version-label
  take form version-label

form create-application-version-message, name <CreateApplicationVersionMessage>
  note <>
  take application-name, name <ApplicationName>
    like application-name
    note <The name of the application. If no application is found with this name, and `AutoCreateApplication` is `false`, returns an `InvalidParameterValue` error.>
  take version-label, name <VersionLabel>
    like version-label
    note <A label identifying this version.

Constraint: Must be unique per application. If an application version already exists with this label for the specified application, AWS Elastic Beanstalk returns an `InvalidParameterValue` error.>
  take description, name <Description>
    like description
    void take
    note <A description of this application version.>
  take source-build-information, name <SourceBuildInformation>
    like source-build-information
    void take
    note <Specify a commit in an AWS CodeCommit Git repository to use as the source code for the application version.>
  take source-bundle, name <SourceBundle>
    like s3-location
    void take
    note <The Amazon S3 bucket and key that identify the location of the source bundle for this version.

The Amazon S3 bucket must be in the same region as the environment.

Specify a source bundle in S3 or a commit in an AWS CodeCommit repository (with `SourceBuildInformation`), but not both. If neither `SourceBundle` nor `SourceBuildInformation` are provided, Elastic Beanstalk uses a sample application.>
  take build-configuration, name <BuildConfiguration>
    like build-configuration
    void take
    note <Settings for an AWS CodeBuild build.>
  take auto-create-application, name <AutoCreateApplication>
    like auto-create-application
    void take
    note <Set to `true` to create an application with the specified name if it doesn't already exist.>
  take process, name <Process>
    like application-version-proccess
    void take
    note <Pre-processes and validates the environment manifest (`env.yaml`) and configuration files (`*.config` files in the `.ebextensions` folder) in the source bundle. Validating configuration files can identify issues prior to deploying the application version to an environment.

You must turn processing on for application versions that you create using AWS CodeBuild or AWS CodeCommit. For application versions built from a source bundle in Amazon S3, processing is optional.

The `Process` option validates Elastic Beanstalk configuration files. It doesn't validate your application's configuration files, like proxy server or Docker configuration.>
  take tags, name <Tags>
    like tags
    void take
    note <Specifies the tags applied to the application version.

Elastic Beanstalk applies these tags only to the application version. Environments that use the application version don't inherit the tags.>