
load @termsurf/snow/amazonaws.com/backup/2018-11-15/base/report-delivery-channel
  take form report-delivery-channel

load @termsurf/snow/amazonaws.com/backup/2018-11-15/base/report-plan-description
  take form report-plan-description

load @termsurf/snow/amazonaws.com/backup/2018-11-15/base/report-plan-name
  take form report-plan-name

load @termsurf/snow/amazonaws.com/backup/2018-11-15/base/report-setting
  take form report-setting

load @termsurf/snow/amazonaws.com/backup/2018-11-15/base/string-map
  take form string-map

load @termsurf/snow/base/string
  take form string

form create-report-plan-input, name <CreateReportPlanInput>
  take report-plan-name, name <ReportPlanName>
    like report-plan-name
    note <The unique name of the report plan. The name must be between 1 and 256 characters, starting with a letter, and consisting of letters (a-z, A-Z), numbers (0-9), and underscores (_).>
  take report-plan-description, name <ReportPlanDescription>
    like report-plan-description
    void take
    note <An optional description of the report plan with a maximum of 1,024 characters.>
  take report-delivery-channel, name <ReportDeliveryChannel>
    like report-delivery-channel
    note <A structure that contains information about where and how to deliver your reports, specifically your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.>
  take report-setting, name <ReportSetting>
    like report-setting
    note <Identifies the report template for the report. Reports are built using a report template. The report templates are:

`BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT`>
  take report-plan-tags, name <ReportPlanTags>
    like string-map
    void take
    note <Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.>
  take idempotency-token, name <IdempotencyToken>
    like string
    void take
    note <A customer-chosen string that you can use to distinguish between otherwise identical calls to `CreateReportPlanInput`. Retrying a successful request with the same idempotency token results in a success message with no action taken.>