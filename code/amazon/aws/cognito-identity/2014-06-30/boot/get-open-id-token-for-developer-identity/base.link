
load @textsurf/snow/amazonaws.com/cognito-identity/2014-06-30/base/developer-user-already-registered-exception
  take form developer-user-already-registered-exception

load @textsurf/snow/amazonaws.com/cognito-identity/2014-06-30/base/get-open-id-token-for-developer-identity-response
  take form get-open-id-token-for-developer-identity-response

load @textsurf/snow/amazonaws.com/cognito-identity/2014-06-30/base/internal-error-exception
  take form internal-error-exception

load @textsurf/snow/amazonaws.com/cognito-identity/2014-06-30/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @textsurf/snow/amazonaws.com/cognito-identity/2014-06-30/base/not-authorized-exception
  take form not-authorized-exception

load @textsurf/snow/amazonaws.com/cognito-identity/2014-06-30/base/resource-conflict-exception
  take form resource-conflict-exception

load @textsurf/snow/amazonaws.com/cognito-identity/2014-06-30/base/resource-not-found-exception
  take form resource-not-found-exception

load @textsurf/snow/amazonaws.com/cognito-identity/2014-06-30/base/too-many-requests-exception
  take form too-many-requests-exception

load @textsurf/snow/base/native-string
  take form native-string

boot get-open-id-token-for-developer-identity, name <GetOpenIdTokenForDeveloperIdentity>
  deed post
  note <Registers (or retrieves) a Cognito `IdentityId` and an OpenID Connect token for a user authenticated by your backend authentication process. Supplying multiple logins will create an implicit linked account. You can only specify one developer provider as part of the `Logins` map, which is linked to the identity pool. The developer provider is the "domain" by which Cognito will refer to your users.

You can use `GetOpenIdTokenForDeveloperIdentity` to create a new identity and to link new logins (that is, user credentials issued by a public provider or developer provider) to an existing identity. When you want to create a new identity, the `IdentityId` should be null. When you want to associate a new login with an existing authenticated/unauthenticated identity, you can do so by providing the existing `IdentityId`. This API will create the identity in the specified `IdentityPoolId`.

You must use AWS Developer credentials to call this API.>

  take x-amz-target
    like native-string
  take get-open-id-token-for-developer-identity-input, like get-open-id-token-for-developer-identity-input

  line </#X-Amz-Target=AWSCognitoIdentityService.GetOpenIdTokenForDeveloperIdentity>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan get-open-id-token-for-developer-identity-input

  loot 200
    seed json, like get-open-id-token-for-developer-identity-response
    note <Success>
  loot 480
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 481
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 482
    seed json, like not-authorized-exception
    note <NotAuthorizedException>
  loot 483
    seed json, like resource-conflict-exception
    note <ResourceConflictException>
  loot 484
    seed json, like too-many-requests-exception
    note <TooManyRequestsException>
  loot 485
    seed json, like internal-error-exception
    note <InternalErrorException>
  loot 486
    seed json, like developer-user-already-registered-exception
    note <DeveloperUserAlreadyRegisteredException>
