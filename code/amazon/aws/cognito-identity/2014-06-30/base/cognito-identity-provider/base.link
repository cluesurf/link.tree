
load @wavebond/snow/amazonaws.com/cognito-identity/2014-06-30/base/cognito-identity-provider-client-id
  take form cognito-identity-provider-client-id

load @wavebond/snow/amazonaws.com/cognito-identity/2014-06-30/base/cognito-identity-provider-name
  take form cognito-identity-provider-name

load @wavebond/snow/amazonaws.com/cognito-identity/2014-06-30/base/cognito-identity-provider-token-check
  take form cognito-identity-provider-token-check

form cognito-identity-provider, name <CognitoIdentityProvider>
  note <A provider representing an Amazon Cognito user pool and its client ID.>
  take provider-name, name <ProviderName>
    like cognito-identity-provider-name
    void take
    note <The provider name for an Amazon Cognito user pool. For example, `cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789`.>
  take client-id, name <ClientId>
    like cognito-identity-provider-client-id
    void take
    note <The client ID for the Amazon Cognito user pool.>
  take server-side-token-check, name <ServerSideTokenCheck>
    like cognito-identity-provider-token-check
    void take
    note <TRUE if server-side token validation is enabled for the identity providerâ€™s token.

Once you set `ServerSideTokenCheck` to TRUE for an identity pool, that identity pool will check with the integrated user pools to make sure that the user has not been globally signed out or deleted before the identity pool provides an OIDC token or AWS credentials for the user.

If the user is signed out or deleted, the identity pool will return a 400 Not Authorized error.>
