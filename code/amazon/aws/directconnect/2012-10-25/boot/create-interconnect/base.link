
load @drumwork/snow/amazonaws.com/directconnect/2012-10-25/base/direct-connect-client-exception
  take form direct-connect-client-exception

load @drumwork/snow/amazonaws.com/directconnect/2012-10-25/base/direct-connect-server-exception
  take form direct-connect-server-exception

load @drumwork/snow/amazonaws.com/directconnect/2012-10-25/base/duplicate-tag-keys-exception
  take form duplicate-tag-keys-exception

load @drumwork/snow/amazonaws.com/directconnect/2012-10-25/base/interconnect
  take form interconnect

load @drumwork/snow/amazonaws.com/directconnect/2012-10-25/base/too-many-tags-exception
  take form too-many-tags-exception

load @drumwork/snow/base/native-string
  take form native-string

boot create-interconnect, name <CreateInterconnect>
  deed post
  note <Creates an interconnect between an Direct Connect Partner's network and a specific Direct Connect location.

An interconnect is a connection that is capable of hosting other connections. The Direct Connect Partner can use an interconnect to provide Direct Connect hosted connections to customers through their own network services. Like a standard connection, an interconnect links the partner's network to an Direct Connect location over a standard Ethernet fiber-optic cable. One end is connected to the partner's router, the other to an Direct Connect router.

You can automatically add the new interconnect to a link aggregation group (LAG) by specifying a LAG ID in the request. This ensures that the new interconnect is allocated on the same Direct Connect endpoint that hosts the specified LAG. If there are no available ports on the endpoint, the request fails and no interconnect is created.

For each end customer, the Direct Connect Partner provisions a connection on their interconnect by calling AllocateHostedConnection. The end customer can then connect to Amazon Web Services resources by creating a virtual interface on their connection, using the VLAN assigned to them by the Direct Connect Partner.

Intended for use by Direct Connect Partners only.>

  take x-amz-target
    like native-string
  take create-interconnect-request, like create-interconnect-request

  line </#X-Amz-Target=OvertureService.CreateInterconnect>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-interconnect-request

  loot 200
    seed json, like interconnect
    note <Success>
  loot 480
    seed json, like duplicate-tag-keys-exception
    note <DuplicateTagKeysException>
  loot 481
    seed json, like too-many-tags-exception
    note <TooManyTagsException>
  loot 482
    seed json, like direct-connect-server-exception
    note <DirectConnectServerException>
  loot 483
    seed json, like direct-connect-client-exception
    note <DirectConnectClientException>