
load @drumwork/snow/amazonaws.com/directconnect/2012-10-25/base/direct-connect-client-exception
  take form direct-connect-client-exception

load @drumwork/snow/amazonaws.com/directconnect/2012-10-25/base/direct-connect-server-exception
  take form direct-connect-server-exception

load @drumwork/snow/amazonaws.com/directconnect/2012-10-25/base/start-bgp-failover-test-response
  take form start-bgp-failover-test-response

load @drumwork/snow/base/native-string
  take form native-string

boot start-bgp-failover-test, name <StartBgpFailoverTest>
  deed post
  note <Starts the virtual interface failover test that verifies your configuration meets your resiliency requirements by placing the BGP peering session in the DOWN state. You can then send traffic to verify that there are no outages.

You can run the test on public, private, transit, and hosted virtual interfaces.

You can use [ListVirtualInterfaceTestHistory](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_ListVirtualInterfaceTestHistory.html) to view the virtual interface test history.

If you need to stop the test before the test interval completes, use [StopBgpFailoverTest](https://docs.aws.amazon.com/directconnect/latest/APIReference/API_StopBgpFailoverTest.html).>

  take x-amz-target
    like native-string
  take start-bgp-failover-test-request, like start-bgp-failover-test-request

  line </#X-Amz-Target=OvertureService.StartBgpFailoverTest>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan start-bgp-failover-test-request

  loot 200
    seed json, like start-bgp-failover-test-response
    note <Success>
  loot 480
    seed json, like direct-connect-server-exception
    note <DirectConnectServerException>
  loot 481
    seed json, like direct-connect-client-exception
    note <DirectConnectClientException>