
load @drumwork/snow/amazonaws.com/waf/2015-08-24/base/create-sql-injection-match-set-response
  take form create-sql-injection-match-set-response

load @drumwork/snow/amazonaws.com/waf/2015-08-24/base/waf-disallowed-name-exception
  take form waf-disallowed-name-exception

load @drumwork/snow/amazonaws.com/waf/2015-08-24/base/waf-internal-error-exception
  take form waf-internal-error-exception

load @drumwork/snow/amazonaws.com/waf/2015-08-24/base/waf-invalid-account-exception
  take form waf-invalid-account-exception

load @drumwork/snow/amazonaws.com/waf/2015-08-24/base/waf-invalid-parameter-exception
  take form waf-invalid-parameter-exception

load @drumwork/snow/amazonaws.com/waf/2015-08-24/base/waf-limits-exceeded-exception
  take form waf-limits-exceeded-exception

load @drumwork/snow/amazonaws.com/waf/2015-08-24/base/waf-stale-data-exception
  take form waf-stale-data-exception

load @drumwork/snow/base/native-string
  take form native-string

boot create-sql-injection-match-set, name <CreateSqlInjectionMatchSet>
  deed post
  note <This is **AWS WAF Classic** documentation. For more information, see [AWS WAF Classic](https://docs.aws.amazon.com/waf/latest/developerguide/classic-waf-chapter.html) in the developer guide.

**For the latest version of AWS WAF**, use the AWS WAFV2 API and see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/waf-chapter.html). With the latest version, AWS WAF has a single set of endpoints for regional and global use.

Creates a SqlInjectionMatchSet, which you use to allow, block, or count requests that contain snippets of SQL code in a specified part of web requests. AWS WAF searches for character sequences that are likely to be malicious strings.

To create and configure a `SqlInjectionMatchSet`, perform the following steps:

1. Use GetChangeToken to get the change token that you provide in the `ChangeToken` parameter of a `CreateSqlInjectionMatchSet` request.

2. Submit a `CreateSqlInjectionMatchSet` request.

3. Use `GetChangeToken` to get the change token that you provide in the `ChangeToken` parameter of an UpdateSqlInjectionMatchSet request.

4. Submit an UpdateSqlInjectionMatchSet request to specify the parts of web requests in which you want to allow, block, or count malicious SQL code.

For more information about how to use the AWS WAF API to allow or block HTTP requests, see the [AWS WAF Developer Guide](https://docs.aws.amazon.com/waf/latest/developerguide/).>

  take x-amz-target
    like native-string
  take create-sql-injection-match-set-request, like create-sql-injection-match-set-request

  line </#X-Amz-Target=AWSWAF_20150824.CreateSqlInjectionMatchSet>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-sql-injection-match-set-request

  loot 200
    seed json, like create-sql-injection-match-set-response
    note <Success>
  loot 480
    seed json, like waf-disallowed-name-exception
    note <WAFDisallowedNameException>
  loot 481
    seed json, like waf-internal-error-exception
    note <WAFInternalErrorException>
  loot 482
    seed json, like waf-invalid-account-exception
    note <WAFInvalidAccountException>
  loot 483
    seed json, like waf-invalid-parameter-exception
    note <WAFInvalidParameterException>
  loot 484
    seed json, like waf-stale-data-exception
    note <WAFStaleDataException>
  loot 485
    seed json, like waf-limits-exceeded-exception
    note <WAFLimitsExceededException>