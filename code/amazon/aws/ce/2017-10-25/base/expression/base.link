
load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/cost-category-values
  take form cost-category-values

load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/dimension-values
  take form dimension-values

load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/expression
  take form expression

load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/expressions
  take form expressions

load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/tag-values
  take form tag-values

form expression, name <Expression>
  note <Use `Expression` to filter by cost or by usage. There are two patterns:

- Simple dimension values - You can set the dimension name and values for the filters that you plan to use. For example, you can filter for `REGION==us-east-1 OR REGION==us-west-1`. For `GetRightsizingRecommendation`, the Region is a full name (for example, `REGION==US East (N. Virginia)`. The `Expression` example is as follows:

  `{ "Dimensions": { "Key": "REGION", "Values": [ "us-east-1", “us-west-1” ] } }`

  The list of dimension values are OR'd together to retrieve cost or usage data. You can create `Expression` and `DimensionValues` objects using either `with*` methods or `set*` methods in multiple lines.

- Compound dimension values with logical operations - You can use multiple `Expression` types and the logical operators `AND/OR/NOT` to create a list of one or more `Expression` objects. By doing this, you can filter on more advanced options. For example, you can filter on `((REGION == us-east-1 OR REGION == us-west-1) OR (TAG.Type == Type1)) AND (USAGE_TYPE != DataTransfer)`. The `Expression` for that is as follows:

  `{ "And": [ {"Or": [ {"Dimensions": { "Key": "REGION", "Values": [ "us-east-1", "us-west-1" ] }}, {"Tags": { "Key": "TagName", "Values": ["Value1"] } } ]}, {"Not": {"Dimensions": { "Key": "USAGE_TYPE", "Values": ["DataTransfer"] }}} ] }`

  Because each `Expression` can have only one operator, the service returns an error if more than one is specified. The following example shows an `Expression` object that creates an error.

  `{ "And": [ ... ], "DimensionValues": { "Dimension": "USAGE_TYPE", "Values": [ "DataTransfer" ] } }`

For the `GetRightsizingRecommendation` action, a combination of OR and NOT isn't supported. OR isn't supported between different dimensions, or dimensions and tags. NOT operators aren't supported. Dimensions are also limited to `LINKED_ACCOUNT`, `REGION`, or `RIGHTSIZING_TYPE`.

For the `GetReservationPurchaseRecommendation` action, only NOT is supported. AND and OR aren't supported. Dimensions are limited to `LINKED_ACCOUNT`.>
  take or, name <Or>
    like expressions
    void take
    note <Return results that match either `Dimension` object.>
  take and, name <And>
    like expressions
    void take
    note <Return results that match both `Dimension` objects.>
  take not, name <Not>
    like expression
    void take
    note <Return results that don't match a `Dimension` object.>
  take dimensions, name <Dimensions>
    like dimension-values
    void take
    note <The specific `Dimension` to use for `Expression`.>
  take tags, name <Tags>
    like tag-values
    void take
    note <The specific `Tag` to use for `Expression`.>
  take cost-categories, name <CostCategories>
    like cost-category-values
    void take
    note <The filter that's based on `CostCategory` values.>