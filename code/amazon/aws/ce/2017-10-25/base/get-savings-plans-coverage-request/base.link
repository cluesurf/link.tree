
load @tunebond/snow/amazonaws.com/ce/2017-10-25/base/date-interval
  take form date-interval

load @tunebond/snow/amazonaws.com/ce/2017-10-25/base/expression
  take form expression

load @tunebond/snow/amazonaws.com/ce/2017-10-25/base/granularity
  take form granularity

load @tunebond/snow/amazonaws.com/ce/2017-10-25/base/group-definitions
  take form group-definitions

load @tunebond/snow/amazonaws.com/ce/2017-10-25/base/max-results
  take form max-results

load @tunebond/snow/amazonaws.com/ce/2017-10-25/base/metric-names
  take form metric-names

load @tunebond/snow/amazonaws.com/ce/2017-10-25/base/next-page-token
  take form next-page-token

load @tunebond/snow/amazonaws.com/ce/2017-10-25/base/sort-definition
  take form sort-definition

form get-savings-plans-coverage-request, name <GetSavingsPlansCoverageRequest>
  take time-period, name <TimePeriod>
    like date-interval
    note <The time period that you want the usage and costs for. The `Start` date must be within 13 months. The `End` date must be after the `Start` date, and before the current date. Future dates can't be used as an `End` date.>
  take group-by, name <GroupBy>
    like group-definitions
    void take
    note <You can group the data using the attributes `INSTANCE_FAMILY`, `REGION`, or `SERVICE`.>
  take granularity, name <Granularity>
    like granularity
    void take
    note <The granularity of the Amazon Web Services cost data for your Savings Plans. `Granularity` can't be set if `GroupBy` is set.

The `GetSavingsPlansCoverage` operation supports only `DAILY` and `MONTHLY` granularities.>
  take filter, name <Filter>
    like expression
    void take
    note <Filters Savings Plans coverage data by dimensions. You can filter data for Savings Plans usage with the following dimensions:

- `LINKED_ACCOUNT`

- `REGION`

- `SERVICE`

- `INSTANCE_FAMILY`

`GetSavingsPlansCoverage` uses the same [Expression](https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_Expression.html) object as the other operations, but only `AND` is supported among each dimension. If there are multiple values for a dimension, they are OR'd together.

Cost category is also supported.>
  take metrics, name <Metrics>
    like metric-names
    void take
    note <The measurement that you want your Savings Plans coverage reported in. The only valid value is `SpendCoveredBySavingsPlans`.>
  take next-token, name <NextToken>
    like next-page-token
    void take
    note <The token to retrieve the next set of results. Amazon Web Services provides the token when the response from a previous call has more results than the maximum page size.>
  take max-results, name <MaxResults>
    like max-results
    void take
    note <The number of items to be returned in a response. The default is `20`, with a minimum value of `1`.>
  take sort-by, name <SortBy>
    like sort-definition
    void take
    note <The value by which you want to sort the data.

The following values are supported for `Key`:

- `SpendCoveredBySavingsPlan`

- `OnDemandCost`

- `CoveragePercentage`

- `TotalCost`

- `InstanceFamily`

- `Region`

- `Service`

Supported values for `SortOrder` are `ASCENDING` or `DESCENDING`.>