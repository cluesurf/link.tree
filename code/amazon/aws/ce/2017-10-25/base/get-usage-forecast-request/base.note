
load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/date-interval
  take form date-interval

load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/expression
  take form expression

load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/granularity
  take form granularity

load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/metric
  take form metric

load @termsurf/snow/amazonaws.com/ce/2017-10-25/base/prediction-interval-level
  take form prediction-interval-level

form get-usage-forecast-request, name <GetUsageForecastRequest>
  take time-period, name <TimePeriod>
    like date-interval
    note <The start and end dates of the period that you want to retrieve usage forecast for. The start date is inclusive, but the end date is exclusive. For example, if `start` is `2017-01-01` and `end` is `2017-05-01`, then the cost and usage data is retrieved from `2017-01-01` up to and including `2017-04-30` but not including `2017-05-01`. The start date must be equal to or later than the current date to avoid a validation error.>
  take metric, name <Metric>
    like metric
    note <Which metric Cost Explorer uses to create your forecast.

Valid values for a `GetUsageForecast` call are the following:

- USAGE_QUANTITY

- NORMALIZED_USAGE_AMOUNT>
  take granularity, name <Granularity>
    like granularity
    note <How granular you want the forecast to be. You can get 3 months of `DAILY` forecasts or 12 months of `MONTHLY` forecasts.

The `GetUsageForecast` operation supports only `DAILY` and `MONTHLY` granularities.>
  take filter, name <Filter>
    like expression
    void take
    note <The filters that you want to use to filter your forecast. The `GetUsageForecast` API supports filtering by the following dimensions:

- `AZ`

- `INSTANCE_TYPE`

- `LINKED_ACCOUNT`

- `LINKED_ACCOUNT_NAME`

- `OPERATION`

- `PURCHASE_TYPE`

- `REGION`

- `SERVICE`

- `USAGE_TYPE`

- `USAGE_TYPE_GROUP`

- `RECORD_TYPE`

- `OPERATING_SYSTEM`

- `TENANCY`

- `SCOPE`

- `PLATFORM`

- `SUBSCRIPTION_ID`

- `LEGAL_ENTITY_NAME`

- `DEPLOYMENT_OPTION`

- `DATABASE_ENGINE`

- `INSTANCE_TYPE_FAMILY`

- `BILLING_ENTITY`

- `RESERVATION_ID`

- `SAVINGS_PLAN_ARN`>
  take prediction-interval-level, name <PredictionIntervalLevel>
    like prediction-interval-level
    void take
    note <Cost Explorer always returns the mean forecast as a single point. You can request a prediction interval around the mean by specifying a confidence level. The higher the confidence level, the more confident Cost Explorer is about the actual value falling in the prediction interval. Higher confidence levels result in wider prediction intervals.>