
load @drumwork/snow/amazonaws.com/ecr/2015-09-21/base/initiate-layer-upload-response
  take form initiate-layer-upload-response

load @drumwork/snow/amazonaws.com/ecr/2015-09-21/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @drumwork/snow/amazonaws.com/ecr/2015-09-21/base/kms-exception
  take form kms-exception

load @drumwork/snow/amazonaws.com/ecr/2015-09-21/base/repository-not-found-exception
  take form repository-not-found-exception

load @drumwork/snow/amazonaws.com/ecr/2015-09-21/base/server-exception
  take form server-exception

load @drumwork/snow/base/native-string
  take form native-string

boot initiate-layer-upload, name <InitiateLayerUpload>
  deed post
  note <Notifies Amazon ECR that you intend to upload an image layer.

When an image is pushed, the InitiateLayerUpload API is called once per image layer that has not already been uploaded. Whether or not an image layer has been uploaded is determined by the BatchCheckLayerAvailability API action.

This operation is used by the Amazon ECR proxy and is not generally used by customers for pulling and pushing images. In most cases, you should use the `docker` CLI to pull, tag, and push images.>

  take x-amz-target
    like native-string
  take initiate-layer-upload-request, like initiate-layer-upload-request

  line </#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.InitiateLayerUpload>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan initiate-layer-upload-request

  loot 200
    seed json, like initiate-layer-upload-response
    note <Success>
  loot 480
    seed json, like server-exception
    note <ServerException>
  loot 481
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 482
    seed json, like repository-not-found-exception
    note <RepositoryNotFoundException>
  loot 483
    seed json, like kms-exception
    note <KmsException>