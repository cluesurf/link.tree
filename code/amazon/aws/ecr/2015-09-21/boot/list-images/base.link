
load @drumwork/snow/amazonaws.com/ecr/2015-09-21/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @drumwork/snow/amazonaws.com/ecr/2015-09-21/base/list-images-response
  take form list-images-response

load @drumwork/snow/amazonaws.com/ecr/2015-09-21/base/repository-not-found-exception
  take form repository-not-found-exception

load @drumwork/snow/amazonaws.com/ecr/2015-09-21/base/server-exception
  take form server-exception

load @drumwork/snow/base/native-string
  take form native-string

boot list-images, name <ListImages>
  note <Lists all the image IDs for the specified repository.

You can filter images based on whether or not they are tagged by using the `tagStatus` filter and specifying either `TAGGED`, `UNTAGGED` or `ANY`. For example, you can filter your results to return only `UNTAGGED` images and then pipe that result to a BatchDeleteImage operation to delete them. Or, you can filter your results to return only `TAGGED` images to list all of the tags in your repository.>

  take x-amz-target
    like native-string
  take max-results
    like native-string
    note <Pagination limit>
    void take
  take next-token
    like native-string
    note <Pagination token>
    void take
  take list-images-request, like list-images-request

  line </#X-Amz-Target=AmazonEC2ContainerRegistry_V20150921.ListImages>

  hint <X-Amz-Target>, loan x-amz-target

  find <maxResults>, loan max-results
  find <nextToken>, loan next-token

  seed json, loan list-images-request

  loot 200
    seed json, like list-images-response
    note <Success>
  loot 480
    seed json, like server-exception
    note <ServerException>
  loot 481
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 482
    seed json, like repository-not-found-exception
    note <RepositoryNotFoundException>