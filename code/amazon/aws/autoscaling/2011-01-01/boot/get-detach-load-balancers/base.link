
load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/detach-load-balancers-result-type
  take form detach-load-balancers-result-type

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/resource-contention-fault
  take form resource-contention-fault

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/xml-string-max-len255
  take form xml-string-max-len255

load @treesurf/snow/base/list
  take form list

load @treesurf/snow/base/native-string
  take form native-string

boot get-detach-load-balancers, name <GET_DetachLoadBalancers>
  deed get
  note <Detaches one or more Classic Load Balancers from the specified Auto Scaling group.

This operation detaches only Classic Load Balancers. If you have Application Load Balancers, Network Load Balancers, or Gateway Load Balancers, use the DetachLoadBalancerTargetGroups API instead.

When you detach a load balancer, it enters the `Removing` state while deregistering the instances in the group. When all instances are deregistered, then you can no longer describe the load balancer using the DescribeLoadBalancers API call. The instances remain running.>

  take auto-scaling-group-name
    like native-string
    note <The name of the Auto Scaling group.>
  take load-balancer-names
    like list
      like xml-string-max-len255
    note <The names of the load balancers. You can specify up to 10 load balancers.>
  take action
    like native-string
  take version
    like native-string

  line </#Action=DetachLoadBalancers>

  find <AutoScalingGroupName>, loan auto-scaling-group-name
  find <LoadBalancerNames>, loan load-balancer-names
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like detach-load-balancers-result-type
    note <Success>
  loot 480
    seed xml, like resource-contention-fault
    note <ResourceContentionFault>