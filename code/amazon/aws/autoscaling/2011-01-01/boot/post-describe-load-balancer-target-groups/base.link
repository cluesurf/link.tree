
load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/describe-load-balancer-target-groups-response
  take form describe-load-balancer-target-groups-response

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/resource-contention-fault
  take form resource-contention-fault

load @termsurf/snow/base/native-string
  take form native-string

boot post-describe-load-balancer-target-groups, name <POST_DescribeLoadBalancerTargetGroups>
  deed post
  note <Gets information about the load balancer target groups for the specified Auto Scaling group.

To determine the availability of registered instances, use the `State` element in the response. When you attach a target group to an Auto Scaling group, the initial `State` value is `Adding`. The state transitions to `Added` after all Auto Scaling instances are registered with the target group. If Elastic Load Balancing health checks are enabled for the Auto Scaling group, the state transitions to `InService` after at least one Auto Scaling instance passes the health check. When the target group is in the `InService` state, Amazon EC2 Auto Scaling can terminate and replace any instances that are reported as unhealthy. If no registered instances pass the health checks, the target group doesn't enter the `InService` state.

Target groups also have an `InService` state if you attach them in the CreateAutoScalingGroup API call. If your target group state is `InService`, but it is not working properly, check the scaling activities by calling DescribeScalingActivities and take any corrective actions necessary.

For help with failed health checks, see [Troubleshooting Amazon EC2 Auto Scaling: Health checks](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ts-as-healthchecks.html) in the _Amazon EC2 Auto Scaling User Guide_. For more information, see [Elastic Load Balancing and Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html) in the _Amazon EC2 Auto Scaling User Guide_.>

  take action
    like native-string
  take version
    like native-string
  take describe-load-balancer-target-groups-request, like describe-load-balancer-target-groups-request
    void take

  line </#Action=DescribeLoadBalancerTargetGroups>

  find <Action>, loan action
  find <Version>, loan version

  seed xml, loan describe-load-balancer-target-groups-request

  loot 200
    seed xml, like describe-load-balancer-target-groups-response
    note <Success>
  loot 480
    seed xml, like resource-contention-fault
    note <ResourceContentionFault>