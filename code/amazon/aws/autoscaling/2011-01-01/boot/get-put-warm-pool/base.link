
load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/limit-exceeded-fault
  take form limit-exceeded-fault

load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/put-warm-pool-answer
  take form put-warm-pool-answer

load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/resource-contention-fault
  take form resource-contention-fault

load @wavebond/snow/base/native-integer
  take form native-integer

load @wavebond/snow/base/native-string
  take form native-string

boot get-put-warm-pool, name <GET_PutWarmPool>
  deed get
  note <Creates or updates a warm pool for the specified Auto Scaling group. A warm pool is a pool of pre-initialized EC2 instances that sits alongside the Auto Scaling group. Whenever your application needs to scale out, the Auto Scaling group can draw on the warm pool to meet its new desired capacity. For more information and example configurations, see [Warm pools for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/ec2-auto-scaling-warm-pools.html) in the _Amazon EC2 Auto Scaling User Guide_.

This operation must be called from the Region in which the Auto Scaling group was created. This operation cannot be called on an Auto Scaling group that has a mixed instances policy or a launch template or launch configuration that requests Spot Instances.

You can view the instances in the warm pool using the DescribeWarmPool API call. If you are no longer using a warm pool, you can delete it by calling the DeleteWarmPool API.>

  take auto-scaling-group-name
    like native-string
    note <The name of the Auto Scaling group.>
  take max-group-prepared-capacity
    like native-integer
    note <Specifies the maximum number of instances that are allowed to be in the warm pool or in any state except `Terminated` for the Auto Scaling group. This is an optional property. Specify it only if you do not want the warm pool size to be determined by the difference between the group's maximum capacity and its desired capacity.

If a value for `MaxGroupPreparedCapacity` is not specified, Amazon EC2 Auto Scaling launches and maintains the difference between the group's maximum capacity and its desired capacity. If you specify a value for `MaxGroupPreparedCapacity`, Amazon EC2 Auto Scaling uses the difference between the `MaxGroupPreparedCapacity` and the desired capacity instead.

The size of the warm pool is dynamic. Only when `MaxGroupPreparedCapacity` and `MinSize` are set to the same value does the warm pool have an absolute size.

If the desired capacity of the Auto Scaling group is higher than the `MaxGroupPreparedCapacity`, the capacity of the warm pool is 0, unless you specify a value for `MinSize`. To remove a value that you previously set, include the property but specify -1 for the value.>
    void take
  take min-size
    like native-integer
    note <Specifies the minimum number of instances to maintain in the warm pool. This helps you to ensure that there is always a certain number of warmed instances available to handle traffic spikes. Defaults to 0 if not specified.>
    void take
  take pool-state
    like native-string
    note <Sets the instance state to transition to after the lifecycle actions are complete. Default is `Stopped`.>
    void take
  take action
    like native-string
  take version
    like native-string

  line </#Action=PutWarmPool>

  find <AutoScalingGroupName>, loan auto-scaling-group-name
  find <MaxGroupPreparedCapacity>, loan max-group-prepared-capacity
  find <MinSize>, loan min-size
  find <PoolState>, loan pool-state
  find <Action>, loan action
  find <Version>, loan version

  loot 200
    seed xml, like put-warm-pool-answer
    note <Success>
  loot 480
    seed xml, like limit-exceeded-fault
    note <LimitExceededFault>
  loot 481
    seed xml, like resource-contention-fault
    note <ResourceContentionFault>