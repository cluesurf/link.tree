
load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/auto-scaling-group-desired-capacity
  take form auto-scaling-group-desired-capacity

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/auto-scaling-group-max-size
  take form auto-scaling-group-max-size

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/auto-scaling-group-min-size
  take form auto-scaling-group-min-size

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/availability-zones
  take form availability-zones

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/capacity-rebalance-enabled
  take form capacity-rebalance-enabled

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/context
  take form context

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/cooldown
  take form cooldown

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/health-check-grace-period
  take form health-check-grace-period

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/instance-protected
  take form instance-protected

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/launch-template-specification
  take form launch-template-specification

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/lifecycle-hook-specifications
  take form lifecycle-hook-specifications

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/load-balancer-names
  take form load-balancer-names

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/max-instance-lifetime
  take form max-instance-lifetime

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/mixed-instances-policy
  take form mixed-instances-policy

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/resource-name
  take form resource-name

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/tags
  take form tags

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/target-group-ar-ns
  take form target-group-ar-ns

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/termination-policies
  take form termination-policies

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/xml-string-max-len19
  take form xml-string-max-len19

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/xml-string-max-len2047
  take form xml-string-max-len2047

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/xml-string-max-len255
  take form xml-string-max-len255

load @treesurf/snow/amazonaws.com/autoscaling/2011-01-01/base/xml-string-max-len32
  take form xml-string-max-len32

form create-auto-scaling-group-type, name <CreateAutoScalingGroupType>
  take auto-scaling-group-name, name <AutoScalingGroupName>
    like xml-string-max-len255
    note <The name of the Auto Scaling group. This name must be unique per Region per account.>
  take launch-configuration-name, name <LaunchConfigurationName>
    like xml-string-max-len255
    void take
    note <The name of the launch configuration to use to launch instances.

Conditional: You must specify either a launch template (`LaunchTemplate` or `MixedInstancesPolicy`) or a launch configuration (`LaunchConfigurationName` or `InstanceId`).>
  take launch-template, name <LaunchTemplate>
    like launch-template-specification
    void take
    note <Parameters used to specify the launch template and version to use to launch instances.

Conditional: You must specify either a launch template (`LaunchTemplate` or `MixedInstancesPolicy`) or a launch configuration (`LaunchConfigurationName` or `InstanceId`).

The launch template that is specified must be configured for use with an Auto Scaling group. For more information, see [Creating a launch template for an Auto Scaling group](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take mixed-instances-policy, name <MixedInstancesPolicy>
    like mixed-instances-policy
    void take
    note <An embedded object that specifies a mixed instances policy. The required properties must be specified. If optional properties are unspecified, their default values are used.

The policy includes properties that not only define the distribution of On-Demand Instances and Spot Instances, the maximum price to pay for Spot Instances, and how the Auto Scaling group allocates instance types to fulfill On-Demand and Spot capacities, but also the properties that specify the instance configuration informationâ€”the launch template and instance types. The policy can also include a weight for each instance type and different launch templates for individual instance types. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take instance-id, name <InstanceId>
    like xml-string-max-len19
    void take
    note <The ID of the instance used to base the launch configuration on. If specified, Amazon EC2 Auto Scaling uses the configuration values from the specified instance to create a new launch configuration. To get the instance ID, use the Amazon EC2 [DescribeInstances](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html) API operation. For more information, see [Creating an Auto Scaling group using an EC2 instance](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-from-instance.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take min-size, name <MinSize>
    like auto-scaling-group-min-size
    note <The minimum size of the group.>
  take max-size, name <MaxSize>
    like auto-scaling-group-max-size
    note <The maximum size of the group.

With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above `MaxSize` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above `MaxSize` by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).>
  take desired-capacity, name <DesiredCapacity>
    like auto-scaling-group-desired-capacity
    void take
    note <The desired capacity is the initial capacity of the Auto Scaling group at the time of its creation and the capacity it attempts to maintain. It can scale beyond this capacity if you configure auto scaling. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group. If you do not specify a desired capacity, the default is the minimum size of the group.>
  take default-cooldown, name <DefaultCooldown>
    like cooldown
    void take
    note <The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is `300`. This setting applies when using simple scaling policies, but not when using other scaling policies or scheduled scaling. For more information, see [Scaling cooldowns for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take availability-zones, name <AvailabilityZones>
    like availability-zones
    void take
    note <A list of Availability Zones where instances in the Auto Scaling group can be created. This parameter is optional if you specify one or more subnets for `VPCZoneIdentifier`.

Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into EC2-Classic.>
  take load-balancer-names, name <LoadBalancerNames>
    like load-balancer-names
    void take
    note <A list of Classic Load Balancers associated with this Auto Scaling group. For Application Load Balancers, Network Load Balancers, and Gateway Load Balancers, specify the `TargetGroupARNs` property instead.>
  take target-group-ar-ns, name <TargetGroupARNs>
    like target-group-ar-ns
    void take
    note <The Amazon Resource Names (ARN) of the target groups to associate with the Auto Scaling group. Instances are registered as targets in a target group, and traffic is routed to the target group. For more information, see [Elastic Load Balancing and Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-load-balancer.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take health-check-type, name <HealthCheckType>
    like xml-string-max-len32
    void take
    note <The service to use for the health checks. The valid values are `EC2` (default) and `ELB`. If you configure an Auto Scaling group to use load balancer (ELB) health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks. For more information, see [Health checks for Auto Scaling instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take health-check-grace-period, name <HealthCheckGracePeriod>
    like health-check-grace-period
    void take
    note <The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. During this time, any health check failures for the instance are ignored. The default value is `0`. For more information, see [Health check grace period](https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period) in the _Amazon EC2 Auto Scaling User Guide_.

Conditional: Required if you are adding an `ELB` health check.>
  take placement-group, name <PlacementGroup>
    like xml-string-max-len255
    void take
    note <The name of an existing placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see [Placement Groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the _Amazon EC2 User Guide for Linux Instances_.>
  take vpc-zone-identifier, name <VPCZoneIdentifier>
    like xml-string-max-len2047
    void take
    note <A comma-separated list of subnet IDs for a virtual private cloud (VPC) where instances in the Auto Scaling group can be created. If you specify `VPCZoneIdentifier` with `AvailabilityZones`, the subnets that you specify for this parameter must reside in those Availability Zones.

Conditional: If your account supports EC2-Classic and VPC, this parameter is required to launch instances into a VPC.>
  take termination-policies, name <TerminationPolicies>
    like termination-policies
    void take
    note <A policy or a list of policies that are used to select the instance to terminate. These policies are executed in the order that you list them. For more information, see [Controlling which Auto Scaling instances terminate during scale in](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take new-instances-protected-from-scale-in, name <NewInstancesProtectedFromScaleIn>
    like instance-protected
    void take
    note <Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see [Instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection) in the _Amazon EC2 Auto Scaling User Guide_.>
  take capacity-rebalance, name <CapacityRebalance>
    like capacity-rebalance-enabled
    void take
    note <Indicates whether Capacity Rebalancing is enabled. Otherwise, Capacity Rebalancing is disabled. When you turn on Capacity Rebalancing, Amazon EC2 Auto Scaling attempts to launch a Spot Instance whenever Amazon EC2 notifies that a Spot Instance is at an elevated risk of interruption. After launching a new instance, it then terminates an old instance. For more information, see [Amazon EC2 Auto Scaling Capacity Rebalancing](https://docs.aws.amazon.com/autoscaling/ec2/userguide/capacity-rebalance.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take lifecycle-hook-specification-list, name <LifecycleHookSpecificationList>
    like lifecycle-hook-specifications
    void take
    note <One or more lifecycle hooks for the group, which specify actions to perform when Amazon EC2 Auto Scaling launches or terminates instances.>
  take tags, name <Tags>
    like tags
    void take
    note <One or more tags. You can tag your Auto Scaling group and propagate the tags to the Amazon EC2 instances it launches. Tags are not propagated to Amazon EBS volumes. To add tags to Amazon EBS volumes, specify the tags in a launch template but use caution. If the launch template specifies an instance tag with a key that is also specified for the Auto Scaling group, Amazon EC2 Auto Scaling overrides the value of that instance tag with the value specified by the Auto Scaling group. For more information, see [Tagging Auto Scaling groups and instances](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-tagging.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take service-linked-role-arn, name <ServiceLinkedRoleARN>
    like resource-name
    void take
    note <The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other Amazon Web Services on your behalf. By default, Amazon EC2 Auto Scaling uses a service-linked role named `AWSServiceRoleForAutoScaling`, which it creates if it does not exist. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take max-instance-lifetime, name <MaxInstanceLifetime>
    like max-instance-lifetime
    void take
    note <The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). For more information, see [Replacing Auto Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take context, name <Context>
    like context
    void take
    note <Reserved.>