
load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/block-device-ebs-delete-on-termination
  take form block-device-ebs-delete-on-termination

load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/block-device-ebs-encrypted
  take form block-device-ebs-encrypted

load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/block-device-ebs-iops
  take form block-device-ebs-iops

load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/block-device-ebs-throughput
  take form block-device-ebs-throughput

load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/block-device-ebs-volume-size
  take form block-device-ebs-volume-size

load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/block-device-ebs-volume-type
  take form block-device-ebs-volume-type

load @wavebond/snow/amazonaws.com/autoscaling/2011-01-01/base/xml-string-max-len255
  take form xml-string-max-len255

form ebs, name <Ebs>
  note <Describes information used to set up an Amazon EBS volume specified in a block device mapping.>
  take snapshot-id, name <SnapshotId>
    like xml-string-max-len255
    void take
    note <The snapshot ID of the volume to use.

You must specify either a `VolumeSize` or a `SnapshotId`.>
  take volume-size, name <VolumeSize>
    like block-device-ebs-volume-size
    void take
    note <The volume size, in GiBs. The following are the supported volumes sizes for each volume type:

- `gp2` and `gp3`: 1-16,384

- `io1`: 4-16,384

- `st1` and `sc1`: 125-16,384

- `standard`: 1-1,024

You must specify either a `SnapshotId` or a `VolumeSize`. If you specify both `SnapshotId` and `VolumeSize`, the volume size must be equal or greater than the size of the snapshot.>
  take volume-type, name <VolumeType>
    like block-device-ebs-volume-type
    void take
    note <The volume type. For more information, see [Amazon EBS Volume Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSVolumeTypes.html) in the _Amazon EC2 User Guide for Linux Instances_.

Valid Values: `standard` | `io1` | `gp2` | `st1` | `sc1` | `gp3`>
  take delete-on-termination, name <DeleteOnTermination>
    like block-device-ebs-delete-on-termination
    void take
    note <Indicates whether the volume is deleted on instance termination. For Amazon EC2 Auto Scaling, the default value is `true`.>
  take iops, name <Iops>
    like block-device-ebs-iops
    void take
    note <The number of input/output (I/O) operations per second (IOPS) to provision for the volume. For `gp3` and `io1` volumes, this represents the number of IOPS that are provisioned for the volume. For `gp2` volumes, this represents the baseline performance of the volume and the rate at which the volume accumulates I/O credits for bursting.

The following are the supported values for each volume type:

- `gp3`: 3,000-16,000 IOPS

- `io1`: 100-64,000 IOPS

For `io1` volumes, we guarantee 64,000 IOPS only for [Instances built on the Nitro System](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#ec2-nitro-instances). Other instance families guarantee performance up to 32,000 IOPS.

`Iops` is supported when the volume type is `gp3` or `io1` and required only when the volume type is `io1`. (Not used with `standard`, `gp2`, `st1`, or `sc1` volumes.)>
  take encrypted, name <Encrypted>
    like block-device-ebs-encrypted
    void take
    note <Specifies whether the volume should be encrypted. Encrypted EBS volumes can only be attached to instances that support Amazon EBS encryption. For more information, see [Supported Instance Types](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#EBSEncryption_supported_instances). If your AMI uses encrypted volumes, you can also only launch it on supported instance types.

If you are creating a volume from a snapshot, you cannot specify an encryption value. Volumes that are created from encrypted snapshots are automatically encrypted, and volumes that are created from unencrypted snapshots are automatically unencrypted. By default, encrypted snapshots use the Amazon Web Services managed CMK that is used for EBS encryption, but you can specify a custom CMK when you create the snapshot. The ability to encrypt a snapshot during copying also allows you to apply a new CMK to an already-encrypted snapshot. Volumes restored from the resulting copy are only accessible using the new CMK.

Enabling [encryption by default](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html#encryption-by-default) results in all EBS volumes being encrypted with the Amazon Web Services managed CMK or a customer managed CMK, whether or not the snapshot was encrypted.

For more information, see [Using Encryption with EBS-Backed AMIs](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/AMIEncryption.html) in the _Amazon EC2 User Guide for Linux Instances_ and [Required CMK key policy for use with encrypted volumes](https://docs.aws.amazon.com/autoscaling/ec2/userguide/key-policy-requirements-EBS-encryption.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take throughput, name <Throughput>
    like block-device-ebs-throughput
    void take
    note <The throughput (MiBps) to provision for a `gp3` volume.>