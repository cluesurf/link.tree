
load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/auto-scaling-group-desired-capacity
  take form auto-scaling-group-desired-capacity

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/auto-scaling-group-max-size
  take form auto-scaling-group-max-size

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/auto-scaling-group-min-size
  take form auto-scaling-group-min-size

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/availability-zones
  take form availability-zones

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/capacity-rebalance-enabled
  take form capacity-rebalance-enabled

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/context
  take form context

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/cooldown
  take form cooldown

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/health-check-grace-period
  take form health-check-grace-period

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/instance-protected
  take form instance-protected

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/launch-template-specification
  take form launch-template-specification

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/max-instance-lifetime
  take form max-instance-lifetime

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/mixed-instances-policy
  take form mixed-instances-policy

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/resource-name
  take form resource-name

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/termination-policies
  take form termination-policies

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/xml-string-max-len2047
  take form xml-string-max-len2047

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/xml-string-max-len255
  take form xml-string-max-len255

load @termsurf/snow/amazonaws.com/autoscaling/2011-01-01/base/xml-string-max-len32
  take form xml-string-max-len32

form update-auto-scaling-group-type, name <UpdateAutoScalingGroupType>
  take auto-scaling-group-name, name <AutoScalingGroupName>
    like xml-string-max-len255
    note <The name of the Auto Scaling group.>
  take launch-configuration-name, name <LaunchConfigurationName>
    like xml-string-max-len255
    void take
    note <The name of the launch configuration. If you specify `LaunchConfigurationName` in your update request, you can't specify `LaunchTemplate` or `MixedInstancesPolicy`.>
  take launch-template, name <LaunchTemplate>
    like launch-template-specification
    void take
    note <The launch template and version to use to specify the updates. If you specify `LaunchTemplate` in your update request, you can't specify `LaunchConfigurationName` or `MixedInstancesPolicy`.>
  take mixed-instances-policy, name <MixedInstancesPolicy>
    like mixed-instances-policy
    void take
    note <An embedded object that specifies a mixed instances policy. When you make changes to an existing policy, all optional properties are left unchanged if not specified. For more information, see [Auto Scaling groups with multiple instance types and purchase options](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-purchase-options.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take min-size, name <MinSize>
    like auto-scaling-group-min-size
    void take
    note <The minimum size of the Auto Scaling group.>
  take max-size, name <MaxSize>
    like auto-scaling-group-max-size
    void take
    note <The maximum size of the Auto Scaling group.

With a mixed instances policy that uses instance weighting, Amazon EC2 Auto Scaling may need to go above `MaxSize` to meet your capacity requirements. In this event, Amazon EC2 Auto Scaling will never go above `MaxSize` by more than your largest instance weight (weights that define how many units each instance contributes to the desired capacity of the group).>
  take desired-capacity, name <DesiredCapacity>
    like auto-scaling-group-desired-capacity
    void take
    note <The desired capacity is the initial capacity of the Auto Scaling group after this operation completes and the capacity it attempts to maintain. This number must be greater than or equal to the minimum size of the group and less than or equal to the maximum size of the group.>
  take default-cooldown, name <DefaultCooldown>
    like cooldown
    void take
    note <The amount of time, in seconds, after a scaling activity completes before another scaling activity can start. The default value is `300`. This setting applies when using simple scaling policies, but not when using other scaling policies or scheduled scaling. For more information, see [Scaling cooldowns for Amazon EC2 Auto Scaling](https://docs.aws.amazon.com/autoscaling/ec2/userguide/Cooldown.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take availability-zones, name <AvailabilityZones>
    like availability-zones
    void take
    note <One or more Availability Zones for the group.>
  take health-check-type, name <HealthCheckType>
    like xml-string-max-len32
    void take
    note <The service to use for the health checks. The valid values are `EC2` and `ELB`. If you configure an Auto Scaling group to use `ELB` health checks, it considers the instance unhealthy if it fails either the EC2 status checks or the load balancer health checks.>
  take health-check-grace-period, name <HealthCheckGracePeriod>
    like health-check-grace-period
    void take
    note <The amount of time, in seconds, that Amazon EC2 Auto Scaling waits before checking the health status of an EC2 instance that has come into service. The default value is `0`. For more information, see [Health check grace period](https://docs.aws.amazon.com/autoscaling/ec2/userguide/healthcheck.html#health-check-grace-period) in the _Amazon EC2 Auto Scaling User Guide_.

Conditional: Required if you are adding an `ELB` health check.>
  take placement-group, name <PlacementGroup>
    like xml-string-max-len255
    void take
    note <The name of an existing placement group into which to launch your instances, if any. A placement group is a logical grouping of instances within a single Availability Zone. You cannot specify multiple Availability Zones and a placement group. For more information, see [Placement Groups](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html) in the _Amazon EC2 User Guide for Linux Instances_.>
  take vpc-zone-identifier, name <VPCZoneIdentifier>
    like xml-string-max-len2047
    void take
    note <A comma-separated list of subnet IDs for a virtual private cloud (VPC). If you specify `VPCZoneIdentifier` with `AvailabilityZones`, the subnets that you specify for this parameter must reside in those Availability Zones.>
  take termination-policies, name <TerminationPolicies>
    like termination-policies
    void take
    note <A policy or a list of policies that are used to select the instances to terminate. The policies are executed in the order that you list them. For more information, see [Controlling which Auto Scaling instances terminate during scale in](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take new-instances-protected-from-scale-in, name <NewInstancesProtectedFromScaleIn>
    like instance-protected
    void take
    note <Indicates whether newly launched instances are protected from termination by Amazon EC2 Auto Scaling when scaling in. For more information about preventing instances from terminating on scale in, see [Instance scale-in protection](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-instance-termination.html#instance-protection) in the _Amazon EC2 Auto Scaling User Guide_.>
  take service-linked-role-arn, name <ServiceLinkedRoleARN>
    like resource-name
    void take
    note <The Amazon Resource Name (ARN) of the service-linked role that the Auto Scaling group uses to call other Amazon Web Services on your behalf. For more information, see [Service-linked roles](https://docs.aws.amazon.com/autoscaling/ec2/userguide/autoscaling-service-linked-role.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take max-instance-lifetime, name <MaxInstanceLifetime>
    like max-instance-lifetime
    void take
    note <The maximum amount of time, in seconds, that an instance can be in service. The default is null. If specified, the value must be either 0 or a number equal to or greater than 86,400 seconds (1 day). To clear a previously set value, specify a new value of 0. For more information, see [Replacing Auto Scaling instances based on maximum instance lifetime](https://docs.aws.amazon.com/autoscaling/ec2/userguide/asg-max-instance-lifetime.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take capacity-rebalance, name <CapacityRebalance>
    like capacity-rebalance-enabled
    void take
    note <Enables or disables Capacity Rebalancing. For more information, see [Amazon EC2 Auto Scaling Capacity Rebalancing](https://docs.aws.amazon.com/autoscaling/ec2/userguide/capacity-rebalance.html) in the _Amazon EC2 Auto Scaling User Guide_.>
  take context, name <Context>
    like context
    void take
    note <Reserved.>