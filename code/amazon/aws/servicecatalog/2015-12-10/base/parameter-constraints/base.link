
load @termsurf/snow/amazonaws.com/servicecatalog/2015-12-10/base/allowed-values
  take form allowed-values

load @termsurf/snow/base/string
  take form string

form parameter-constraints, name <ParameterConstraints>
  note <The constraints that the administrator has put on the parameter.>
  take allowed-values, name <AllowedValues>
    like allowed-values
    void take
    note <The values that the administrator has allowed for the parameter.>
  take allowed-pattern, name <AllowedPattern>
    like string
    void take
    note <A regular expression that represents the patterns that allow for `String` types. The pattern must match the entire parameter value provided.>
  take constraint-description, name <ConstraintDescription>
    like string
    void take
    note <A string that explains a constraint when the constraint is violated. For example, without a constraint description, a parameter that has an allowed pattern of `[A-Za-z0-9]+` displays the following error message when the user specifies an invalid value:

`Malformed input-Parameter MyParameter must match pattern [A-Za-z0-9]+`

By adding a constraint description, such as must only contain letters (uppercase and lowercase) and numbers, you can display the following customized error message:

`Malformed input-Parameter MyParameter must only contain uppercase and lowercase letters and numbers.`>
  take max-length, name <MaxLength>
    like string
    void take
    note <An integer value that determines the largest number of characters you want to allow for `String` types.>
  take min-length, name <MinLength>
    like string
    void take
    note <An integer value that determines the smallest number of characters you want to allow for `String` types.>
  take max-value, name <MaxValue>
    like string
    void take
    note <A numeric value that determines the largest numeric value you want to allow for `Number` types.>
  take min-value, name <MinValue>
    like string
    void take
    note <A numeric value that determines the smallest numeric value you want to allow for `Number` types.>