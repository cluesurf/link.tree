
load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/create-secret-response
  take form create-secret-response

load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/encryption-failure
  take form encryption-failure

load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/internal-service-error
  take form internal-service-error

load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/invalid-parameter-exception
  take form invalid-parameter-exception

load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/invalid-request-exception
  take form invalid-request-exception

load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/limit-exceeded-exception
  take form limit-exceeded-exception

load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/malformed-policy-document-exception
  take form malformed-policy-document-exception

load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/precondition-not-met-exception
  take form precondition-not-met-exception

load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/resource-exists-exception
  take form resource-exists-exception

load @wavebond/snow/amazonaws.com/secretsmanager/2017-10-17/base/resource-not-found-exception
  take form resource-not-found-exception

load @wavebond/snow/base/native-string
  take form native-string

boot create-secret, name <CreateSecret>
  deed post
  note <Creates a new secret. A secret in Secrets Manager consists of both the protected secret data and the important information needed to manage the secret.

Secrets Manager stores the encrypted secret data in one of a collection of "versions" associated with the secret. Each version contains a copy of the encrypted secret data. Each version is associated with one or more "staging labels" that identify where the version is in the rotation cycle. The `SecretVersionsToStages` field of the secret contains the mapping of staging labels to the active versions of the secret. Versions without a staging label are considered deprecated and not included in the list.

You provide the secret data to be encrypted by putting text in either the `SecretString` parameter or binary data in the `SecretBinary` parameter, but not both. If you include `SecretString` or `SecretBinary` then Secrets Manager also creates an initial secret version and automatically attaches the staging label `AWSCURRENT` to the new version.

- If you call an operation to encrypt or decrypt the `SecretString` or `SecretBinary` for a secret in the same account as the calling user and that secret doesn't specify a Amazon Web Services KMS encryption key, Secrets Manager uses the account's default Amazon Web Services managed customer master key (CMK) with the alias `aws/secretsmanager`. If this key doesn't already exist in your account then Secrets Manager creates it for you automatically. All users and roles in the same Amazon Web Services account automatically have access to use the default CMK. Note that if an Secrets Manager API call results in Amazon Web Services creating the account's Amazon Web Services-managed CMK, it can result in a one-time significant delay in returning the result.

- If the secret resides in a different Amazon Web Services account from the credentials calling an API that requires encryption or decryption of the secret value then you must create and use a custom Amazon Web Services KMS CMK because you can't access the default CMK for the account using credentials from a different Amazon Web Services account. Store the ARN of the CMK in the secret when you create the secret or when you update it by including it in the `KMSKeyId`. If you call an API that must encrypt or decrypt `SecretString` or `SecretBinary` using credentials from a different account then the Amazon Web Services KMS key policy must grant cross-account access to that other account's user or role for both the kms:GenerateDataKey and kms:Decrypt operations.

**Minimum permissions** To run this command, you must have the following permissions:

- secretsmanager:CreateSecret

- kms:GenerateDataKey - needed only if you use a customer-managed Amazon Web Services KMS key to encrypt the secret. You do not need this permission to use the account default Amazon Web Services managed CMK for Secrets Manager.

- kms:Decrypt - needed only if you use a customer-managed Amazon Web Services KMS key to encrypt the secret. You do not need this permission to use the account default Amazon Web Services managed CMK for Secrets Manager.

- secretsmanager:TagResource - needed only if you include the `Tags` parameter.

**Related operations** - To delete a secret, use DeleteSecret.

- To modify an existing secret, use UpdateSecret.

- To create a new version of a secret, use PutSecretValue.

- To retrieve the encrypted secure string and secure binary values, use GetSecretValue.

- To retrieve all other details for a secret, use DescribeSecret. This does not include the encrypted secure string and secure binary values.

- To retrieve the list of secret versions associated with the current secret, use DescribeSecret and examine the `SecretVersionsToStages` response value.>

  take x-amz-target
    like native-string
  take create-secret-request, like create-secret-request

  line </#X-Amz-Target=secretsmanager.CreateSecret>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan create-secret-request

  loot 200
    seed json, like create-secret-response
    note <Success>
  loot 480
    seed json, like invalid-parameter-exception
    note <InvalidParameterException>
  loot 481
    seed json, like invalid-request-exception
    note <InvalidRequestException>
  loot 482
    seed json, like limit-exceeded-exception
    note <LimitExceededException>
  loot 483
    seed json, like encryption-failure
    note <EncryptionFailure>
  loot 484
    seed json, like resource-exists-exception
    note <ResourceExistsException>
  loot 485
    seed json, like resource-not-found-exception
    note <ResourceNotFoundException>
  loot 486
    seed json, like malformed-policy-document-exception
    note <MalformedPolicyDocumentException>
  loot 487
    seed json, like internal-service-error
    note <InternalServiceError>
  loot 488
    seed json, like precondition-not-met-exception
    note <PreconditionNotMetException>