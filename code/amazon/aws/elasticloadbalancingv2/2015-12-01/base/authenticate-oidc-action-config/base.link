
load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-authentication-request-extra-params
  take form authenticate-oidc-action-authentication-request-extra-params

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-authorization-endpoint
  take form authenticate-oidc-action-authorization-endpoint

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-client-id
  take form authenticate-oidc-action-client-id

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-client-secret
  take form authenticate-oidc-action-client-secret

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-conditional-behavior-enum
  take form authenticate-oidc-action-conditional-behavior-enum

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-issuer
  take form authenticate-oidc-action-issuer

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-scope
  take form authenticate-oidc-action-scope

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-session-cookie-name
  take form authenticate-oidc-action-session-cookie-name

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-session-timeout
  take form authenticate-oidc-action-session-timeout

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-token-endpoint
  take form authenticate-oidc-action-token-endpoint

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-use-existing-client-secret
  take form authenticate-oidc-action-use-existing-client-secret

load @nerdbond/snow/amazonaws.com/elasticloadbalancingv2/2015-12-01/base/authenticate-oidc-action-user-info-endpoint
  take form authenticate-oidc-action-user-info-endpoint

form authenticate-oidc-action-config, name <AuthenticateOidcActionConfig>
  note <Request parameters when using an identity provider (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.>
  take issuer, name <Issuer>
    like authenticate-oidc-action-issuer
    note <The OIDC issuer identifier of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.>
  take authorization-endpoint, name <AuthorizationEndpoint>
    like authenticate-oidc-action-authorization-endpoint
    note <The authorization endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.>
  take token-endpoint, name <TokenEndpoint>
    like authenticate-oidc-action-token-endpoint
    note <The token endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.>
  take user-info-endpoint, name <UserInfoEndpoint>
    like authenticate-oidc-action-user-info-endpoint
    note <The user info endpoint of the IdP. This must be a full URL, including the HTTPS protocol, the domain, and the path.>
  take client-id, name <ClientId>
    like authenticate-oidc-action-client-id
    note <The OAuth 2.0 client identifier.>
  take client-secret, name <ClientSecret>
    like authenticate-oidc-action-client-secret
    void take
    note <The OAuth 2.0 client secret. This parameter is required if you are creating a rule. If you are modifying a rule, you can omit this parameter if you set `UseExistingClientSecret` to true.>
  take session-cookie-name, name <SessionCookieName>
    like authenticate-oidc-action-session-cookie-name
    void take
    note <The name of the cookie used to maintain session information. The default is AWSELBAuthSessionCookie.>
  take scope, name <Scope>
    like authenticate-oidc-action-scope
    void take
    note <The set of user claims to be requested from the IdP. The default is `openid`.

To verify which scope values your IdP supports and how to separate multiple values, see the documentation for your IdP.>
  take session-timeout, name <SessionTimeout>
    like authenticate-oidc-action-session-timeout
    void take
    note <The maximum duration of the authentication session, in seconds. The default is 604800 seconds (7 days).>
  take authentication-request-extra-params, name <AuthenticationRequestExtraParams>
    like authenticate-oidc-action-authentication-request-extra-params
    void take
    note <The query parameters (up to 10) to include in the redirect request to the authorization endpoint.>
  take on-unauthenticated-request, name <OnUnauthenticatedRequest>
    like authenticate-oidc-action-conditional-behavior-enum
    void take
    note <The behavior if the user is not authenticated. The following are possible values:

- deny `- Return an HTTP 401 Unauthorized error.`

``` - allow `- Allow the request to be forwarded to the target.`    ``- authenticate `- Redirect the request to the IdP authorization endpoint. This is the default value.`    `` ```>
  take use-existing-client-secret, name <UseExistingClientSecret>
    like authenticate-oidc-action-use-existing-client-secret
    void take
    note <Indicates whether to use the existing client secret when modifying a rule. If you are creating a rule, you can omit this parameter or set it to false.>