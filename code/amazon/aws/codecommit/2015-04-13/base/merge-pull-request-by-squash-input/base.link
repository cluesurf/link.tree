
load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/conflict-detail-level-type-enum
  take form conflict-detail-level-type-enum

load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/conflict-resolution
  take form conflict-resolution

load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/conflict-resolution-strategy-type-enum
  take form conflict-resolution-strategy-type-enum

load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/email
  take form email

load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/keep-empty-folders
  take form keep-empty-folders

load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/message
  take form message

load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/name
  take form name

load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/object-id
  take form object-id

load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/pull-request-id
  take form pull-request-id

load @textsurf/snow/amazonaws.com/codecommit/2015-04-13/base/repository-name
  take form repository-name

form merge-pull-request-by-squash-input, name <MergePullRequestBySquashInput>
  take pull-request-id, name <pullRequestId>
    like pull-request-id
    note <The system-generated ID of the pull request. To get this ID, use ListPullRequests.>
  take repository-name, name <repositoryName>
    like repository-name
    note <The name of the repository where the pull request was created.>
  take source-commit-id, name <sourceCommitId>
    like object-id
    void take
    note <The full commit ID of the original or updated commit in the pull request source branch. Pass this value if you want an exception thrown if the current commit ID of the tip of the source branch does not match this commit ID.>
  take conflict-detail-level, name <conflictDetailLevel>
    like conflict-detail-level-type-enum
    void take
    note <The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used, which returns a not-mergeable result if the same file has differences in both branches. If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file in both branches has differences on the same line.>
  take conflict-resolution-strategy, name <conflictResolutionStrategy>
    like conflict-resolution-strategy-type-enum
    void take
    note <Specifies which branch to use when resolving conflicts, or whether to attempt automatically merging two versions of a file. The default is NONE, which requires any conflicts to be resolved manually before the merge operation is successful.>
  take commit-message, name <commitMessage>
    like message
    void take
    note <The commit message to include in the commit information for the merge.>
  take author-name, name <authorName>
    like name
    void take
    note <The name of the author who created the commit. This information is used as both the author and committer for the commit.>
  take email, name <email>
    like email
    void take
    note <The email address of the person merging the branches. This information is used in the commit information for the merge.>
  take keep-empty-folders, name <keepEmptyFolders>
    like keep-empty-folders
    void take
    note <If the commit contains deletions, whether to keep a folder or folder structure if the changes leave the folders empty. If true, a .gitkeep file is created for empty folders. The default is false.>
  take conflict-resolution, name <conflictResolution>
    like conflict-resolution
    void take
    note <If AUTOMERGE is the conflict resolution strategy, a list of inputs to use when resolving conflicts during a merge.>
