
load @drumwork/snow/amazonaws.com/codecommit/2015-04-13/base/commit-name
  take form commit-name

load @drumwork/snow/amazonaws.com/codecommit/2015-04-13/base/conflict-detail-level-type-enum
  take form conflict-detail-level-type-enum

load @drumwork/snow/amazonaws.com/codecommit/2015-04-13/base/conflict-resolution-strategy-type-enum
  take form conflict-resolution-strategy-type-enum

load @drumwork/snow/amazonaws.com/codecommit/2015-04-13/base/file-paths
  take form file-paths

load @drumwork/snow/amazonaws.com/codecommit/2015-04-13/base/max-results
  take form max-results

load @drumwork/snow/amazonaws.com/codecommit/2015-04-13/base/merge-option-type-enum
  take form merge-option-type-enum

load @drumwork/snow/amazonaws.com/codecommit/2015-04-13/base/next-token
  take form next-token

load @drumwork/snow/amazonaws.com/codecommit/2015-04-13/base/repository-name
  take form repository-name

form batch-describe-merge-conflicts-input, name <BatchDescribeMergeConflictsInput>
  take repository-name, name <repositoryName>
    like repository-name
    note <The name of the repository that contains the merge conflicts you want to review.>
  take destination-commit-specifier, name <destinationCommitSpecifier>
    like commit-name
    note <The branch, tag, HEAD, or other fully qualified reference used to identify a commit (for example, a branch name or a full commit ID).>
  take source-commit-specifier, name <sourceCommitSpecifier>
    like commit-name
    note <The branch, tag, HEAD, or other fully qualified reference used to identify a commit (for example, a branch name or a full commit ID).>
  take merge-option, name <mergeOption>
    like merge-option-type-enum
    note <The merge option or strategy you want to use to merge the code.>
  take max-merge-hunks, name <maxMergeHunks>
    like max-results
    void take
    note <The maximum number of merge hunks to include in the output.>
  take max-conflict-files, name <maxConflictFiles>
    like max-results
    void take
    note <The maximum number of files to include in the output.>
  take file-paths, name <filePaths>
    like file-paths
    void take
    note <The path of the target files used to describe the conflicts. If not specified, the default is all conflict files.>
  take conflict-detail-level, name <conflictDetailLevel>
    like conflict-detail-level-type-enum
    void take
    note <The level of conflict detail to use. If unspecified, the default FILE_LEVEL is used, which returns a not-mergeable result if the same file has differences in both branches. If LINE_LEVEL is specified, a conflict is considered not mergeable if the same file in both branches has differences on the same line.>
  take conflict-resolution-strategy, name <conflictResolutionStrategy>
    like conflict-resolution-strategy-type-enum
    void take
    note <Specifies which branch to use when resolving conflicts, or whether to attempt automatically merging two versions of a file. The default is NONE, which requires any conflicts to be resolved manually before the merge operation is successful.>
  take next-token, name <nextToken>
    like next-token
    void take
    note <An enumeration token that, when provided in a request, returns the next batch of the results.>