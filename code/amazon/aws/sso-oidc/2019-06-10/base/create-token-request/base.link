
load @drumwork/snow/amazonaws.com/sso-oidc/2019-06-10/base/auth-code
  take form auth-code

load @drumwork/snow/amazonaws.com/sso-oidc/2019-06-10/base/client-id
  take form client-id

load @drumwork/snow/amazonaws.com/sso-oidc/2019-06-10/base/client-secret
  take form client-secret

load @drumwork/snow/amazonaws.com/sso-oidc/2019-06-10/base/device-code
  take form device-code

load @drumwork/snow/amazonaws.com/sso-oidc/2019-06-10/base/grant-type
  take form grant-type

load @drumwork/snow/amazonaws.com/sso-oidc/2019-06-10/base/refresh-token
  take form refresh-token

load @drumwork/snow/amazonaws.com/sso-oidc/2019-06-10/base/scopes
  take form scopes

load @drumwork/snow/amazonaws.com/sso-oidc/2019-06-10/base/uri
  take form uri

form create-token-request, name <CreateTokenRequest>
  take client-id, name <clientId>
    like client-id
    note <The unique identifier string for each client. This value should come from the persisted result of the RegisterClient API.>
  take client-secret, name <clientSecret>
    like client-secret
    note <A secret string generated for the client. This value should come from the persisted result of the RegisterClient API.>
  take grant-type, name <grantType>
    like grant-type
    note <Supports grant types for authorization code, refresh token, and device code request.>
  take device-code, name <deviceCode>
    like device-code
    note <Used only when calling this API for the device code grant type. This short-term code is used to identify this authentication attempt. This should come from an in-memory reference to the result of the StartDeviceAuthorization API.>
  take code, name <code>
    like auth-code
    void take
    note <The authorization code received from the authorization service. This parameter is required to perform an authorization grant request to get access to a token.>
  take refresh-token, name <refreshToken>
    like refresh-token
    void take
    note <The token used to obtain an access token in the event that the access token is invalid or expired. This token is not issued by the service.>
  take scope, name <scope>
    like scopes
    void take
    note <The list of scopes that is defined by the client. Upon authorization, this list is used to restrict permissions when granting an access token.>
  take redirect-uri, name <redirectUri>
    like uri
    void take
    note <The location of the application that will receive the authorization code. Users authorize the service to send the request to this location.>