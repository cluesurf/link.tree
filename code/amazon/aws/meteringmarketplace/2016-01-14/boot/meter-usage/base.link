
load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/customer-not-entitled-exception
  take form customer-not-entitled-exception

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/duplicate-request-exception
  take form duplicate-request-exception

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/internal-service-error-exception
  take form internal-service-error-exception

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/invalid-endpoint-region-exception
  take form invalid-endpoint-region-exception

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/invalid-product-code-exception
  take form invalid-product-code-exception

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/invalid-tag-exception
  take form invalid-tag-exception

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/invalid-usage-allocations-exception
  take form invalid-usage-allocations-exception

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/invalid-usage-dimension-exception
  take form invalid-usage-dimension-exception

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/meter-usage-result
  take form meter-usage-result

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/throttling-exception
  take form throttling-exception

load @textsurf/snow/amazonaws.com/meteringmarketplace/2016-01-14/base/timestamp-out-of-bounds-exception
  take form timestamp-out-of-bounds-exception

load @textsurf/snow/base/native-string
  take form native-string

boot meter-usage, name <MeterUsage>
  deed post
  note <API to emit metering records. For identical requests, the API is idempotent. It simply returns the metering record ID.

MeterUsage is authenticated on the buyer's AWS account using credentials from the EC2 instance, ECS task, or EKS pod.

MeterUsage can optionally include multiple usage allocations, to provide customers with usage data split into buckets by tags that you define (or allow the customer to define).>

  take x-amz-target
    like native-string
  take meter-usage-request, like meter-usage-request

  line </#X-Amz-Target=AWSMPMeteringService.MeterUsage>

  hint <X-Amz-Target>, loan x-amz-target

  seed json, loan meter-usage-request

  loot 200
    seed json, like meter-usage-result
    note <Success>
  loot 480
    seed json, like internal-service-error-exception
    note <InternalServiceErrorException>
  loot 481
    seed json, like invalid-product-code-exception
    note <InvalidProductCodeException>
  loot 482
    seed json, like invalid-usage-dimension-exception
    note <InvalidUsageDimensionException>
  loot 483
    seed json, like invalid-tag-exception
    note <InvalidTagException>
  loot 484
    seed json, like invalid-usage-allocations-exception
    note <InvalidUsageAllocationsException>
  loot 485
    seed json, like invalid-endpoint-region-exception
    note <InvalidEndpointRegionException>
  loot 486
    seed json, like timestamp-out-of-bounds-exception
    note <TimestampOutOfBoundsException>
  loot 487
    seed json, like duplicate-request-exception
    note <DuplicateRequestException>
  loot 488
    seed json, like throttling-exception
    note <ThrottlingException>
  loot 489
    seed json, like customer-not-entitled-exception
    note <CustomerNotEntitledException>