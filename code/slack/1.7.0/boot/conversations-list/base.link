
load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-integer
  take form native-integer

load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/slack.com/1.7.0/base/defs-ok-false
  take form defs-ok-false

load @drumwork/snow/slack.com/1.7.0/base/defs-ok-true
  take form defs-ok-true

boot conversations-list, name <conversations_list>
  deed get
  note <Lists all channels in a Slack team.>

  take token
    like native-string
    note <Authentication token. Requires scope: `conversations:read`>
    void take
  take exclude-archived
    like native-boolean
    note <Set to `true` to exclude archived channels from the list>
    void take
  take types
    like native-string
    note <Mix and match channel types by providing a comma-separated list of any combination of `public_channel`, `private_channel`, `mpim`, `im`>
    void take
  take limit
    like native-integer
    note <The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the list hasn't been reached. Must be an integer no larger than 1000.>
    void take
  take cursor
    like native-string
    note <Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first "page" of the collection. See [pagination](/docs/pagination) for more detail.>
    void take

  line </conversations.list>

  find <token>, loan token
  find <exclude_archived>, loan exclude-archived
  find <types>, loan types
  find <limit>, loan limit
  find <cursor>, loan cursor

  loot 200
    seed json
      like form
        take channels, name <channels>
        take ok, name <ok>
          like defs-ok-true
        take response-metadata, name <response_metadata>
          like form
            take next-cursor, name <next_cursor>
          void take
    note <Typical success response with only public channels>
  loot fall
    seed json
      like form
        take callstack, name <callstack>
          void take
        take error, name <error>
        take needed, name <needed>
          void take
        take ok, name <ok>
          like defs-ok-false
        take provided, name <provided>
          void take
    note <Typical error response>