
load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-integer
  take form native-integer

load @drumwork/snow/base/native-number
  take form native-number

load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/slack.com/1.7.0/base/defs-ok-false
  take form defs-ok-false

load @drumwork/snow/slack.com/1.7.0/base/defs-ok-true
  take form defs-ok-true

boot conversations-history, name <conversations_history>
  note <Fetches a conversation&#39;s history of messages and events.>

  take token
    like native-string
    note <Authentication token. Requires scope: `conversations:history`>
    void take
  take channel
    like native-string
    note <Conversation ID to fetch history for.>
    void take
  take latest
    like native-number
    note <End of time range of messages to include in results.>
    void take
  take oldest
    like native-number
    note <Start of time range of messages to include in results.>
    void take
  take inclusive
    like native-boolean
    note <Include messages with latest or oldest timestamp in results only when either timestamp is specified.>
    void take
  take limit
    like native-integer
    note <The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn&#39;t been reached.>
    void take
  take cursor
    like native-string
    note <Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request&#39;s `response_metadata`. Default value fetches the first &quot;page&quot; of the collection. See [pagination](/docs/pagination) for more detail.>
    void take

  line </conversations.history>

  find <token>, loan token
  find <channel>, loan channel
  find <latest>, loan latest
  find <oldest>, loan oldest
  find <inclusive>, loan inclusive
  find <limit>, loan limit
  find <cursor>, loan cursor

  loot 200
    seed json
      like form
        take channel-actions-count, name <channel_actions_count>
        take channel-actions-ts, name <channel_actions_ts>
        take has-more, name <has_more>
        take messages, name <messages>
        take ok, name <ok>
          like defs-ok-true
        take pin-count, name <pin_count>
    note <Typical success response containing a channel&#39;s messages>
  loot fall
    seed json
      like form
        take callstack, name <callstack>
          void take
        take error, name <error>
        take needed, name <needed>
          void take
        take ok, name <ok>
          like defs-ok-false
        take provided, name <provided>
          void take
    note <Typical error response>