
load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/vision/v1/base/operation
  take form operation

boot vision-projects-locations-products-purge, name <vision.projects.locations.products.purge>
  note <Asynchronous API to delete all Products in a ProductSet or all Products that are in no ProductSet. If a Product is a member of the specified ProductSet in addition to other ProductSets, the Product will still be deleted. It is recommended to not delete the specified ProductSet until after this operation has completed. It is also recommended to not add any of the Products involved in the batch delete to a new ProductSet while this operation is running because those Products may still end up deleted. It's not possible to undo the PurgeProducts operation. Therefore, it is recommended to keep the csv files used in ImportProductSets (if that was how you originally built the Product Set) before starting PurgeProducts, in case you need to re-import the data after deletion. If the plan is to purge all of the Products from a ProductSet and then re-use the empty ProductSet to re-import new Products into the empty ProductSet, you must wait until the PurgeProducts operation has finished for that ProductSet. The google.longrunning.Operation API can be used to keep track of the progress and results of the request. `Operation.metadata` contains `BatchOperationMetadata`. (progress)>

  take parent
    like native-string
    note <Required. The project and location in which the Products should be deleted. Format is `projects/PROJECT_ID/locations/LOC_ID`.>
  take purge-products-request, like purge-products-request
    void take

  line </v1/{parent}/products:purge>

  seed json, loan purge-products-request

  loot 200
    seed json, like operation
    note <Successful response>