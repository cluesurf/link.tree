
load @wavebond/snow/base/native-string
  take form native-string

load @wavebond/snow/googleapis.com/vision/v1/base/reference-image
  take form reference-image

boot vision-projects-locations-products-reference-images-create, name <vision.projects.locations.products.referenceImages.create>
  deed post
  note <Creates and returns a new ReferenceImage resource. The `bounding_poly` field is optional. If `bounding_poly` is not specified, the system will try to detect regions of interest in the image that are compatible with the product_category on the parent product. If it is specified, detection is ALWAYS skipped. The system converts polygons into non-rotated rectangles. Note that the pipeline will resize the image if the image resolution is too large to process (above 50MP). Possible errors: * Returns INVALID_ARGUMENT if the image_uri is missing or longer than 4096 characters. * Returns INVALID_ARGUMENT if the product does not exist. * Returns INVALID_ARGUMENT if bounding_poly is not provided, and nothing compatible with the parent product's product_category is detected. * Returns INVALID_ARGUMENT if bounding_poly contains more than 10 polygons.>

  take parent
    like native-string
    note <Required. Resource name of the product in which to create the reference image. Format is `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`.>
  take reference-image-id
    like native-string
    note <A user-supplied resource id for the ReferenceImage to be added. If set, the server will attempt to use this value as the resource id. If it is already in use, an error is returned with code ALREADY_EXISTS. Must be at most 128 characters long. It cannot contain the character `/`.>
    void take
  take reference-image, like reference-image
    void take

  line </v1/{parent}/referenceImages>

  find <referenceImageId>, loan reference-image-id

  seed json, loan reference-image

  loot 200
    seed json, like reference-image
    note <Successful response>