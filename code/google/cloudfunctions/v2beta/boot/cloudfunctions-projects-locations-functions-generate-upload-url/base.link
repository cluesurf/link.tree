
load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/cloudfunctions/v2beta/base/generate-upload-url-response
  take form generate-upload-url-response

boot cloudfunctions-projects-locations-functions-generate-upload-url, name <cloudfunctions.projects.locations.functions.generateUploadUrl>
  deed post
  note <Returns a signed URL for uploading a function source code. For more information about the signed URL usage see: https://cloud.google.com/storage/docs/access-control/signed-urls. Once the function source code upload is complete, the used signed URL should be provided in CreateFunction or UpdateFunction request as a reference to the function source code. When uploading source code to the generated signed URL, please follow these restrictions: * Source file type should be a zip file. * No credentials should be attached - the signed URLs provide access to the target bucket using internal service identity; if credentials were attached, the identity from the credentials would be used, but that identity does not have permissions to upload files to the URL. When making a HTTP PUT request, these two headers need to be specified: * `content-type: application/zip` And this header SHOULD NOT be specified: * `Authorization: Bearer YOUR_TOKEN`>

  take parent
    like native-string
    note <Required. The project and location in which the Google Cloud Storage signed URL should be generated, specified in the format `projects/*/locations/*`.>
  take generate-upload-url-request, like generate-upload-url-request
    void take

  line </v2beta/{parent}/functions:generateUploadUrl>

  seed json, loan generate-upload-url-request

  loot 200
    seed json, like generate-upload-url-response
    note <Successful response>