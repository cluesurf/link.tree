
load @wavebond/snow/base/native-integer
  take form native-integer

load @wavebond/snow/base/native-string
  take form native-string

load @wavebond/snow/googleapis.com/compute/v1/base/operation
  take form operation

boot compute-instance-group-managers-resize, name <compute.instanceGroupManagers.resize>
  deed post
  note <Resizes the managed instance group. If you increase the size, the group creates new instances using the current instance template. If you decrease the size, the group deletes instances. The resize operation is marked DONE when the resize actions are scheduled even if the group has not yet added or deleted any instances. You must separately verify the status of the creating or deleting actions with the listmanagedinstances method. When resizing down, the instance group arbitrarily chooses the order in which VMs are deleted. The group takes into account some VM attributes when making the selection including: + The status of the VM instance. + The health of the VM instance. + The instance template version the VM is based on. + For regional managed instance groups, the location of the VM instance. This list is subject to change. If the group is part of a backend service that has enabled connection draining, it can take up to 60 seconds after the connection draining duration has elapsed before the VM instance is removed or deleted.>

  take project
    like native-string
    note <Project ID for this request.>
  take zone
    like native-string
    note <The name of the zone where the managed instance group is located.>
  take instance-group-manager
    like native-string
    note <The name of the managed instance group.>
  take size
    like native-integer
    note <The number of running instances that the managed instance group should maintain at any given time. The group automatically adds or removes instances to maintain the number of instances specified by this parameter.>
  take request-id
    like native-string
    note <An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).>
    void take

  line </projects/{project}/zones/{zone}/instanceGroupManagers/{instance-group-manager}/resize>

  find <size>, loan size
  find <requestId>, loan request-id

  loot 200
    seed json, like operation
    note <Successful response>