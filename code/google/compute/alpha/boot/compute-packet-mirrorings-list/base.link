
load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-integer
  take form native-integer

load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/compute/alpha/base/packet-mirroring-list
  take form packet-mirroring-list

boot compute-packet-mirrorings-list, name <compute.packetMirrorings.list>
  deed get
  note <Retrieves a list of PacketMirroring resources available to the specified project and region.>

  take project
    like native-string
    note <Project ID for this request.>
  take region
    like native-string
    note <Name of the region for this request.>
  take filter
    like native-string
    note <A filter expression that filters resources listed in the response. The expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `&gt;`, `&lt;`, `&lt;=`, `&gt;=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = "Intel Skylake") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = "Intel Skylake") OR (cpuPlatform = "Intel Broadwell") AND (scheduling.automaticRestart = true) ```>
    void take
  take max-results
    like native-integer
    note <The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)>
    void take
  take order-by
    like native-string
    note <Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.>
    void take
  take page-token
    like native-string
    note <Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.>
    void take
  take return-partial-success
    like native-boolean
    note <Opt-in for partial success behavior which provides partial results in case of failure. The default value is false.>
    void take

  line </projects/{project}/regions/{region}/packetMirrorings>

  find <filter>, loan filter
  find <maxResults>, loan max-results
  find <orderBy>, loan order-by
  find <pageToken>, loan page-token
  find <returnPartialSuccess>, loan return-partial-success

  loot 200
    seed json, like packet-mirroring-list
    note <Successful response>