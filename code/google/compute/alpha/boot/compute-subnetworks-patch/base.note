
load @termsurf/snow/base/native-integer
  take form native-integer

load @termsurf/snow/base/native-string
  take form native-string

load @termsurf/snow/googleapis.com/compute/alpha/base/operation
  take form operation

boot compute-subnetworks-patch, name <compute.subnetworks.patch>
  deed patch
  note <Patches the specified subnetwork with the data included in the request. Only certain fields can be updated with a patch request as indicated in the field descriptions. You must specify the current fingerprint of the subnetwork resource being patched.>

  take project
    like native-string
    note <Project ID for this request.>
  take region
    like native-string
    note <Name of the region scoping this request.>
  take subnetwork
    like native-string
    note <Name of the Subnetwork resource to patch.>
  take drain-timeout-seconds
    like native-integer
    note <The drain timeout specifies the upper bound in seconds on the amount of time allowed to drain connections from the current ACTIVE subnetwork to the current BACKUP subnetwork. The drain timeout is only applicable when the following conditions are true: - the subnetwork being patched has purpose = INTERNAL_HTTPS_LOAD_BALANCER - the subnetwork being patched has role = BACKUP - the patch request is setting the role to ACTIVE. Note that after this patch operation the roles of the ACTIVE and BACKUP subnetworks will be swapped.>
    void take
  take request-id
    like native-string
    note <An optional request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported ( 00000000-0000-0000-0000-000000000000).>
    void take
  take subnetwork, like subnetwork
    void take

  line </projects/{project}/regions/{region}/subnetworks/{subnetwork}>

  find <drainTimeoutSeconds>, loan drain-timeout-seconds
  find <requestId>, loan request-id

  seed json, loan subnetwork

  loot 200
    seed json, like operation
    note <Successful response>