
load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/youtube/v3/base/channel-section-list-response
  take form channel-section-list-response

boot youtube-channel-sections-list, name <youtube.channelSections.list>
  deed get
  note <Retrieves a list of resources, possibly filtered.>

  take part
    like list
      like native-string
    note <The *part* parameter specifies a comma-separated list of one or more channelSection resource properties that the API response will include. The part names that you can include in the parameter value are id, snippet, and contentDetails. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a channelSection resource, the snippet property contains other properties, such as a display title for the channelSection. If you set *part=snippet*, the API response will also contain all of those nested properties.>
  take channel-id
    like native-string
    note <Return the ChannelSections owned by the specified channel ID.>
    void take
  take hl
    like native-string
    note <Return content in specified language>
    void take
  take id
    like list
      like native-string
    note <Return the ChannelSections with the given IDs for Stubby or Apiary.>
    void take
  take mine
    like native-boolean
    note <Return the ChannelSections owned by the authenticated user.>
    void take
  take on-behalf-of-content-owner
    like native-string
    note <*Note:* This parameter is intended exclusively for YouTube content partners. The *onBehalfOfContentOwner* parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.>
    void take

  line </youtube/v3/channelSections>

  find <part>, loan part
  find <channelId>, loan channel-id
  find <hl>, loan hl
  find <id>, loan id
  find <mine>, loan mine
  find <onBehalfOfContentOwner>, loan on-behalf-of-content-owner

  loot 200
    seed json, like channel-section-list-response
    note <Successful response>