
load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-integer
  take form native-integer

load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/youtube/v3/base/playlist-list-response
  take form playlist-list-response

boot youtube-playlists-list, name <youtube.playlists.list>
  note <Retrieves a list of resources, possibly filtered.>

  take part
    like list
      like native-string
    note <The *part* parameter specifies a comma-separated list of one or more playlist resource properties that the API response will include. If the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a playlist resource, the snippet property contains properties like author, title, description, tags, and timeCreated. As such, if you set *part=snippet*, the API response will contain all of those properties.>
  take channel-id
    like native-string
    note <Return the playlists owned by the specified channel ID.>
    void take
  take hl
    like native-string
    note <Returen content in specified language>
    void take
  take id
    like list
      like native-string
    note <Return the playlists with the given IDs for Stubby or Apiary.>
    void take
  take max-results
    like native-integer
    note <The *maxResults* parameter specifies the maximum number of items that should be returned in the result set.>
    void take
  take mine
    like native-boolean
    note <Return the playlists owned by the authenticated user.>
    void take
  take on-behalf-of-content-owner
    like native-string
    note <*Note:* This parameter is intended exclusively for YouTube content partners. The *onBehalfOfContentOwner* parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.>
    void take
  take on-behalf-of-content-owner-channel
    like native-string
    note <This parameter can only be used in a properly authorized request. *Note:* This parameter is intended exclusively for YouTube content partners. The *onBehalfOfContentOwnerChannel* parameter specifies the YouTube channel ID of the channel to which a video is being added. This parameter is required when a request specifies a value for the onBehalfOfContentOwner parameter, and it can only be used in conjunction with that parameter. In addition, the request must be authorized using a CMS account that is linked to the content owner that the onBehalfOfContentOwner parameter specifies. Finally, the channel that the onBehalfOfContentOwnerChannel parameter value specifies must be linked to the content owner that the onBehalfOfContentOwner parameter specifies. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and perform actions on behalf of the channel specified in the parameter value, without having to provide authentication credentials for each separate channel.>
    void take
  take page-token
    like native-string
    note <The *pageToken* parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.>
    void take

  line </youtube/v3/playlists>

  find <part>, loan part
  find <channelId>, loan channel-id
  find <hl>, loan hl
  find <id>, loan id
  find <maxResults>, loan max-results
  find <mine>, loan mine
  find <onBehalfOfContentOwner>, loan on-behalf-of-content-owner
  find <onBehalfOfContentOwnerChannel>, loan on-behalf-of-content-owner-channel
  find <pageToken>, loan page-token

  loot 200
    seed json, like playlist-list-response
    note <Successful response>