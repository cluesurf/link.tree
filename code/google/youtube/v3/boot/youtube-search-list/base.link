
load @drumwork/snow/base/list
  take form list

load @drumwork/snow/base/native-boolean
  take form native-boolean

load @drumwork/snow/base/native-integer
  take form native-integer

load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/youtube/v3/base/search-list-response
  take form search-list-response

boot youtube-search-list, name <youtube.search.list>
  deed get
  note <Retrieves a list of search resources>

  take part
    like list
      like native-string
    note <The *part* parameter specifies a comma-separated list of one or more search resource properties that the API response will include. Set the parameter value to snippet.>
  take channel-id
    like native-string
    note <Filter on resources belonging to this channelId.>
    void take
  take channel-type
    like native-string
    note <Add a filter on the channel search.>
    void take
  take event-type
    like native-string
    note <Filter on the livestream status of the videos.>
    void take
  take for-content-owner
    like native-boolean
    note <Search owned by a content owner.>
    void take
  take for-developer
    like native-boolean
    note <Restrict the search to only retrieve videos uploaded using the project id of the authenticated user.>
    void take
  take for-mine
    like native-boolean
    note <Search for the private videos of the authenticated user.>
    void take
  take location
    like native-string
    note <Filter on location of the video>
    void take
  take location-radius
    like native-string
    note <Filter on distance from the location (specified above).>
    void take
  take max-results
    like native-integer
    note <The *maxResults* parameter specifies the maximum number of items that should be returned in the result set.>
    void take
  take on-behalf-of-content-owner
    like native-string
    note <*Note:* This parameter is intended exclusively for YouTube content partners. The *onBehalfOfContentOwner* parameter indicates that the request's authorization credentials identify a YouTube CMS user who is acting on behalf of the content owner specified in the parameter value. This parameter is intended for YouTube content partners that own and manage many different YouTube channels. It allows content owners to authenticate once and get access to all their video and channel data, without having to provide authentication credentials for each individual channel. The CMS account that the user authenticates with must be linked to the specified YouTube content owner.>
    void take
  take order
    like native-string
    note <Sort order of the results.>
    void take
  take page-token
    like native-string
    note <The *pageToken* parameter identifies a specific page in the result set that should be returned. In an API response, the nextPageToken and prevPageToken properties identify other pages that could be retrieved.>
    void take
  take published-after
    like native-string
    note <Filter on resources published after this date.>
    void take
  take published-before
    like native-string
    note <Filter on resources published before this date.>
    void take
  take q
    like native-string
    note <Textual search terms to match.>
    void take
  take region-code
    like native-string
    note <Display the content as seen by viewers in this country.>
    void take
  take related-to-video-id
    like native-string
    note <Search related to a resource.>
    void take
  take relevance-language
    like native-string
    note <Return results relevant to this language.>
    void take
  take safe-search
    like native-string
    note <Indicates whether the search results should include restricted content as well as standard content.>
    void take
  take topic-id
    like native-string
    note <Restrict results to a particular topic.>
    void take
  take type
    like list
      like native-string
    note <Restrict results to a particular set of resource types from One Platform.>
    void take
  take video-caption
    like native-string
    note <Filter on the presence of captions on the videos.>
    void take
  take video-category-id
    like native-string
    note <Filter on videos in a specific category.>
    void take
  take video-definition
    like native-string
    note <Filter on the definition of the videos.>
    void take
  take video-dimension
    like native-string
    note <Filter on 3d videos.>
    void take
  take video-duration
    like native-string
    note <Filter on the duration of the videos.>
    void take
  take video-embeddable
    like native-string
    note <Filter on embeddable videos.>
    void take
  take video-license
    like native-string
    note <Filter on the license of the videos.>
    void take
  take video-syndicated
    like native-string
    note <Filter on syndicated videos.>
    void take
  take video-type
    like native-string
    note <Filter on videos of a specific type.>
    void take

  line </youtube/v3/search>

  find <part>, loan part
  find <channelId>, loan channel-id
  find <channelType>, loan channel-type
  find <eventType>, loan event-type
  find <forContentOwner>, loan for-content-owner
  find <forDeveloper>, loan for-developer
  find <forMine>, loan for-mine
  find <location>, loan location
  find <locationRadius>, loan location-radius
  find <maxResults>, loan max-results
  find <onBehalfOfContentOwner>, loan on-behalf-of-content-owner
  find <order>, loan order
  find <pageToken>, loan page-token
  find <publishedAfter>, loan published-after
  find <publishedBefore>, loan published-before
  find <q>, loan q
  find <regionCode>, loan region-code
  find <relatedToVideoId>, loan related-to-video-id
  find <relevanceLanguage>, loan relevance-language
  find <safeSearch>, loan safe-search
  find <topicId>, loan topic-id
  find <type>, loan type
  find <videoCaption>, loan video-caption
  find <videoCategoryId>, loan video-category-id
  find <videoDefinition>, loan video-definition
  find <videoDimension>, loan video-dimension
  find <videoDuration>, loan video-duration
  find <videoEmbeddable>, loan video-embeddable
  find <videoLicense>, loan video-license
  find <videoSyndicated>, loan video-syndicated
  find <videoType>, loan video-type

  loot 200
    seed json, like search-list-response
    note <Successful response>