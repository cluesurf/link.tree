
load @nerdbond/snow/base/native-string
  take form native-string

load @nerdbond/snow/googleapis.com/remotebuildexecution/v1alpha/base/google-devtools-remotebuildexecution-admin-v1alpha-list-worker-pools-response
  take form google-devtools-remotebuildexecution-admin-v1alpha-list-worker-pools-response

boot remotebuildexecution-projects-instances-workerpools-list, name <remotebuildexecution.projects.instances.workerpools.list>
  deed get
  note <Lists worker pools in an instance.>

  take parent
    like native-string
    note <Resource name of the instance. Format: `projects/[PROJECT_ID]/instances/[INSTANCE_ID]`.>
  take filter
    like native-string
    note <Optional. A filter expression that filters resources listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. String values are case-insensitive. The comparison operator must be either `:`, `=`, `!=`, `&gt;`, `&gt;=`, `&lt;=` or `&lt;`. The `:` operator can be used with string fields to match substrings. For non-string fields it is equivalent to the `=` operator. The `:*` comparison can be used to test whether a key has been defined. You can also filter on nested fields. To filter on multiple expressions, you can separate expression using `AND` and `OR` operators, using parentheses to specify precedence. If neither operator is specified, `AND` is assumed. Examples: Include only pools with more than 100 reserved workers: `(worker_count &gt; 100) (worker_config.reserved = true)` Include only pools with a certain label or machines of the e2-standard family: `worker_config.labels.key1 : * OR worker_config.machine_type: e2-standard`>
    void take

  line </v1alpha/{parent}/workerpools>

  find <filter>, loan filter

  loot 200
    seed json, like google-devtools-remotebuildexecution-admin-v1alpha-list-worker-pools-response
    note <Successful response>