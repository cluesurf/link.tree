
load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/cloudiot/v1/base/send-command-to-device-response
  take form send-command-to-device-response

boot cloudiot-projects-locations-registries-devices-send-command-to-device, name <cloudiot.projects.locations.registries.devices.sendCommandToDevice>
  deed post
  note <Sends a command to the specified device. In order for a device to be able to receive commands, it must: 1) be connected to Cloud IoT Core using the MQTT protocol, and 2) be subscribed to the group of MQTT topics specified by /devices/{device-id}/commands/#. This subscription will receive commands at the top-level topic /devices/{device-id}/commands as well as commands for subfolders, like /devices/{device-id}/commands/subfolder. Note that subscribing to specific subfolders is not supported. If the command could not be delivered to the device, this method will return an error; in particular, if the device is not subscribed, this method will return FAILED_PRECONDITION. Otherwise, this method will return OK. If the subscription is QoS 1, at least once delivery will be guaranteed; for QoS 0, no acknowledgment will be expected from the device.>

  take name
    like native-string
    note <Required. The name of the device. For example, `projects/p0/locations/us-central1/registries/registry0/devices/device0` or `projects/p0/locations/us-central1/registries/registry0/devices/{num_id}`.>
  take send-command-to-device-request, like send-command-to-device-request
    void take

  line </v1/{name}:sendCommandToDevice>

  seed json, loan send-command-to-device-request

  loot 200
    seed json, like send-command-to-device-response
    note <Successful response>