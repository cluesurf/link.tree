
load @treesurf/snow/base/native-string
  take form native-string

load @treesurf/snow/googleapis.com/dialogflow/v3beta1/base/google-cloud-dialogflow-cx-v3beta1-detect-intent-response
  take form google-cloud-dialogflow-cx-v3beta1-detect-intent-response

boot dialogflow-projects-locations-agents-sessions-detect-intent, name <dialogflow.projects.locations.agents.sessions.detectIntent>
  deed post
  note <Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).>

  take session
    like native-string
    note <Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version).>
  take google-cloud-dialogflow-cx-v3beta1-detect-intent-request, like google-cloud-dialogflow-cx-v3beta1-detect-intent-request
    void take

  line </v3beta1/{session}:detectIntent>

  seed json, loan google-cloud-dialogflow-cx-v3beta1-detect-intent-request

  loot 200
    seed json, like google-cloud-dialogflow-cx-v3beta1-detect-intent-response
    note <Successful response>