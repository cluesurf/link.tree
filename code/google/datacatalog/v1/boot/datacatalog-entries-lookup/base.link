
load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/datacatalog/v1/base/google-cloud-datacatalog-v1-entry
  take form google-cloud-datacatalog-v1-entry

boot datacatalog-entries-lookup, name <datacatalog.entries.lookup>
  note <Gets an entry by its target resource name. The resource name comes from the source Google Cloud Platform service.>

  take fully-qualified-name
    like native-string
    note <Fully qualified name (FQN) of the resource. FQNs take two forms: * For non-regionalized resources: `{SYSTEM}:{PROJECT}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` * For regionalized resources: `{SYSTEM}:{PROJECT}.{LOCATION_ID}.{PATH_TO_RESOURCE_SEPARATED_WITH_DOTS}` Example for a DPMS table: `dataproc_metastore:{PROJECT_ID}.{LOCATION_ID}.{INSTANCE_ID}.{DATABASE_ID}.{TABLE_ID}`>
    void take
  take linked-resource
    like native-string
    note <The full name of the Google Cloud Platform resource the Data Catalog entry represents. For more information, see [Full Resource Name] (https://cloud.google.com/apis/design/resource_names#full_resource_name). Full names are case-sensitive. For example: * `//bigquery.googleapis.com/projects/{PROJECT_ID}/datasets/{DATASET_ID}/tables/{TABLE_ID}` * `//pubsub.googleapis.com/projects/{PROJECT_ID}/topics/{TOPIC_ID}`>
    void take
  take sql-resource
    like native-string
    note <The SQL name of the entry. SQL names are case-sensitive. Examples: * `pubsub.topic.{PROJECT_ID}.{TOPIC_ID}` * `pubsub.topic.{PROJECT_ID}.`\``{TOPIC.ID.SEPARATED.WITH.DOTS}`\` * `bigquery.table.{PROJECT_ID}.{DATASET_ID}.{TABLE_ID}` * `bigquery.dataset.{PROJECT_ID}.{DATASET_ID}` * `datacatalog.entry.{PROJECT_ID}.{LOCATION_ID}.{ENTRY_GROUP_ID}.{ENTRY_ID}` Identifiers (`*_ID`) should comply with the [Lexical structure in Standard SQL] (https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical).>
    void take

  line </v1/entries:lookup>

  find <fullyQualifiedName>, loan fully-qualified-name
  find <linkedResource>, loan linked-resource
  find <sqlResource>, loan sql-resource

  loot 200
    seed json, like google-cloud-datacatalog-v1-entry
    note <Successful response>