
load @termsurf/snow/base/native-string
  take form native-string

boot storage-objects-delete, name <storage.objects.delete>
  deed delete
  note <Deletes an object and its metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.>

  take bucket
    like native-string
    note <Name of the bucket in which the object resides.>
  take object
    like native-string
    note <Name of the object. For information about how to URL encode object names to be path safe, see Encoding URI Path Parts.>
  take generation
    like native-string
    note <If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).>
    void take
  take if-generation-match
    like native-string
    note <Makes the operation conditional on whether the object's current generation matches the given value. Setting to 0 makes the operation succeed only if there are no live versions of the object.>
    void take
  take if-generation-not-match
    like native-string
    note <Makes the operation conditional on whether the object's current generation does not match the given value. If no live object exists, the precondition fails. Setting to 0 makes the operation succeed only if there is a live version of the object.>
    void take
  take if-metageneration-match
    like native-string
    note <Makes the operation conditional on whether the object's current metageneration matches the given value.>
    void take
  take if-metageneration-not-match
    like native-string
    note <Makes the operation conditional on whether the object's current metageneration does not match the given value.>
    void take
  take provisional-user-project
    like native-string
    note <The project to be billed for this request if the target bucket is requester-pays bucket.>
    void take
  take user-project
    like native-string
    note <The project to be billed for this request. Required for Requester Pays buckets.>
    void take

  line </b/{bucket}/o/{object}>

  find <generation>, loan generation
  find <ifGenerationMatch>, loan if-generation-match
  find <ifGenerationNotMatch>, loan if-generation-not-match
  find <ifMetagenerationMatch>, loan if-metageneration-match
  find <ifMetagenerationNotMatch>, loan if-metageneration-not-match
  find <provisionalUserProject>, loan provisional-user-project
  find <userProject>, loan user-project

  loot 200
    note <Successful response>