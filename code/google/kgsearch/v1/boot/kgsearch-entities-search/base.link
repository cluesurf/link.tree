
load @treesurf/snow/base/list
  take form list

load @treesurf/snow/base/native-boolean
  take form native-boolean

load @treesurf/snow/base/native-integer
  take form native-integer

load @treesurf/snow/base/native-string
  take form native-string

load @treesurf/snow/googleapis.com/kgsearch/v1/base/search-response
  take form search-response

boot kgsearch-entities-search, name <kgsearch.entities.search>
  deed get
  note <Searches Knowledge Graph for entities that match the constraints. A list of matched entities will be returned in response, which will be in JSON-LD format and compatible with http://schema.org>

  take ids
    like list
      like native-string
    note <The list of entity id to be used for search instead of query string. To specify multiple ids in the HTTP request, repeat the parameter in the URL as in ...?ids=A&ids=B>
    void take
  take indent
    like native-boolean
    note <Enables indenting of json results.>
    void take
  take languages
    like list
      like native-string
    note <The list of language codes (defined in ISO 693) to run the query with, e.g. 'en'.>
    void take
  take limit
    like native-integer
    note <Limits the number of entities to be returned.>
    void take
  take prefix
    like native-boolean
    note <Enables prefix match against names and aliases of entities>
    void take
  take query
    like native-string
    note <The literal query string for search.>
    void take
  take types
    like list
      like native-string
    note <Restricts returned entities with these types, e.g. Person (as defined in http://schema.org/Person). If multiple types are specified, returned entities will contain one or more of these types.>
    void take

  line </v1/entities:search>

  find <ids>, loan ids
  find <indent>, loan indent
  find <languages>, loan languages
  find <limit>, loan limit
  find <prefix>, loan prefix
  find <query>, loan query
  find <types>, loan types

  loot 200
    seed json, like search-response
    note <Successful response>