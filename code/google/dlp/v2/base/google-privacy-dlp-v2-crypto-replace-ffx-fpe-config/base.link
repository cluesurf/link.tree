
load @nerdbond/snow/googleapis.com/dlp/v2/base/google-privacy-dlp-v2-crypto-key
  take form google-privacy-dlp-v2-crypto-key

load @nerdbond/snow/googleapis.com/dlp/v2/base/google-privacy-dlp-v2-field-id
  take form google-privacy-dlp-v2-field-id

load @nerdbond/snow/googleapis.com/dlp/v2/base/google-privacy-dlp-v2-info-type
  take form google-privacy-dlp-v2-info-type

form google-privacy-dlp-v2-crypto-replace-ffx-fpe-config, name <GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig>
  note <Replaces an identifier with a surrogate using Format Preserving Encryption (FPE) with the FFX mode of operation; however when used in the `ReidentifyContent` API method, it serves the opposite function by reversing the surrogate back into the original identifier. The identifier must be encoded as ASCII. For a given crypto key and context, the same identifier will be replaced with the same surrogate. Identifiers must be at least two characters long. In the case that the identifier is the empty string, it will be skipped. See https://cloud.google.com/dlp/docs/pseudonymization to learn more. Note: We recommend using CryptoDeterministicConfig for all use cases which do not require preserving the input alphabet space and size, plus warrant referential integrity.>
  take common-alphabet, name <commonAlphabet>
    void take
  take context, name <context>
    like google-privacy-dlp-v2-field-id
    void take
  take crypto-key, name <cryptoKey>
    like google-privacy-dlp-v2-crypto-key
    void take
  take custom-alphabet, name <customAlphabet>
    void take
  take radix, name <radix>
    void take
  take surrogate-info-type, name <surrogateInfoType>
    like google-privacy-dlp-v2-info-type
    void take