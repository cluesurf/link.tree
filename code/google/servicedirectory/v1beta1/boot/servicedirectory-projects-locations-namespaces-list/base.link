
load @drumwork/snow/base/native-integer
  take form native-integer

load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/servicedirectory/v1beta1/base/list-namespaces-response
  take form list-namespaces-response

boot servicedirectory-projects-locations-namespaces-list, name <servicedirectory.projects.locations.namespaces.list>
  deed get
  note <Lists all namespaces.>

  take parent
    like native-string
    note <Required. The resource name of the project and location whose namespaces you'd like to list.>
  take filter
    like native-string
    note <Optional. The filter to list results by. General `filter` string syntax: ` ()` * `` can be `name` or `labels.` for map field * `` can be `&lt;`, `&gt;`, `&lt;=`, `&gt;=`, `!=`, `=`, `:`. Of which `:` means `HAS`, and is roughly the same as `=` * `` must be the same data type as field * `` can be `AND`, `OR`, `NOT` Examples of valid filters: * `labels.owner` returns namespaces that have a label with the key `owner`, this is the same as `labels:owner` * `labels.owner=sd` returns namespaces that have key/value `owner=sd` * `name&gt;projects/my-project/locations/us-east1/namespaces/namespace-c` returns namespaces that have name that is alphabetically later than the string, so "namespace-e" is returned but "namespace-a" is not * `labels.owner!=sd AND labels.foo=bar` returns namespaces that have `owner` in label key but value is not `sd` AND have key/value `foo=bar` * `doesnotexist.foo=bar` returns an empty list. Note that namespace doesn't have a field called "doesnotexist". Since the filter does not match any namespaces, it returns no results For more information about filtering, see [API Filtering](https://aip.dev/160).>
    void take
  take order-by
    like native-string
    note <Optional. The order to list results by. General `order_by` string syntax: ` () (,)` * `` allows value: `name` * `` ascending or descending order by ``. If this is left blank, `asc` is used Note that an empty `order_by` string results in default order, which is order by `name` in ascending order.>
    void take
  take page-size
    like native-integer
    note <Optional. The maximum number of items to return.>
    void take
  take page-token
    like native-string
    note <Optional. The next_page_token value returned from a previous List request, if any.>
    void take

  line </v1beta1/{parent}/namespaces>

  find <filter>, loan filter
  find <orderBy>, loan order-by
  find <pageSize>, loan page-size
  find <pageToken>, loan page-token

  loot 200
    seed json, like list-namespaces-response
    note <Successful response>