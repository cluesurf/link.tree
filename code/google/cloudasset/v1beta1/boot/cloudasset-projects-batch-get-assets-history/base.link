
load @nerdbond/snow/base/list
  take form list

load @nerdbond/snow/base/native-string
  take form native-string

load @nerdbond/snow/googleapis.com/cloudasset/v1beta1/base/batch-get-assets-history-response
  take form batch-get-assets-history-response

boot cloudasset-projects-batch-get-assets-history, name <cloudasset.projects.batchGetAssetsHistory>
  deed get
  note <Batch gets the update history of assets that overlap a time window. For IAM_POLICY content, this API outputs history when the asset and its attached IAM POLICY both exist. This can create gaps in the output history. Otherwise, this API outputs history with asset in both non-delete or deleted status. If a specified asset does not exist, this API returns an INVALID_ARGUMENT error.>

  take parent
    like native-string
    note <Required. The relative name of the root asset. It can only be an organization number (such as "organizations/123"), a project ID (such as "projects/my-project-id")", or a project number (such as "projects/12345").>
  take asset-names
    like list
      like native-string
    note <A list of the full names of the assets. For example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. See [Resource Names](https://cloud.google.com/apis/design/resource_names#full_resource_name) for more info. The request becomes a no-op if the asset name list is empty, and the max size of the asset name list is 100 in one request.>
    void take
  take content-type
    like native-string
    note <Optional. The content type.>
    void take
  take read-time-window-end-time
    like native-string
    note <End time of the time window (inclusive). If not specified, the current timestamp is used instead.>
    void take
  take read-time-window-start-time
    like native-string
    note <Start time of the time window (exclusive).>
    void take

  line </v1beta1/{parent}:batchGetAssetsHistory>

  find <assetNames>, loan asset-names
  find <contentType>, loan content-type
  find <readTimeWindow.endTime>, loan read-time-window-end-time
  find <readTimeWindow.startTime>, loan read-time-window-start-time

  loot 200
    seed json, like batch-get-assets-history-response
    note <Successful response>