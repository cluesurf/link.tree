
load @termsurf/snow/base/native-boolean
  take form native-boolean

load @termsurf/snow/base/native-string
  take form native-string

load @termsurf/snow/googleapis.com/logging/v2/base/log-sink
  take form log-sink

boot logging-sinks-create, name <logging.sinks.create>
  deed post
  note <Creates a sink that exports specified log entries to a destination. The export of newly-ingested log entries begins immediately, unless the sink's writer_identity is not permitted to write to the destination. A sink can export log entries only from the resource owning the sink.>

  take parent
    like native-string
    note <Required. The resource in which to create the sink: "projects/[PROJECT_ID]" "organizations/[ORGANIZATION_ID]" "billingAccounts/[BILLING_ACCOUNT_ID]" "folders/[FOLDER_ID]" For examples:"projects/my-project" "organizations/123456789">
  take unique-writer-identity
    like native-boolean
    note <Optional. Determines the kind of IAM identity returned as writer_identity in the new sink. If this value is omitted or set to false, and if the sink's parent is a project, then the value returned as writer_identity is the same group or service account used by Cloud Logging before the addition of writer identities to this API. The sink's destination must be in the same project as the sink itself.If this field is set to true, or if the sink is owned by a non-project resource such as an organization, then the value of writer_identity will be a unique service account used only for exports from the new sink. For more information, see writer_identity in LogSink.>
    void take
  take log-sink, like log-sink
    void take

  line </v2/{parent}/sinks>

  find <uniqueWriterIdentity>, loan unique-writer-identity

  seed json, loan log-sink

  loot 200
    seed json, like log-sink
    note <Successful response>
