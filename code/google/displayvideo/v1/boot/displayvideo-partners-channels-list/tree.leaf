
load @termsurf/snow/base/native-integer
  take form native-integer

load @termsurf/snow/base/native-string
  take form native-string

load @termsurf/snow/googleapis.com/displayvideo/v1/base/list-channels-response
  take form list-channels-response

boot displayvideo-partners-channels-list, name <displayvideo.partners.channels.list>
  deed get
  note <Lists channels for a partner or advertiser.>

  take partner-id
    like native-string
    note <The ID of the partner that owns the channels.>
  take advertiser-id
    like native-string
    note <The ID of the advertiser that owns the channels.>
    void take
  take filter
    like native-string
    note <Allows filtering by channel fields. Supported syntax: * Filter expressions for channel currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All channels for which the display name contains "google": `displayName : "google"`. The length of this field should be no more than 500 characters.>
    void take
  take order-by
    like native-string
    note <Field by which to sort the list. Acceptable values are: * `displayName` (default) * `channelId` The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be added to the field name. Example: `displayName desc`.>
    void take
  take page-size
    like native-integer
    note <Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.>
    void take
  take page-token
    like native-string
    note <A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListChannels` method. If not specified, the first page of results will be returned.>
    void take

  line </v1/partners/{partner-id}/channels>

  find <advertiserId>, loan advertiser-id
  find <filter>, loan filter
  find <orderBy>, loan order-by
  find <pageSize>, loan page-size
  find <pageToken>, loan page-token

  loot 200
    seed json, like list-channels-response
    note <Successful response>