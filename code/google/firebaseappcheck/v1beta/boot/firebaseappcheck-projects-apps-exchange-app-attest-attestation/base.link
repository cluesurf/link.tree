
load @drumwork/snow/base/native-string
  take form native-string

load @drumwork/snow/googleapis.com/firebaseappcheck/v1beta/base/google-firebase-appcheck-v1beta-exchange-app-attest-attestation-response
  take form google-firebase-appcheck-v1beta-exchange-app-attest-attestation-response

boot firebaseappcheck-projects-apps-exchange-app-attest-attestation, name <firebaseappcheck.projects.apps.exchangeAppAttestAttestation>
  deed post
  note <Accepts an App Attest CBOR attestation and verifies it with Apple using your preconfigured team and bundle IDs. If valid, returns an attestation artifact that can later be exchanged for an AppCheckToken using ExchangeAppAttestAssertion. For convenience and performance, this method's response object will also contain an AppCheckToken (if the verification is successful).>

  take app
    like native-string
    note <Required. The relative resource name of the iOS app, in the format: ``` projects/{project_number}/apps/{app_id} ``` If necessary, the `project_number` element can be replaced with the project ID of the Firebase project. Learn more about using project identifiers in Google's [AIP 2510](https://google.aip.dev/cloud/2510) standard.>
  take google-firebase-appcheck-v1beta-exchange-app-attest-attestation-request, like google-firebase-appcheck-v1beta-exchange-app-attest-attestation-request
    void take

  line </v1beta/{app}:exchangeAppAttestAttestation>

  seed json, loan google-firebase-appcheck-v1beta-exchange-app-attest-attestation-request

  loot 200
    seed json, like google-firebase-appcheck-v1beta-exchange-app-attest-attestation-response
    note <Successful response>