
load @termsurf/snow/base/native-boolean
  take form native-boolean

load @termsurf/snow/base/native-string
  take form native-string

load @termsurf/snow/googleapis.com/apigee/v1/base/google-cloud-apigee-v1-list-api-products-response
  take form google-cloud-apigee-v1-list-api-products-response

boot apigee-organizations-apiproducts-list, name <apigee.organizations.apiproducts.list>
  deed get
  note <Lists all API product names for an organization. Filter the list by passing an `attributename` and `attibutevalue`. The maximum number of API products returned is 1000. You can paginate the list of API products returned using the `startKey` and `count` query parameters.>

  take parent
    like native-string
    note <Required. Name of the organization. Use the following structure in your request: `organizations/{org}`>
  take attributename
    like native-string
    note <Name of the attribute used to filter the search.>
    void take
  take attributevalue
    like native-string
    note <Value of the attribute used to filter the search.>
    void take
  take count
    like native-string
    note <Enter the number of API products you want returned in the API call. The limit is 1000.>
    void take
  take expand
    like native-boolean
    note <Flag that specifies whether to expand the results. Set to `true` to get expanded details about each API.>
    void take
  take start-key
    like native-string
    note <Gets a list of API products starting with a specific API product in the list. For example, if you're returning 50 API products at a time (using the `count` query parameter), you can view products 50-99 by entering the name of the 50th API product in the first API (without using `startKey`). Product name is case sensitive.>
    void take

  line </v1/{parent}/apiproducts>

  find <attributename>, loan attributename
  find <attributevalue>, loan attributevalue
  find <count>, loan count
  find <expand>, loan expand
  find <startKey>, loan start-key

  loot 200
    seed json, like google-cloud-apigee-v1-list-api-products-response
    note <Successful response>