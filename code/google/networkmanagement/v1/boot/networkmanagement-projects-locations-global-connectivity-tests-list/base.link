
load @wavebond/snow/base/native-integer
  take form native-integer

load @wavebond/snow/base/native-string
  take form native-string

load @wavebond/snow/googleapis.com/networkmanagement/v1/base/list-connectivity-tests-response
  take form list-connectivity-tests-response

boot networkmanagement-projects-locations-global-connectivity-tests-list, name <networkmanagement.projects.locations.global.connectivityTests.list>
  deed get
  note <Lists all Connectivity Tests owned by a project.>

  take parent
    like native-string
    note <Required. The parent resource of the Connectivity Tests: `projects/{project_id}/locations/global`>
  take filter
    like native-string
    note <Lists the `ConnectivityTests` that match the filter expression. A filter expression filters the resources listed in the response. The expression must be of the form ` ` where operators: `&lt;`, `&gt;`, `&lt;=`, `&gt;=`, `!=`, `=`, `:` are supported (colon `:` represents a HAS operator which is roughly synonymous with equality). can refer to a proto or JSON field, or a synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name = "projects/proj-1/locations/global/connectivityTests/test-1 - Filter by labels: - Resources that have a key called `foo` labels.foo:* - Resources that have a key called `foo` whose value is `bar` labels.foo = bar>
    void take
  take order-by
    like native-string
    note <Field to use to sort the list.>
    void take
  take page-size
    like native-integer
    note <Number of `ConnectivityTests` to return.>
    void take
  take page-token
    like native-string
    note <Page token from an earlier query, as returned in `next_page_token`.>
    void take

  line </v1/{parent}/connectivityTests>

  find <filter>, loan filter
  find <orderBy>, loan order-by
  find <pageSize>, loan page-size
  find <pageToken>, loan page-token

  loot 200
    seed json, like list-connectivity-tests-response
    note <Successful response>