
load @wavebond/snow/googleapis.com/bigquery/v2/base/clustering
  take form clustering

load @wavebond/snow/googleapis.com/bigquery/v2/base/dataset-reference
  take form dataset-reference

load @wavebond/snow/googleapis.com/bigquery/v2/base/encryption-configuration
  take form encryption-configuration

load @wavebond/snow/googleapis.com/bigquery/v2/base/range-partitioning
  take form range-partitioning

load @wavebond/snow/googleapis.com/bigquery/v2/base/table-reference
  take form table-reference

load @wavebond/snow/googleapis.com/bigquery/v2/base/time-partitioning
  take form time-partitioning

form job-configuration-query, name <JobConfigurationQuery>
  take allow-large-results, name <allowLargeResults>
    void take
  take clustering, name <clustering>
    like clustering
    void take
  take connection-properties, name <connectionProperties>
    void take
  take create-disposition, name <createDisposition>
    void take
  take create-session, name <createSession>
    void take
  take default-dataset, name <defaultDataset>
    like dataset-reference
    void take
  take destination-encryption-configuration, name <destinationEncryptionConfiguration>
    like encryption-configuration
    void take
  take destination-table, name <destinationTable>
    like table-reference
    void take
  take flatten-results, name <flattenResults>
    void take
  take maximum-billing-tier, name <maximumBillingTier>
    void take
  take maximum-bytes-billed, name <maximumBytesBilled>
    void take
  take parameter-mode, name <parameterMode>
    void take
  take preserve-nulls, name <preserveNulls>
    void take
  take priority, name <priority>
    void take
  take query, name <query>
    void take
  take query-parameters, name <queryParameters>
    void take
  take range-partitioning, name <rangePartitioning>
    like range-partitioning
    void take
  take schema-update-options, name <schemaUpdateOptions>
    void take
  take table-definitions, name <tableDefinitions>
    void take
  take time-partitioning, name <timePartitioning>
    like time-partitioning
    void take
  take use-legacy-sql, name <useLegacySql>
    void take
  take use-query-cache, name <useQueryCache>
    void take
  take user-defined-function-resources, name <userDefinedFunctionResources>
    void take
  take write-disposition, name <writeDisposition>
    void take